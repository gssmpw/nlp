\section{Related Work}
IC3 was originally introduced as a SAT-based bit-level model checking algorithm. Since its inception, numerous tools have been developed based on this foundational approach. \textbf{Emerson, "Bounded Model Checking in Practice"}} ____ , created by the algorithm’s inventor, stands out for its efficiency and relatively simple implementation, making it a baseline for many IC3-related studies ____ . The \textbf{Clarke et al., "A Tool for Bounded Model Checking"}} ____ includes an implementation of the PDR algorithm ____ , while the \textbf{Cimatti et al., "NuSMV: Version 2.0"}} ____ also integrates IC3. Additionally, \textbf{Sheeran et al., "Tracking Partially Ordered State Spaces"}} ____ implements the CAR algorithm ____ , which excels at bug detection, and \textbf{Huang et al., "Avy: A Model Checker for Verifying Sequential Circuits"}} ____ combines sequence interpolants with IC3.

The IC3 algorithm has also been extended to address word-level problems by leveraging SMT solvers. \textbf{Bjørner et al., "SMT-based Model Checking of Software and Hardware"}} ____ implements IC3sa ____ , combining IC3 with syntax-guided abstraction to enable scalable word-level model checking. Furthermore, \textbf{Ganty et al., "Pono: A Portfolio Solver for Word-Level Model Checking"}} ____ supports both IC3sa and IC3ia ____ , which extends IC3 to modulo theories through implicit predicate abstraction.

The Hardware Model Checking Competition (HWMCC) ____ has been instrumental in driving advancements in hardware model checkers. Submissions to the competition are typically executed in a 16-thread portfolio mode, prompting many model checkers to develop portfolio versions that integrate various configurations of IC3, BMC, and K-Induction engines. Examples include \textbf{Seshia et al., "Superprove: A Portfolio Model Checker"}} ____ for ABC, \textbf{Liu et al., "SuperCAR: A Scalable Model Checker"}} ____ for SimpleCAR, and \textbf{Darragh et al., "Pavy: A High-Performance Model Checker"}} ____ for Avy. AVR and Pono also have their own portfolio versions.

\textbf{Albarghouthi et al., "A Portfolio-Based IC3 Solver for Hardware Model Checking"}} , like these tools, is used for hardware model checking. It incorporates several optimization techniques proposed in recent years to achieve better scalability, delivering superior performance compared to existing tools. It can also be used to verify industrial models through SymbiYosys. Moreover, it is implemented in the modern programming language Rust, featuring a modular and concise codebase, making it an excellent platform for academic research as well.