@InProceedings{10.1007/978-3-642-14162-1_10,
author="Alistarh, Dan
and Gilbert, Seth
and Guerraoui, Rachid
and Zadimoghaddam, Morteza",
editor="Abramsky, Samson
and Gavoille, Cyril
and Kirchner, Claude
and Meyer auf der Heide, Friedhelm
and Spirakis, Paul G.",
title="How Efficient Can Gossip Be? (On the Cost of Resilient Information Exchange)",
booktitle="Automata, Languages and Programming",
year="2010",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="115--126",
abstract="Gossip, also known as epidemic dissemination, is becoming an increasingly popular technique in distributed systems. Yet, it has remained a partially open question: how robust are such protocols? We consider a natural extension of the random phone-call model (introduced by Karp et al. [1]), and we analyze two different notions of robustness: the ability to tolerate adaptive failures, and the ability to tolerate oblivious failures.",
isbn="978-3-642-14162-1"
}

@inproceedings{10.1145/1248377.1248401,
author = {Kuhn, Fabian and Locher, Thomas and Wattenhofer, Rogert},
title = {Tight bounds for distributed selection},
year = {2007},
isbn = {9781595936677},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/1248377.1248401},
doi = {10.1145/1248377.1248401},
abstract = {We revisit the problem of distributed k-selection where, given a general connected graph of diameter D consisting of n nodes in which each node holds a numeric element, the goal is to determine the kth smallest of these elements. In our model, there is no imposed relation between the magnitude of the stored elements and the number of nodes in the graph. We propose a randomized algorithm whose time complexity is O(DlogD n) with high probability. Additionally, a deterministic algorithm with a worst-case time complexity of O(Dlog2<over>D n) is presented which considerably improves the best known bound for deterministic algorithms. Moreover, we prove a lower bound of Ω(D logDn) for any randomized or deterministic algorithm, implying that the randomized algorithm is asymptotically optimal.},
booktitle = {Proceedings of the Nineteenth Annual ACM Symposium on Parallel Algorithms and Architectures},
pages = {145–153},
numpages = {9},
keywords = {time complexity, sensor networks, median, in-network aggregation, distributed algorithms, data aggregation},
location = {San Diego, California, USA},
series = {SPAA '07}
}

@inproceedings{10.1145/2933057.2933097,
author = {Ghaffari, Mohsen and Parter, Merav},
title = {A Polylogarithmic Gossip Algorithm for Plurality Consensus},
year = {2016},
isbn = {9781450339643},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2933057.2933097},
doi = {10.1145/2933057.2933097},
abstract = {Consider n anonymous nodes each initially supporting an opinion in {1, 2, …, k} and suppose that they should all learn the opinion with the largest support. Per round, each node contacts a random other node and exchanges B bits with it, where typically B is at most O(log n).This basic distributed computing problem is called the plurality consensus problem (in the gossip model) and it has received extensive attention. An efficient plurality protocol is one that converges to the plurality consensus as fast as possible, and the standard assumption is that each node has memory at most polylogarithmic in n. The best known time bound is due to Becchetti et al. [SODA'15], reaching plurality consensus in O(k log n) rounds using log(k+1) bits of local memory, under some mild assumptions. As stated by Becchetti et al., achieving a poly-logarithmic time complexity remained an open question.Resolving this question, we present an algorithm that with high probability reaches plurality consensus in O(log k log n) rounds, while having message and memory size of log k + O (1) bits. This even holds under considerably more relaxed assumptions regarding the initial bias (towards plurality) compared to those of prior work. The algorithm is based on a very simple and arguably natural mechanism.},
booktitle = {Proceedings of the 2016 ACM Symposium on Principles of Distributed Computing},
pages = {117–126},
numpages = {10},
keywords = {consensus, gossip algorithms, network dynamics},
location = {Chicago, Illinois, USA},
series = {PODC '16}
}

@inproceedings{10.1145/41840.41841,
author = {Demers, Alan and Greene, Dan and Hauser, Carl and Irish, Wes and Larson, John and Shenker, Scott and Sturgis, Howard and Swinehart, Dan and Terry, Doug},
title = {Epidemic algorithms for replicated database maintenance},
year = {1987},
isbn = {089791239X},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/41840.41841},
doi = {10.1145/41840.41841},
booktitle = {Proceedings of the Sixth Annual ACM Symposium on Principles of Distributed Computing},
pages = {1–12},
numpages = {12},
location = {Vancouver, British Columbia, Canada},
series = {PODC '87}
}

@article{652705be-95a4-3886-b436-08eb167091e1,
 ISSN = {00361399},
 URL = {http://www.jstor.org/stable/2101696},
 abstract = {Suppose that one of n people knows a rumor. At the first stage, he passes the rumor to someone chosen at random; at each stage, each person already informed ("knower") communicates the rumor to a person chosen at random and independently of all other past and present choices. Denote by Sn the random number of stages before everybody is informed. How large is Sn typically? Frieze and Grimmet, who introduced this problem, proved that, in probability, Sn/(log2 n + log n) → 1. In this paper we show that, in fact, Sn = log2 n + log n + O(1) in probability. Our proof demonstrates that the number I(t) of persons informed after t stages obeys very closely, with high probability, a deterministic equation I(t + 1) = n - (n - I(t)) exp (- I(t)/n), t ≥ 0. A case when each knower passes the rumor to several members at every stage is also discussed.},
 author = {Boris Pittel},
 journal = {SIAM Journal on Applied Mathematics},
 number = {1},
 pages = {213--223},
 publisher = {Society for Industrial and Applied Mathematics},
 title = {On Spreading a Rumor},
 urldate = {2024-10-02},
 volume = {47},
 year = {1987}
}

@INPROCEEDINGS{892324,
  author={Karp, R. and Schindelhauer, C. and Shenker, S. and Vocking, B.},
  booktitle={Proceedings 41st Annual Symposium on Foundations of Computer Science}, 
  title={Randomized rumor spreading}, 
  year={2000},
  volume={},
  number={},
  pages={565-574},
  keywords={Robustness;Computer science;Distributed databases;Computer crashes},
  doi={10.1109/SFCS.2000.892324}}

@article{BLUM1973448,
title = {Time bounds for selection},
journal = {Journal of Computer and System Sciences},
volume = {7},
number = {4},
pages = {448-461},
year = {1973},
issn = {0022-0000},
doi = {https://doi.org/10.1016/S0022-0000(73)80033-9},
url = {https://www.sciencedirect.com/science/article/pii/S0022000073800339},
author = {Manuel Blum and Robert W. Floyd and Vaughan Pratt and Ronald L. Rivest and Robert E. Tarjan},
abstract = {The number of comparisons required to select the i-th smallest of n numbers is shown to be at most a linear function of n by analysis of a new selection algorithm—PICK. Specifically, no more than 5.4305 n comparisons are ever required. This bound is improved for extreme values of i, and a new lower bound on the requisite number of comparisons is also proved.}
}

@inproceedings{haeupler2018optimal,
  title={Optimal gossip algorithms for exact and approximate quantile computations},
  author={Haeupler, Bernhard and Mohapatra, Jeet and Su, Hsin-Hao},
  booktitle={Proceedings of the 2018 ACM Symposium on Principles of Distributed Computing},
  pages={179--188},
  year={2018}
}

@inproceedings{kempe2003gossip,
  title={Gossip-based computation of aggregate information},
  author={Kempe, David and Dobra, Alin and Gehrke, Johannes},
  booktitle={44th Annual IEEE Symposium on Foundations of Computer Science, 2003. Proceedings.},
  pages={482--491},
  year={2003},
  organization={IEEE}
}

