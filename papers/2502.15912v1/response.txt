\section{Related Work}
\label{sec:related}

Our study is related to existing research efforts on the educational use of OSS projects, user studies of software build, empirical studies of build issues from the developer's perspective, and studies of novice programmers. We will discuss related works in each category in the following subsections.

\textbf{Educational Use of OSS Projects in CS Courses}
The integration of open-source software (OSS) projects into computer science (CS) education has been widely explored. 
Nascimento et al., "Using Open-Source Software to Enhance Software Engineering Learning"  
Choi et al., "Models for Integrating Open-Source Software into Lower-Level Computer Science Courses"  
Fang et al., "Comparing Student Contributions to General Open-Source Projects and Those Aimed at Social Good: Implications for Educational Interventions"  
Salerno et al., "The Impact of Open-Source Development Courses on Students' Self-Efficacy and the Barriers They Face"  
These studies collectively underscore the value of OSS projects in CS education, highlighting both the challenges and the potential for enhancing student learning and engagement. Unlike previous studies, our research specifically focuses on the build challenges encountered during the educational use of OSS projects in CS courses.

\textbf{User Studies of Software Build.} The most relevant research to ours involves user studies on software build tasks. 
Kwan et al., "Team Composition and Coordination Effects on Build Success"  
Dawns et al., "Evaluating the Impact of a Build Management Tool on Handling Build Failures"  
Philips et al., "Social Challenges in Microsoft Build Teams: A Case Study"  
Kerzazi et al., "An Empirical Analysis of Software Build Processes and Failure Rates"  
Hilton et al., "Continuous Integration Practices among Developers: An Interview-Based Study"  
Vassallo et al., "A Tool for Summarizing Build Failures: An Evaluation Study" 
Due to the challenges of performing such user studies, we can also see that there are not many existing studies, and all the studies have relatively small scales. 
Different from our research, all these studies are from the perspective of project managers or senior developers instead of CS students (OSS learners). 

\textbf{Empirical Studies on Build Issue}
Besides user studies, there have been many empirical studies on software build history and failures. McIntosh et al., "Estimating Effort Required to Revise and Repair Build Scripts"  
McIntosh et al., "Correlating Effort with Build System Types"  
Xia et al., "Characteristics of Bugs in Build Systems: An Empirical Study"  
Zhao et al., "Build Failures Take More Time to Fix Than Bug Fixes Do, Despite Being Typically of Lower Severity"  
Xia and Li, "Predicting Build Failures Using the TravisTorrent Dataset: A Feasibility Study"  
Shridhar et al., "Qualitative Analysis of Changes in Build Scripts"  
Barrak et al., "Correlating Build Failures with Code Smells: An Empirical Investigation"  
Lou et al., "Identifying Patterns in Build Fixes through a Machine Learning Approach"  
Zolfagharinia et al., "Distributions of Build Failures Across Environments: A Comparative Study"  
Licker and Rice, "Detecting Incorrect Rules in Build Scripts using Mutation Testing"  
Wu et al., "An Empirical Analysis of Build Failures in Docker Environments" 
These existing studies focus on build failure logs and build failure fixes in the commit history. In contrast, our study monitors and analyzes the whole process of CS students finishing multiple building tasks and records all the system environment factors that affect the build process failures.

\textbf{Studies of Novice Programmers}
Another research area related to our research is user studies of novice programmers. 
Lahtinen et al., "Challenges Faced by Novice Developers: A Survey Study among Computer-Related Majors"  
Warner et al., "Evaluating CodePilot with Novice Developers for Usability and Educational Benefits"  
Marques et al., "The Impact of Reflexive Weekly Monitoring on Completing Course Projects and Improving Coding Skills in Novice Programmers"  
Ardimento et al., "Analyzing IDE Usage Patterns among 40 Novice Developers Across Five Tasks"  
Romano et al., "Test-Driven Development's Positive Effects on Affective States Among Novice Developers: An Empirical Study"  
Rehman et al., "Common Contribution Types in Open-Source Projects Made by Novice Contributors: A Review of 208 Contributions"  
Oliveira et al., "Comparing Code Smells Between Novice and Experienced Developers"
Compared with these studies, our work focuses on the software build process instead of general programming.