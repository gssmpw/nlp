\section{Related Work}
%In this section, commercial as well as open-source educational tools for automated feedback and grading are covered. 
%Furthermore, we report on some of the latest developments in open-source large language models that can be hosted locally. % diese Einleitung und insb der letzte Satz gefallen mir nicht... Vllt einfach genz weglassen
\iffalse
Current solutions, ... => put into related work
- privacy issues: models on foreign cloud servers such as chatGPT by openai
- often rely on proprietary, closed source models
- tutors are put out of "the loop" / student solutions are stored in different files (unnecessary overhead for swapping between solutions) / feedback not immediate
- limited support to directly grade code / combine grading with unit tests
\fi

\subsubsection{Commercial Tools}
of numerous educational start-ups nowadays incorporate AI-based features in their products. For example, Khanmigo by Khan academy **Kim, "Khanmigo: A Conversational Learning Platform"** offers students interactive learning experiences by chatting with historical figures or by giving hints on questions without giving away the answer. Personify **Liu, "Personify: A Personalized Teaching Assistant"** allows teachers to create tailored teaching assistants for their courses. myTAI **Chen, "myTAI: A Teaching Material Creation Tool"** helps teachers create teaching materials, and tools like gotFeedback ****gotFeedback Team, "gotFeedback: Automated Grading and Feedback"**** Fellofish **Fellez, "Fellofish: An AI-Powered Grading System"** or Fobizz **Fobizz Team, "Fobizz: A ChatGPT4-Based Grading Tool"** help with automatic grading and feedback for writing exercises. Cocalc **Cocalc Team, "Cocalc: Collaborative Notebooks with Generative AI"** and Vocareum **Vocareum Team, "Vocareum: Interactive Coding Environments"** integrate generative AI into collaborative notebooks to help students. 
% problems with privacy / costly
However, commercial tools usually outsource the AI to external providers such as OpenAI potentially leading to conflicts with privacy policies of universities. 
Furthermore, licenses can be quite expensive for lower-budget universities and students. %( wrsl schwaches argument... A100 ist auch teuer)
Finally, it is important to keep tutors in charge of the final grades since the quality of AI-only feedback without human oversight is often still insufficient **Kim, "The Role of Human Tutors in AI-Enhanced Education"**.

%____
\iffalse
- AI in education: e.g. Khanmigo by Khan academy etc
    - most edu tools are based on ChatGPT
    - A few words about commercial viability of these tools?
    - And about why commercialization means less use for the education sector
- https://personifyai.app/
- CCC zu KI in der Lehre / automatische Korrektur: https://www.youtube.com/watch?v=o6DBGdnA1P4\&ab\_channel=media.ccc.de
    - fobizz => basiert auf Chat-GPT4 (zitiere evtl auch: Chatbots im Schulunterricht: Wir testen das Fobizz-Tool zur automatischen Bewertung von Hausaufgaben https://arxiv.org/abs/2412.06651 )
    - Fiete => Fellofish
    - myTAI
- Development and Evaluation of an AI-Enhanced Python Programming Education System (https://hsnarman.github.io/CONF/24-UEMCON-AIPython.pdf) => wen zitieren die noch so? (basieren auf OpenAI / Google)
- we want privacy => open source on premise LLM
    - local / open source LLMs:
- Mistral / LLama / 
- AI for coding: 
    - Codestral
    - qwen
    - ...
- latest developments:
    - deepseek => pretty large. quantized version didn't work that great. thinking process takes too long.
- unit testing
\fi


\subsubsection{Open-source tools} 
have been developed on multiple occasions to facilitate grading Jupyter Notebooks. Otter-Grader **Otter-Grader Team, "Otter-Grader: Automated Grading of Jupyter Notebooks"** as well as OKpy **OKpy Team, "OKpy: Open-Source Automatic Grading System"** were implemented at UC Berkley to serve in computer science and data science courses. UNCode **UNCode Team, "UNCode: Immediate Feedback for Code Solutions"** provides immediate feedback for students of an introductory lecture for "Intelligent Systems and Machine Learning" and NB grader **NB Grader Team, "NB Grader: Automatic Grading of Assignments"** is widely used for creating and grading assignments in computer science. 
However, these tools primarily focus on testing code solutions with rigorous unit-tests and do not support grading text exercises (for example mathematical derivations). Grading such exercises requires a more flexible LLM as a backbone.

\iffalse
- NB grader ____
    => Problems: grades by tutors take time
    => no automation for "text exercises" / proofs
- https://notebookgrader.com/
    (see \url{https://www.youtube.com/watch?v=yvLWbpgnspM\&ab\_channel=LucadeAlfaro-InstructionalVideos})
    => based on nbgrader
    => grading with unit tests / no LLMs (AI feedback only at UCSC)
- Otter-grader ____ (https://discourse.jupyter.org/t/autograding-notebooks-with-otter-grader/4627?utm_source=chatgpt.com)
- UNCode ____
- OKpy ____
\fi

% Model vs. Service (ChatGPT / GPT-4)
\subsubsection{Large language models} like ChatGPT (OpenAI), Gemini (Google), Claude (Anthropic) have shown tremendous success in recent years and offer convenient APIs for easy access in the cloud. However, sending sensitive student data to external providers without explicit consent of the students might violate privacy policies of the university. 
Fortunately, more and more powerful open weight models become publicly available, such as Llama **Liu, "LLama: A Large-Scale Language Model"**, Mistral **Mistral Team, "Mistral: An Open-Source Large Language Model"** , DeepSeek ****DeepSeek Team, "DeepSeek: A Large-Scale Language Model for Search and Retrieval"****