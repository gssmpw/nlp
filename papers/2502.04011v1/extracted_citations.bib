@inproceedings{Borowa2021b,
author = {Borowa, Klara and Zalewski, Andrzej and Kijas, Szymon},
booktitle = {International Conference on Software Architecture (ICSA)},
file = {:C$\backslash$:/Users/BZWGolem/Downloads/ICSA2021(8).pdf:pdf},
title = {{The Influence of Cognitive Biases on Architectural Technical Debt}},
year = {2021}
}

@inproceedings{Borowa2022,
abstract = {Cognitive biases distort the process of rational decision-making, including architectural decision-making. So far, no method has been empirically proven to reduce the impact of cognitive biases on architectural decision-making. We conducted an experiment in which 44 master's degree graduate students took part. Divided into 12 teams, they created two designs - before and after a debiasing workshop. We recorded this process and analysed how the participants discussed their decisions. In most cases (10 out of 12 groups), the teams' reasoning improved after the workshop. Thus, we show that debiasing architectural decision-making is an attainable goal and provide a simple debiasing treatment that could easily be used when training software practitioners.},
archivePrefix = {arXiv},
arxivId = {2206.14701},
author = {Borowa, Klara and Jarek, Maria and Mystkowska, Gabriela and Paszko, Weronika and Zalewski, Andrzej},
booktitle = {European Conference on Software Architecture (ECSA)},
eprint = {2206.14701},
file = {:C$\backslash$:/Users/BZWGolem/Downloads/2206.14701.pdf:pdf},
keywords = {architectural decisions,cognitive bias,debiasing},
pages = {1--8},
title = {{Debiasing architectural decision-making: a workshop-based training approach}},
year = {2022}
}

@article{Calikli2013a,
abstract = {The thought processes of people have a significant impact on software quality, as software is designed, developed and tested by people. Cognitive biases, which are defined as patterned deviations of human thought from the laws of logic and mathematics, are a likely cause of software defects. However, there is little empirical evidence to date to substantiate this assertion. In this research, we focus on a specific cognitive bias, confirmation bias, which is defined as the tendency of people to seek evidence that verifies a hypothesis rather than seeking evidence to falsify a hypothesis. Due to this confirmation bias, developers tend to perform unit tests to make their program work rather than to break their code. Therefore, confirmation bias is believed to be one of the factors that lead to an increased software defect density. In this research, we present a metric scheme that explores the impact of developers' confirmation bias on software defect density. In order to estimate the effectiveness of our metric scheme in the quantification of confirmation bias within the context of software development, we performed an empirical study that addressed the prediction of the defective parts of software. In our empirical study, we used confirmation bias metrics on five datasets obtained from two companies. Our results provide empirical evidence that human thought processes and cognitive aspects deserve further investigation to improve decision making in software development for effective process management and resource allocation.},
author = {{\c{C}}alikli, G{\"{u}}l and Bener, Ayşe Başar},
file = {:C$\backslash$:/Users/BZWGolem/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/{\c{C}}alikli, Bener - 2013 - Influence of confirmation biases of developers on software quality An empirical study.pdf:pdf},
issn = {09639314},
journal = {Software Quality Journal},
keywords = {Confirmation bias,Defect prediction,Human factors,Software psychology},
number = {2},
pages = {377--416},
title = {{Influence of confirmation biases of developers on software quality: An empirical study}},
volume = {21},
year = {2013}
}

@article{Chakraborty2018,
abstract = {Requirements elicitation (RE) is a critical phase in information systems development (ISD), having significant impacts on software quality and costs. While it has remained a key topic of interest for IS researchers, a review of the existing literature suggests that there are very few studies examining how the social process associated with RE unfolds. Prior literature acknowledges that this process involves collaboration between RE participants (e.g., user-reps and systems analysts) where knowledge regarding the system requirements is shared, absorbed, and co- constructed, such that shared mental models of the requirements can form. However, collaboration and knowledge sharing within the RE process has been characterized as tenuous in the literature, given that the groups of RE participants bring very different kinds of knowledge into this activity, and trust among the two parties cannot be guaranteed at any point. Despite acknowledgement of the tenuous nature of RE, we are not aware of research that has attempted to present an integrated view of how collaboration, knowledge transfer, and trust influence the RE process. Using data from two different organizations and adopting a grounded approach, this study presents an integrative process model of RE. The study's findings suggest that RE is composed of four different collaborative states. The study elaborates on the four states, and identifies important factors that tend to trigger transitions from one state to another.},
author = {Chakraborty, Suranjan and Sarker, Saonee and Sarker, Suprateek},
doi = {10.17705/1jais.00225},
file = {:C$\backslash$:/Users/BZWGolem/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Chakraborty, Sarker, Sarker - 2018 - An Exploration into the Process of Requirements Elicitation A Grounded Approach.pdf:pdf},
journal = {Journal of the Association for Information Systems},
keywords = {212-249,abduction,accepting senior editor,adapted grounded,april 2010,collaboration,grounded approach,issue 4,juhani iivari was the,knowledge transfer,pp,process model,requirements elicitation,theory methodology,user representative-analyst interaction,volume 11},
number = {4},
pages = {212--249},
title = {{An Exploration into the Process of Requirements Elicitation: A Grounded Approach}},
volume = {11},
year = {2018}
}

@article{Knapp2016,
author = {Thomas R. Knapp},
title ={Why Is the One-Group Pretest–Posttest Design Still Used?},
journal = {Clinical Nursing Research},
volume = {25},
number = {5},
pages = {467-472},
year = {2016},
doi = {10.1177/1054773816666280}}

@article{Løhre2016,
abstract = {The anchoring effect may be described as the tendency for an initial piece of information to influence people's subsequent judgement, even when the information is irrelevant. Previous studies suggest that anchoring is an important source of inaccurate software development effort estimates. This article examines how the preciseness and credibility of anchoring information affects effort estimates. Our hypotheses were that anchors with lower numerical precision and anchor sources with lower credibility would have less impact on effort estimates. The results from three software project effort estimation experiments, with 381 software professionals, support previous findings about the relevance of anchoring effects to software effort estimation. However, we found no decrease in the anchoring effect with decreasing anchor precision or source credibility. This suggests that even implausible anchors from low-credibility sources can lead to anchoring effects, and that all kinds of misleading information potentially acting as estimation anchors in project estimation contexts should be avoided.},
author = {L{\o}hre, Erik and J{\o}rgensen, Magne},
file = {:C$\backslash$:/Users/BZWGolem/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/L{\o}hre, J{\o}rgensen - 2016 - Numerical anchors and their strong effects on software development effort estimates.pdf:pdf},
issn = {01641212},
journal = {Journal of Systems and Software},
keywords = {Anchoring effects,Numerical preciseness,Software project estimation},
pages = {49--56},
title = {{Numerical anchors and their strong effects on software development effort estimates}},
volume = {116},
year = {2016}
}

@article{Manjunath2018a,
abstract = {The architecture of any software can be thought of as a blueprint of its structure. This blueprint is an artifact generated based on a series of decisions taken by software architects and determines the overall quality of the resulting software. The first part of this paper focuses on identifying and formalizing the decision-making models in the context of designing software. Three models are investigated in detail: the rational economic model, the bounded rational model, and the recognition-primed decision model. The steps of decision making are mapped to the OODA Loop (Observe, Orient, Decide and Act) decision cycle as a generic framework for decision making. The second part of this paper focuses on documenting cognitive biases in the context of architectural decision making. Architects, being human, are invariably subject to the influence of cognitive biases due to the cognitive limitations of the human mind, resulting in a systematic deviation from the ideal decision-making process. This leads to the design of sub-par solutions because of missing rationality behind the decisions. A two-level classification is made to modularize the extensive list of biases that influence the architectural decision-making process. As an important outcome of this research, detailed information about each bias is documented as part of a cognitive bias catalog.},
author = {Manjunath, Akash and Bhat, Manoj and Shumaiev, Klym and Biesdorf, Andreas and Matthes, Florian},
file = {:C$\backslash$:/Users/BZWGolem/Downloads/Bh18a-1.pdf:pdf},
isbn = {9781538665855},
journal = {Proceedings - 2018 IEEE 15th International Conference on Software Architecture Companion, ICSA-C 2018},
keywords = {Architectural design decision,Cognitive bias,OODA loop,decision-making process},
pages = {52--55},
title = {{Decision Making and Cognitive Biases in Designing Software Architectures}},
year = {2018}
}

@article{Mohanani2018,
abstract = {One source of software project challenges and failures is the systematic errors introduced by human cognitive biases. Although extensively explored in cognitive psychology, investigations concerning cognitive biases have only recently gained popularity in software engineering (SE) research. This paper therefore systematically maps, aggregates and synthesizes the literature on cognitive biases in software engineering to generate a comprehensive body of knowledge, understand state of the art research and provide guidelines for future research and practice. Focusing on bias antecedents, effects and mitigation techniques, we identified 67 articles, which investigated 47 cognitive biases, published between 1990 and 2016. Despite strong and increasing interest, the results reveal a scarcity of research on mitigation techniques and poor theoretical foundations in understanding and interpreting cognitive biases. Although bias-related research has generated many new insights in the software engineering community, specific bias mitigation techniques are still needed for software professionals to overcome the deleterious effects of cognitive biases on their work.},
annote = {To przegl{\c{a}}d literatury z tej tematyki. Wyszukiwania dokonali w 2016 roku wi{\c{e}}c lekko przeterminowany.},
author = {Mohanani, Rahul and Salman, Iflaah and Turhan, Burak and Rodriguez, Pilar and Ralph, Paul},
doi = {10.1109/TSE.2018.2877759},
file = {:C$\backslash$:/Users/BZWGolem/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Mohanani et al. - 2018 - Cognitive Biases in Software Engineering A Systematic Mapping Study(2).pdf:pdf;:C$\backslash$:/Users/BZWGolem/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Mohanani et al. - 2018 - Cognitive Biases in Software Engineering A Systematic Mapping Study(4).pdf:pdf},
issn = {19393520},
journal = {IEEE Transactions on Software Engineering},
keywords = {Antecedents of cognitive bias,cognitive bias,debiasing,effects of cognitive bias,software engineering,systematic mapping},
number = {c},
title = {{Cognitive Biases in Software Engineering: A Systematic Mapping Study}},
volume = {5589},
year = {2018}
}

@article{Shalev2014,
author = {Shalev, Eliezer and Keil, Mark and Lee, Jong Seok and Ganzach, Yoav},
file = {:C$\backslash$:/Users/BZWGolem/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Shalev et al. - 2014 - Optimism Bias in Managing It Project Risks a Construal Level.pdf:pdf},
isbn = {9780991556700},
journal = {European Conference on Information Systems},
keywords = {cognitive bias,construal level theory,it project risk management,optimism bias,project},
title = {{Optimism Bias in Managing It Project Risks: a Construal Level}},
year = {2014}
}

@inproceedings{Shepperd2018,
abstract = {CONTEXT: The role of expert judgement is essential in our quest to improve software project planning and execution. However, its accuracy is dependent on many factors, not least the avoidance of judgement biases, such as the anchoring bias, arising from being influenced by initial information, even when it's misleading or irrelevant. This strong effect is widely documented. OBJECTIVE: We aimed to replicate this anchoring bias using professionals and, novel in a software engineering context, explore de-biasing interventions through increasing knowledge and awareness of judgement biases. METHOD: We ran two series of experiments in company settings with a total of 410 software developers. Some developers took part in a workshop to heighten their awareness of a range of cognitive biases, including anchoring. Later, the anchoring bias was induced by presenting low or high productivity values, followed by the participants' estimates of their own project productivity. Our hypothesis was that the workshop would lead to reduced bias, i.e., work as a de-biasing intervention. RESULTS: The anchors had a large effect (robust Cohen's {\$}d=1.19{\$}) in influencing estimates. This was substantially reduced in those participants who attended the workshop (robust Cohen's {\$}d=0.72{\$}). The reduced bias related mainly to the high anchor. The de-biasing intervention also led to a threefold reduction in estimate variance. CONCLUSIONS: The impact of anchors upon judgement was substantial. Learning about judgement biases does appear capable of mitigating, although not removing, the anchoring bias. The positive effect of de-biasing through learning about biases suggests that it has value.},
annote = {Tutaj eksperyment debiasuj{\c{a}}cy kt{\'{o}}ry si{\c{e}} uda{\l}. Chodzi{\l}o o szacowanie czasu wykonania zada{\'{n}} projektowych.},
author = {Shepperd, Martin and Mair, Carolyn and J{\o}rgensen, Magne},
booktitle = {Proceedings of the 33rd Annual ACM Symposium on Applied Computing},
file = {:C$\backslash$:/Users/BZWGolem/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Shepperd, Mair, J{\o}rgensen - 2018 - An Experimental Evaluation of a De-biasing Intervention for Professional Software Developers.pdf:pdf},
keywords = {cognitive bias,expert judgement,software effort estimation,software engineering experimentation},
title = {{An Experimental Evaluation of a De-biasing Intervention for Professional Software Developers}},
year = {2018}
}

@inproceedings{Tang2011,
abstract = {Methods of representing and capturing design rationale have been studied in past years. Many meta-models, methods and techniques have been proposed. Are these software engineering methods sufficient to help designers make logical and appropriate design decisions? Studies have shown that people make biased decisions, software designers may also be subjected to such cognitive biases. In this paper, I give an overview of how cognitive biases and reasoning failures may lead to unsound design decisions. I conjecture that in order to improve the overall quality of software design, we as a community need to improve our understanding and teaching of software design reasoning. {\textcopyright} 2011 ACM.},
author = {Tang, Antony},
booktitle = {Proceedings of the 6th international workshop on sharing and reusing architectural knowledge},
file = {:C$\backslash$:/Users/BZWGolem/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Tang - 2011 - Software designers, are you biased.pdf:pdf},
isbn = {9781450305969},
title = {{Software designers, are you biased?}},
year = {2011}
}

@article{Tang2017,
abstract = {Despite past efforts, we have little understanding and limited research efforts on how architects make decisions in the real-world settings. It seems that software architecture researchers make implicit assumption that decision making by software architects can be a rational and prescribed process. Such an assumption is disputed in other fields such as economics and decision research. This paper studies the current state of software architecture decision making research in terms of human behaviors and practice. We carried out a literature review on software architecture decision making. We classified papers into decision making behavior and decision making practice and identified the research relationships between them. We found that decision making is a mental activity. Research into the behavioral aspects of software architecture decision making for incorporation into architectural design practices is required. We suggest three research topics on human aspects to improve software architecture practices.},
author = {Tang, Antony and Razavian, Maryam and Paech, Barbara and Hesse, Tom Michael},
file = {:C$\backslash$:/Users/BZWGolem/Downloads/07930206 (1).pdf:pdf},
isbn = {9781509057290},
journal = {Proceedings - 2017 IEEE International Conference on Software Architecture, ICSA 2017},
keywords = {decision making,human behavior,methods and tools,software architecture},
pages = {107--116},
publisher = {IEEE},
title = {{Human Aspects in Software Architecture Decision Making: A Literature Review}},
year = {2017}
}

@article{Tang2021,
abstract = {Software design is about making decisions. The quality of design decisions influences the quality of software design. This article describes nine decision-making principles to give software designers a systematic approach for decision making.},
author = {Tang, Antony and Kazman, Rick},
doi = {10.1109/MS.2021.3102358},
file = {:C$\backslash$:/Users/BZWGolem/Downloads/Decision-Making{\_}Principles{\_}for{\_}Better{\_}Software{\_}Design{\_}Decisions.pdf:pdf},
issn = {19374194},
journal = {IEEE Software},
number = {6},
pages = {98--102},
publisher = {IEEE},
title = {{Decision-Making Principles for Better Software Design Decisions}},
volume = {38},
year = {2021}
}

@article{Tversky1974,
abstract = {This article described three heuristics that are employed in making judgments under uncertainty: (i) representativeness, which is usually employed when people are asked to judge the probability that an object or event A belongs to class or process B; (ii) availability of instances or scenarios, which is often employed when people are asked to assess the frequency of a class or the plausibility of a particular development; and (iii) adjustment from an anchor, which is usually employed in numerical prediction when a relevant value is available. These heuristics are highly economical and usually effective, but they lead to systematic and predictable errors. A better understanding of these heuristics and of the biases to which they lead could improve judgments and decisions in situations of uncertainty.},
annote = {Pierwszy artyku{\l} kt{\'{o}}ry zapocz{\c{a}}tkowa{\l} ca{\l}{\c{a}} t{\c{a}} "biasow{\c{a}}" zabaw{\c{e}}. W celu raczej historycznym ;)},
author = {Tversky, Amos and {Kahneman Daniel}},
file = {:C$\backslash$:/Users/BZWGolem/Downloads/AD0767426.pdf:pdf},
issn = {15206882},
journal = {Science},
title = {{Judgment under uncertainty: Heuristics and biases}},
year = {1974}
}

@article{VanVliet2016,
abstract = {Traditionally, software architecture is seen as the result of the software architecture design process, the solution, usually represented by a set of components and connectors. Recently, the why of the solution, the set of design decisions made by the software architect, is complementing or even replacing the solution-oriented definition of software architecture. This in turn leads to the study of the process of making these decisions. We outline some research directions that may help us understand and improve the software architecture design process.},
author = {van Vliet, Hans and Tang, Antony},
doi = {10.1016/j.jss.2016.01.017},
file = {:C$\backslash$:/Users/BZWGolem/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/van Vliet, Tang - 2016 - Decision making in software architecture.pdf:pdf},
issn = {01641212},
journal = {Journal of Systems and Software},
keywords = {Design decisions,Software architecture},
pages = {638--644},
publisher = {Elsevier Inc.},
title = {{Decision making in software architecture}},
volume = {117},
year = {2016}
}

@inproceedings{Zalewski2017,
  title={On cognitive biases in architecture decision making},
  author={Zalewski, Andrzej and Borowa, Klara and Ratkowski, Andrzej},
  booktitle={Software Architecture: 11th European Conference, ECSA 2017, Canterbury, UK, September 11-15, 2017, Proceedings 11},
  pages={123--137},
  year={2017},
  organization={Springer}
}

@article{baltes2022sampling,
  title={Sampling in software engineering research: A critical review and guidelines},
  author={Baltes, Sebastian and Ralph, Paul},
  journal={Empirical Software Engineering},
  volume={27},
  number={4},
  pages={94},
  year={2022},
  publisher={Springer}
}

@article{deWilde2018anchoring,
  title={The anchoring-bias in groups},
  author={de Wilde, Tim RW and Ten Velden, Femke S and De Dreu, Carsten KW},
  journal={Journal of Experimental Social Psychology},
  volume={76},
  pages={116--126},
  year={2018},
  publisher={Elsevier}
}

@article{fischhoff1982debiasing,
  title={Debiasing. Judgment under uncertainty: Heuristics and biases},
  author={Fischhoff, Baruch},
  journal={Judgment under uncertainty: Heuristics and biases},
  pages={422--444},
  year={1982}
}

@article{galster2023empirical,
  title={Empirical research in software architecture—Perceptions of the community},
  author={Galster, Matthias and Weyns, Danny},
  journal={Journal of Systems and Software},
  volume={202},
  pages={111684},
  year={2023},
  publisher={Elsevier}
}

@book{james1890,
    author = {James, William },
    title = {Principles of Psychology (1980)},
    publisher = {Henry Holt and Company},
    year = {1931}
}

@inproceedings{jansen2005software,
  title={Software architecture as a set of architectural design decisions},
  author={Jansen, Anton and Bosch, Jan},
  booktitle={5th Working IEEE/IFIP Conference on Software Architecture (WICSA'05)},
  pages={109--120},
  year={2005},
  organization={IEEE}
}

@article{jugnandan2023towards,
  title={Towards an integrated debiasing framework for consumer financial decisions: A reflection on debiasing research},
  author={Jugnandan, Shreeya and Willows, Gizelle D},
  journal={International Journal of Consumer Studies},
  year={2023},
  publisher={Wiley Online Library}
}

@article{kahneman2011think,
  title={Think fast, think slow},
  author={Kahneman, D},
  journal={Farrar, Straus and Giroux, New York},
  year={2011}
}

@article{kaplan2016neural,
  title={Neural correlates of maintaining one’s political beliefs in the face of counterevidence},
  author={Kaplan, Jonas T and Gimbel, Sarah I and Harris, Sam},
  journal={Scientific reports},
  volume={6},
  number={1},
  pages={39589},
  year={2016},
  publisher={Nature Publishing Group UK London}
}

@article{nickerson1998confirmation,
  title={Confirmation bias: A ubiquitous phenomenon in many guises},
  author={Nickerson, Raymond S},
  journal={Review of general psychology},
  volume={2},
  number={2},
  pages={175--220},
  year={1998},
  publisher={SAGE Publications Sage CA: Los Angeles, CA}
}

@article{pavicevic2021role,
  title={The role of procedural rationality in debiasing acquisition decisions of overconfident CEOs},
  author={Pavi{\'c}evi{\'c}, Stevo and Keil, Thomas},
  journal={Strategic Management Journal},
  volume={42},
  number={9},
  pages={1696--1715},
  year={2021},
  publisher={Wiley Online Library}
}

@article{sharot2011optimism,
  title={The optimism bias},
  author={Sharot, Tali},
  journal={Current biology},
  volume={21},
  number={23},
  pages={R941--R945},
  year={2011},
  publisher={Elsevier}
}

@article{vanHeesch2012documentation,
  title={A documentation framework for architecture decisions},
  author={Van Heesch, Uwe and Avgeriou, Paris and Hilliard, Rich},
  journal={Journal of Systems and Software},
  volume={85},
  number={4},
  pages={795--820},
  year={2012},
  publisher={Elsevier}
}

@article{weinstein1989optimistic,
  title={Optimistic biases about personal risks},
  author={Weinstein, Neil D},
  journal={Science},
  volume={246},
  number={4935},
  pages={1232--1233},
  year={1989},
  publisher={American Association for the Advancement of Science}
}

@article{zimmermann2009managing,
  title={Managing architectural decision models with dependency relations, integrity constraints, and production rules},
  author={Zimmermann, Olaf and Koehler, Jana and Leymann, Frank and Polley, Ronny and Schuster, Nelly},
  journal={Journal of Systems and Software},
  volume={82},
  number={8},
  pages={1249--1267},
  year={2009},
  publisher={Elsevier}
}

