\section{Literature Review: Combinatorial Optimization}
% (NP-complete Karp, "Reducibility Among Combinatorial Problems")
Solving combinatorial optimization problems poses a significant challenge not only because it often results in exponential growth in solution space exploration (NP-complete Karp, "Reducibility Among Combinatorial Problems"), but also because the discrete design space prevents the use of traditional gradient-based techniques. To tackle combinatorial problems, alternative methods such as neural networks Hopfield, "Neural Networks for Optimization" and heuristic methods such as genetic algorithms Holland, "Adaptation in Natural and Artificial Systems" have been employed.
% neural networks Hopfield, "Neural Networks for Optimization"
% like simulated annealing Kirkpatrick et al., "Optimization by Simulated Annealing" , ant colony optimization Dorigo et al., "Ant Colony System: A Cooperative Learning Approach to the Traveling Salesman Problem"
Despite having no theoretical guarantee of optimality, heuristic algorithms often produce good enough solutions in practice Michalewicz, "Genetic Algorithms + Data Structures = Evolution Programs" and use fewer parameters compared to neural networks Hopfield, "Neural Networks for Optimization". Genetic algorithms, in particular, have been proven to be theoretically and empirically robust search methods Holland, "Adaptation in Natural and Artificial Systems".



The mission planning problem addressed in this paper can be seen as a variant of the rooted (fixed start) orienteering problem, also known as the bank robber problem or the generalized Traveling Salesman Problem (TSP), with additional constraints involving a maximum mission time window, an obstacle-free path between nodes, and different rewards assigned to each node. This is closely related to the prize-collecting traveling salesman problem. Furthermore, dynamics are added to the traveler as a constraint, including any state and input and its derivatives. Due to the obstacle-free path requirement, the problem can be seen as a bi-level optimization since it involves trajectory planning between a given sequence.

Specifically, given a set of weighted waypoints distributed along a known static environment, the aim is to find a sequence of waypoints and an obstacle-free trajectory between them that maximizes the collected reward subject to specific maximum time and distance values, accounting for energy limitations and mission requirements. The problem is also subject to robot dynamics and control saturation, meaning that even if there is a path between two waypoints, it may involve a non-reachable trajectory due to input saturation or robot dynamics limitations. While the algorithms in the literature Bertsimas et al., "Algorithms for Dynamic Resource Allocation Problems" provide valuable contributions, they typically do not address weighted waypoints, bypassing waypoints to meet constraints, or integrating dynamics into the motion planning constraints.
% ____

Given the constraints, the optimal solution may not collect rewards from all waypoints, leading to solution candidates of varying dimensions. This variability prevents the use of traditional heuristic algorithms, such as particle swarm optimization, or standard crossover techniques in genetic algorithms, as these operations are not well-defined for elements with unmatched dimensions. To determine the optimal waypoint sequence in a variable-dimension space while satisfying dynamic constraints, a genetic algorithm (GA) is proposed and validated. The overall idea of a GA is the evolution of the candidate solutions using evolutionary-inspired rules. Each candidate is evaluated using a fitness function that assigns higher values to the best individuals in the population. Then, based on these values, the next generation emerge from a crossover operation among the previous generation. An extra mutation step is usually added to increase diversity and exploration. This evolution eventually guides the population to high (or low) regions in the design space, finding the global optimal or close in many cases.


\hl{In this work, we incorporate the penalty method into the fitness function to account for constraints. During penalty evaluation, the differential flatness property is leveraged to efficiently map each candidate trajectory to its corresponding states and inputs, thereby assessing constraint fulfillment. Moreover, a two-strategy crossover scheme is employed: a subset of the offspring is generated using a crossover that combines dynamic time warping with an extended convex combination and projection, while the remaining subset is produced via the random subsequence insertion method. A similar warping approach is described in Chen et al., "Trajectory Generation for Quadrotors Using Dynamic Time Warping" }. A preliminary obstacle-free path between any two waypoints is calculated during the fitness evaluation using the classical $A^*$ algorithm. From the $A^*$ intermediate waypoints, a trajectory parameterization method based on clothoid curves is proposed and compared to the classical snap and jerk polynomial methods, showing smoother shapes and curvature adaptability. Further discussion \hl{regarding the trajectory generation} is presented in Section \ref{trajectory}. Finally, \hl{to enhance exploration capabilities} and prevent premature convergence, the mutation step can \hl{swap two waypoints within the given candidate sequence}. The proposal is tested in simulations and validated using a quadrotor, ground vehicle, and a quadruped. A quadruped differential flatness map is proposed, based on the kinematic control strategy.