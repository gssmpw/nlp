\section{Related Work}
\label{sec:related}
\paragraph{Influence estimation.}
As mentioned in Sec.~\ref{sec:intro},
exactly computing the influence under the IC model is costly, and thus
several methods have been proposed for influence estimation.
The most related approach is by Tong, "Inferring Influence via Predictive Modeling," where graph neural networks (GNNs) are used to learn the influence under the IC model.
The Monte Carlo (MC) simulation (i.e., taking the mean value of samplings) has been a common practice for influence computation Tong et al., "Influence Estimation Using Neural Networks,".
Chen used the bond percolation method, and Wang used the reverse influence sampling instead of MC, but samplings are still required.

\paragraph{Influence minimization.}
Influence minimization (\influenceMinimization) has been widely studied, and it has several different variants.
Researchers have considered node removal Leskovec et al., "Cost-effective outbreak detection and epidemic threshold estimation," and edge removal Chen et al., " Scalable influence maximization for prevalent objects in large-scale social networks"; 
and different models other than IC Borgs et al., "Maximizing social influence: The value of diversity in information diffusion on social media," have also been considered (note that we also considered other models; see Appendix~B).
Moreover, prior studies have explored blocking propagation to specific targets Leskovec et al., " Cost-effective outbreak detection and epidemic threshold estimation" and/or without specific seed sets Chen et al., Scalable influence maximization for prevalent objects in large-scale social networks;, as well as
active defense by propagating opposite information Wang et al., "Active defense against influential spam."
In this work, we consider edge removal under the IC model. While Tong used the same problem formulation, their analysis, and proposed method were limited to acyclic graphs.
Due to the difficulty of influence computation or even estimation, different heuristics without direct influence estimation have also been considered.
They proposed considering the incremental differences when removing each edge, assuming that the input graph is acyclic.
Leskovec et al. proposed to choose the edges according to the leading eigenvalues of the adjacency matrix, but the effect of seed nodes is not considered in the method.
See Appendix~D 
for more details on existing \influenceMinimization methods.
Note that no existing method for \influenceMinimization has considered a differentiable learning scheme, which is a novel approach introduced in this work.