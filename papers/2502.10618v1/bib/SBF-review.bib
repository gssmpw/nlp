% Generated by Paperpile. Check out http://paperpile.com for more information.
% BibTeX export options can be customized via Settings -> BibTeX.

@TECHREPORT{Burning_Glass_Technologies2016-fe,
  title     = "Beyond point and click: the expanding demand for coding skills",
  author    = "{Burning Glass Technologies}",
  publisher = "Burning Glass Technologies, Boston, Massachusetts",
  year      =  2016,
  url       = "https://www.burning-glass.com/research-project/coding-skills/"
}

@TECHREPORT{ACMIEEE-CS_Joint_Task_Force_on_Computing_Curricula2013-cl,
  title       = "Computer Science Curricula 2013",
  author      = "{ACM/IEEE-CS Joint Task Force on Computing Curricula}",
  institution = "ACM Press and IEEE Computer Society Press",
  month       =  dec,
  year        =  2013,
  url         = "http://dx.doi.org/10.1145/2534860",
  keywords    = "SketchingPaper\_ICER2017;CS Curriculum",
  doi         = "10.1145/2534860"
}

@INPROCEEDINGS{Lister2011-mm,
  title     = "Concrete and Other neo-Piagetian Forms of Reasoning in the
               Novice Programmer",
  booktitle = "Proceedings of the Thirteenth Australasian Computing Education
               Conference - Volume 114",
  author    = "Lister, Raymond",
  publisher = "Australian Computer Society, Inc.",
  pages     = "9--18",
  series    = "ACE '11",
  year      =  2011,
  url       = "http://dl.acm.org/citation.cfm?id=2459936.2459938",
  address   = "Darlinghurst, Australia, Australia",
  keywords  = "neo-Piagetian, novice programmer",
  location  = "Perth, Australia",
  isbn      = "9781920682941"
}

@INPROCEEDINGS{Parker2016-ov,
  title     = "Replication, Validation, and Use of a Language Independent {CS1}
               Knowledge Assessment",
  booktitle = "Proceedings of the 2016 {ACM} Conference on International
               Computing Education Research",
  author    = "Parker, Miranda C and Guzdial, Mark and Engleman, Shelly",
  publisher = "ACM",
  pages     = "93--101",
  series    = "ICER '16",
  year      =  2016,
  url       = "http://doi.acm.org/10.1145/2960310.2960316",
  address   = "New York, NY, USA",
  keywords  = "assessment, cs1, replication, validity",
  location  = "Melbourne, VIC, Australia",
  isbn      = "9781450344494",
  doi       = "10.1145/2960310.2960316"
}

@ARTICLE{Mayer1976-rb,
  title    = "Some conditions of meaningful learning for computer programming:
              Advance organizers and subject control of frame order",
  author   = "Mayer, Richard E",
  abstract = "In 2 experiments, a total of 160 nonprogrammers (undergraduates)
              learned a computer programming language and took a multileveled
              transfer posttest. Ss who were given pretraining with a concrete
              model of the computer before learning performed better on novel
              transfer and worse on near transfer relative to no-pretraining Ss
              including Ss who were given posttraining with the same model
              after learning. Similar differences in the pattern of transfer
              were noted for Ss who controlled the order of presentation of
              frames relative to E-controlled Ss. Results suggest that
              availability and activation of assimilative sets influence the
              structure of learning outcomes. (PsycINFO Database Record (c)
              2016 APA, all rights reserved)",
  journal  = "Journal of educational psychology",
  volume   =  68,
  number   =  2,
  pages    = "143--150",
  month    =  apr,
  year     =  1976,
  url      = "https://psycnet.apa.org/fulltext/1976-22878-001.pdf",
  keywords = "Notional Machine",
  issn     = "0022-0663, 1939-2176",
  doi      = "10.1037/0022-0663.68.2.143"
}

@ARTICLE{Sorva2013-dr,
  title    = "{A Review of Generic Program Visualization Systems for
              Introductory Programming Education}",
  author   = "Sorva, Juha and Karavirta, Ville and Malmi, Lauri",
  abstract = "This article is a survey of program visualization systems
              intended for teaching beginners about the run- time behavior of
              computer programs. Our focus is on generic systems that are
              capable of illustrating many kinds of programs and behaviors. We
              inclusively describe such systems from the last three decades and
              review findings from their empirical evaluations. A comparable
              review on the topic does not previously ex- ist; ours is intended
              to serve as a reference for the creators, evaluators, and users
              of educational program visualization systems. Moreover, we
              revisit the issue of learner engagement which has been identified
              as a potentially key factor in the success of educational
              software visualization and summarize what little is known about
              engagement in the context of the generic program visualization
              systems for beginners that we have reviewed; a proposed
              refinement of the frameworks previously used by computing
              education re- searchers to rank types of learner engagement is a
              side product of this effort. Overall, our review illustrates that
              program visualization systems for beginners are often short-lived
              research prototypes that support the user-controlled viewing of
              program animations; a recent trend is to support more engaging
              modes of user interaction. The results of evaluations largely
              support the use of program visualization in introductory pro-
              gramming education, but research to date is insufficient for
              drawing more nuanced conclusions with respect to learner
              engagement. On the basis of our review, we identify interesting
              questions to answer for future research in relation to themes
              such as engagement, the authenticity of learning tasks, cognitive
              load, and the",
  journal  = "ACM Transactions on Computing Education",
  volume   =  13,
  number   =  4,
  pages    = "15.1-- 15.64",
  year     =  2013,
  url      = "http://dx.doi.org/10.1145/2490822",
  keywords = "CS1,Introductory programming education,program,software
              visualization;Program Visualization;SketchingPaper\_ICER2017",
  issn     = "1946-6226",
  doi      = "10.1145/2490822"
}

@INCOLLECTION{Gero2014-eh,
  title     = "The function-behaviour-structure ontology of design",
  booktitle = "An anthology of theories and models of design",
  author    = "Gero, John S and Kannengiesser, Udo",
  publisher = "Springer",
  pages     = "263--283",
  year      =  2014,
  keywords  = "SBF"
}

@ARTICLE{Boulay1981-lx,
  title    = "The black box inside the glass box: presenting computing concepts
              to novices",
  author   = "Boulay, Benedict du and O'Shea, Tim and Monk, John",
  abstract = "Simplicity and visibility are two important characteristics of
              programming languages for novices. Novices start programming with
              very little idea of the properties of the notional machine
              implied by the language they are learning. To help them learn
              these properties, the notional machine should be simple. That is,
              it should consist of a small number of parts that interact in
              ways that can be easily understood, possibly by analogy to other
              mechanisms with which the novice is more familiar. A notional
              machine is the idealized model of the computer implied by the
              constructs of the programming language. Visibility is concerned
              with methods for viewing selected parts and processes of this
              notional machine in action. We introduce the term ``commentary''
              which is the system's dynamic characterization of the notional
              machine, expressed in either text or pictures on the user's
              terminal. We examine the simplicity and visibility of three
              systems, each designed to provide programming experience to
              different populations of novices.",
  journal  = "International journal of man-machine studies",
  volume   =  14,
  number   =  3,
  pages    = "237--249",
  month    =  apr,
  year     =  1981,
  url      = "http://www.sciencedirect.com/science/article/pii/S0020737381800569",
  keywords = "Notional Machine",
  issn     = "0020-7373",
  doi      = "10.1016/S0020-7373(81)80056-9"
}

@INPROCEEDINGS{Fisler2016-pd,
  title     = "Modernizing {Plan-Composition} Studies",
  booktitle = "Proceedings of the 47th {ACM} Technical Symposium on Computing
               Science Education",
  author    = "Fisler, Kathi and Krishnamurthi, Shriram and Siegmund, Janet",
  publisher = "ACM",
  pages     = "211--216",
  series    = "SIGCSE '16",
  year      =  2016,
  url       = "http://doi.acm.org/10.1145/2839509.2844556",
  address   = "New York, NY, USA",
  keywords  = "functional programming, imperative programming, plan
               composition;Structure in programming",
  location  = "Memphis, Tennessee, USA",
  isbn      = "9781450336857",
  doi       = "10.1145/2839509.2844556"
}

@MISC{Hmelo-Silver2004-rs,
  title   = "Comparing expert and novice understanding of a complex system from
             the perspective of structures, behaviors, and functions",
  author  = "Hmelo-Silver, Cindy",
  journal = "Cognitive Science",
  volume  =  28,
  number  =  1,
  pages   = "127--138",
  year    =  2004,
  url     = "http://dx.doi.org/10.1016/s0364-0213(03)00065-x",
  doi     = "10.1016/s0364-0213(03)00065-x"
}

@ARTICLE{Koedinger2012-sy,
  title     = "The {Knowledge-Learning-Instruction} framework: Bridging the
               science-practice chasm to enhance robust student learning",
  author    = "Koedinger, Kenneth R and Corbett, Albert T and Perfetti, Charles",
  journal   = "Cognitive science",
  publisher = "Wiley Online Library",
  volume    =  36,
  number    =  5,
  pages     = "757--798",
  year      =  2012,
  url       = "https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1551-6709.2012.01245.x",
  issn      = "0364-0213"
}

@ARTICLE{Guzdial2003-hm,
  title     = "A Media Computation Course for Non-majors",
  author    = "Guzdial, Mark",
  journal   = "SIGCSE Bull.",
  publisher = "ACM",
  volume    =  35,
  number    =  3,
  pages     = "104--108",
  month     =  jun,
  year      =  2003,
  url       = "http://doi.acm.org/10.1145/961290.961542",
  address   = "New York, NY, USA",
  keywords  = "multimedia, non-majors, programming;Contextualized computing",
  issn      = "0097-8418",
  doi       = "10.1145/961290.961542"
}

@INPROCEEDINGS{Cunningham2017-pq,
  title       = "Using Tracing and Sketching to Solve Programming Problems:
                 Replicating and Extending an Analysis of What Students Draw",
  booktitle   = "Proceedings of the 2017 {ACM} Conference on International
                 Computing Education Research",
  author      = "Cunningham, Kathryn and Blanchard, Sarah and Ericson, Barbara
                 and Guzdial, Mark",
  pages       = "164--172",
  institution = "ACM",
  year        =  2017,
  keywords    = "My papers"
}

@ARTICLE{Gero1990-tn,
  title    = "Design prototypes: a knowledge representation schema for design",
  author   = "Gero, John S",
  journal  = "AI magazine",
  volume   =  11,
  number   =  4,
  pages    = "26--26",
  year     =  1990,
  keywords = "SBF"
}

@PHDTHESIS{Teague2015-ok,
  title     = "{Neo-Piagetian} Theory and the novice programmer",
  author    = "Teague, Donna",
  abstract  = "This PhD project studied the genetic epistemology of novice
               programmers, and provides empirical evidence that the
               development of programming skills can be described using the
               neo-Piagetian cognitive development framework. The thesis
               identifies the manifestations of each of the early neo-Piagetian
               stages of development in the programming domain -- that is:
               sensorimotor, preoperational and concrete operational. This
               research informs not only tertiary pedagogy, but teaching and
               learning of computer programming in any setting. It will enable
               educators to (a) identify the developmental stage of their
               students, (b) provide stage-appropriate learning resources and
               (c) assist students in transitioning to the next more mature
               stage of reasoning.",
  publisher = "Queensland University of Technology",
  year      =  2015,
  url       = "http://eprints.qut.edu.au/86690/",
  school    = "Queensland University of Technology",
  keywords  = "Neo-Piagetian theory; cognitive development; novice programming;
               learning to program; think aloud; abstract reasoning; verbal
               protocol analysis; in-class test; genetic
               epistemology;Neo-piagetian programming"
}

@TECHREPORT{Weld1983-zc,
  title       = "Explaining Complex Engineered Devices",
  author      = "Weld, Daniel S",
  institution = "Bolt Beranek and Newman Inc Cambridge MA",
  year        =  1983,
  keywords    = "SBF"
}

@INPROCEEDINGS{Lopez2008-yb,
  title     = "Relationships Between Reading, Tracing and Writing Skills in
               Introductory Programming",
  booktitle = "Proceedings of the Fourth International Workshop on Computing
               Education Research",
  author    = "Lopez, Mike and Whalley, Jacqueline and Robbins, Phil and
               Lister, Raymond",
  publisher = "ACM",
  pages     = "101--112",
  series    = "ICER '08",
  year      =  2008,
  url       = "http://doi.acm.org/10.1145/1404520.1404531",
  address   = "New York, NY, USA",
  keywords  = "CS1, SOLO taxonomy, comprehension, novice programmers;Explaining
               code",
  location  = "Sydney, Australia",
  isbn      = "9781605582160",
  doi       = "10.1145/1404520.1404531"
}

@ARTICLE{Goel1997-hs,
  title     = "Kritik: An early case-based design system",
  author    = "Goel, Ashok and Bhatta, Sambasiva and Stroulia, Eleni",
  journal   = "Issues and applications of case-based reasoning in design",
  publisher = "Erlbaum, Mahwah, NJ",
  volume    =  1997,
  pages     = "87--132",
  year      =  1997,
  url       = "https://books.google.com/books?hl=en&lr=&id=zgbsAgAAQBAJ&oi=fnd&pg=PA87&dq=Kritik+an+early+case+based+design&ots=qQ25ExIbXh&sig=QzmpGHbULvAv6JnYQGiC_eebqRs"
}

@INPROCEEDINGS{Schulte2008-hb,
  title       = "Block Model: an educational model of program comprehension as
                 a tool for a scholarly approach to teaching",
  booktitle   = "Proceedings of the Fourth international Workshop on Computing
                 Education Research",
  author      = "Schulte, Carsten",
  pages       = "149--160",
  institution = "ACM",
  year        =  2008,
  url         = "https://www.researchgate.net/profile/Carsten_Schulte/publication/247927531_Block_Model_an_educational_model_of_program_comprehension_as_a_tool_for_a_scholarly_approach_to_teaching/links/556743e908aec2268300fa03.pdf"
}

@ARTICLE{Liu2009-pf,
  title     = "Promoting complex systems learning through the use of conceptual
               representations in hypermedia",
  author    = "Liu, Lei and Hmelo-Silver, Cindy E",
  journal   = "Journal of Research in Science Teaching: The Official Journal of
               the National Association for Research in Science Teaching",
  publisher = "Wiley Online Library",
  volume    =  46,
  number    =  9,
  pages     = "1023--1040",
  year      =  2009,
  keywords  = "SBF"
}

@INPROCEEDINGS{Sudol-DeLyser2015-or,
  title     = "Expression of Abstraction: Self Explanation in Code Production",
  booktitle = "Proceedings of the 46th {ACM} Technical Symposium on Computer
               Science Education",
  author    = "Sudol-DeLyser, Leigh Ann",
  publisher = "ACM",
  pages     = "272--277",
  series    = "SIGCSE '15",
  year      =  2015,
  url       = "http://doi.acm.org/10.1145/2676723.2677222",
  address   = "New York, NY, USA",
  keywords  = "code comprehension, computer science education research, explain
               in plain english, novice programmers, solo;Explaining code",
  location  = "Kansas City, Missouri, USA",
  isbn      = "9781450329668",
  doi       = "10.1145/2676723.2677222"
}

@MISC{Goel1996-gd,
  title   = "Towards design learning environments --- I: Exploring how devices
             work",
  author  = "Goel, Ashok K and de Silva Garza, Andr{\'e}s G{\'o}mez and
             Gru{\'e}, Nathalie and William Murdock, J and Recker, Margaret M
             and Govindaraj, T",
  journal = "Intelligent Tutoring Systems",
  pages   = "493--501",
  year    =  1996,
  url     = "http://dx.doi.org/10.1007/3-540-61327-7_148",
  doi     = "10.1007/3-540-61327-7\_148"
}

@ARTICLE{Lister2006-cl,
  title     = "Not Seeing the Forest for the Trees: Novice Programmers and the
               {SOLO} Taxonomy",
  author    = "Lister, Raymond and Simon, Beth and Thompson, Errol and Whalley,
               Jacqueline L and Prasad, Christine",
  journal   = "SIGCSE Bull.",
  publisher = "ACM",
  volume    =  38,
  number    =  3,
  pages     = "118--122",
  month     =  jun,
  year      =  2006,
  url       = "http://doi.acm.org/10.1145/1140123.1140157",
  address   = "New York, NY, USA",
  keywords  = "CS1, SOLO taxonomy, comprehension, novice programmers;Explaining
               code",
  issn      = "0097-8418",
  doi       = "10.1145/1140123.1140157"
}

@INPROCEEDINGS{Rist1986-wo,
  title     = "Plans in programming: definition, demonstration, and development",
  booktitle = "Empirical studies of programmers",
  author    = "Rist, Robert S",
  pages     = "28--47",
  year      =  1986,
  url       = "https://books.google.com/books?hl=en&lr=&id=sswoYivNQVUC&oi=fnd&pg=PA28&dq=Rist+Robert+S+%22Plans+in+programming+definition+demonstration+and+development+%22+Empirical+studies+of+programmers+1986&ots=ahNcT6lfXJ&sig=h4m9YkVyi1mtUhU2VJyuU9lsNVI"
}

@ARTICLE{Bhatta1997-uq,
  title     = "Learning Generic Mechanisms for Innovative Strategies in
               Adaptive Design",
  author    = "Bhatta, Sambasiva R and Goel, Ashok",
  abstract  = "Like domain concepts, strategic concepts pertain to objects and
               relationships in a class of domains, but unlike domain concepts,
               they also enable new strategies for solving a class of problems.
               Generic teleological mechanisms (GTMs) are a class of strategic
               concepts especially useful in adaptive design. GTMs, such as
               cascading, feedback, and feedforward, are abstract functional
               and causal patterns that lead to adaptation strategies for
               innovative design. We adopt a task-directed approach to learning
               and describe a model-based method for learning GTMs from design
               examples. Given a design that contains a pattern previously
               unknown to the designer and a similar and related design that
               does not, the method abstracts, indexes, and stores the partern
               for potential reuse. Pattern abstraction is enabled by
               structure-behavior-function models that represent functional,
               causal, topological, and compositional knowledge of device
               designs.",
  journal   = "Journal of the Learning Sciences",
  publisher = "Routledge",
  volume    =  6,
  number    =  4,
  pages     = "367--396",
  month     =  oct,
  year      =  1997,
  url       = "https://doi.org/10.1207/s15327809jls0604_2",
  issn      = "1050-8406",
  doi       = "10.1207/s15327809jls0604\_2"
}

@MISC{Kolodner1993-fu,
  title   = "What Is {Case-Based} Reasoning?",
  author  = "Kolodner, Janet",
  journal = "Case-Based Reasoning",
  pages   = "3--31",
  year    =  1993,
  url     = "http://dx.doi.org/10.1016/b978-1-55860-237-3.50005-4",
  doi     = "10.1016/b978-1-55860-237-3.50005-4"
}

@ARTICLE{Du_Boulay1986-bb,
  title    = "Some Difficulties of Learning to Program",
  author   = "Du Boulay, Benedict",
  abstract = "This article is a brief introduction to some of the issues that
              teachers of programming may find helpful. It starts by presenting
              a fairly idiosyncratic view of teaching programming which makes
              use of mechanistic analogies and points out some of the pitfalls.
              The article goes on to examine certain errors based on the
              misapplication of analogies as well as certain interaction
              errors. The main emphasis is on the notional machine both at the
              general level of understanding (and misunderstanding) the
              relationship of the terminal to the computer as such, as well as
              at the more specific level of understanding assignment. Notation
              and mistakes that poorly-designed languages can induce novices to
              commit are discussed.",
  journal  = "Journal of Educational Computing Research",
  volume   =  2,
  number   =  1,
  pages    = "57--73",
  year     =  1986,
  url      = "http://dx.doi.org/10.2190/3LFX-9RRF-67T8-UVK9",
  keywords = "Notional Machine;SketchingPaper\_ICER2017",
  doi      = "10.2190/3LFX-9RRF-67T8-UVK9"
}

@ARTICLE{Goel2009-wd,
  title     = "Structure, behavior, and function of complex systems: The
               structure, behavior, and function modeling language",
  author    = "Goel, Ashok K and Rugaber, Spencer and Vattam, Swaroop",
  journal   = "Artificial intelligence for engineering design, analysis and
               manufacturing: AI EDAM",
  publisher = "Cambridge University Press",
  volume    =  23,
  number    =  1,
  pages     = "23--35",
  year      =  2009,
  keywords  = "SBF",
  issn      = "0890-0604"
}

@MISC{Lister2009-qq,
  title    = "Further evidence of a relationship between explaining, tracing
              and writing skills in introductory programming",
  author   = "Lister, Raymond and Fidge, Colin and Teague, Donna",
  journal  = "ACM SIGCSE Bulletin",
  volume   =  41,
  number   =  3,
  pages    = "161",
  year     =  2009,
  url      = "http://dx.doi.org/10.1145/1595496.1562930",
  keywords = "Explaining code",
  doi      = "10.1145/1595496.1562930"
}

@INPROCEEDINGS{Nelson2017-ip,
  title     = "Comprehension First: Evaluating a Novel Pedagogy and Tutoring
               System for Program Tracing in {CS1}",
  booktitle = "Proceedings of the 2017 {ACM} Conference on International
               Computing Education Research",
  author    = "Nelson, Greg L and Xie, Benjamin and Ko, Amy J",
  publisher = "ACM",
  pages     = "2--11",
  series    = "ICER '17",
  year      =  2017,
  url       = "http://doi.acm.org/10.1145/3105726.3106178",
  address   = "New York, NY, USA",
  keywords  = "knowledge representation, notional machine, program
               tracing;Notional Machine",
  location  = "Tacoma, Washington, USA",
  isbn      = "9781450349680",
  doi       = "10.1145/3105726.3106178"
}

@BOOK{Margolis2010-pn,
  title     = "Stuck in the Shallow End: Education, Race, and Computing",
  author    = "Margolis, Jane",
  abstract  = "An investigation into why so few African American and Latino
               high school students are studying computer science reveals the
               dynamics of inequality in American schools.The number of African
               Americans and Latino/as receiving undergraduate and advanced
               degrees in computer science is disproportionately low, according
               to recent surveys. And relatively few African American and
               Latino/a high school students receive the kind of institutional
               encouragement, educational opportunities, and preparation needed
               for them to choose computer science as a field of study and
               profession. In Stuck in the Shallow End, Jane Margolis looks at
               the daily experiences of students and teachers in three Los
               Angeles public high schools: an overcrowded urban high school, a
               math and science magnet school, and a well-funded school in an
               affluent neighborhood. She finds an insidious ``virtual
               segregation'' that maintains inequality. Two of the three
               schools studied offer only low-level, how-to (keyboarding,
               cutting and pasting) introductory computing classes. The third
               and wealthiest school offers advanced courses, but very few
               students of color enroll in them. The race gap in computer
               science, Margolis finds, is one example of the way students of
               color are denied a wide range of occupational and educational
               futures. Margolis traces the interplay of school structures
               (such factors as course offerings and student-to-counselor
               ratios) and belief systems---including teachers' assumptions
               about their students and students' assumptions about themselves.
               Stuck in the Shallow End is a story of how inequality is
               reproduced in America---and how students and teachers, given the
               necessary tools, can change the system.",
  publisher = "MIT Press",
  month     =  feb,
  year      =  2010,
  url       = "https://market.android.com/details?id=book-WOI9rGJSFCcC",
  language  = "en",
  isbn      = "9780262260961"
}

@INPROCEEDINGS{Busjahn2013-jb,
  title     = "The Use of Code Reading in Teaching Programming",
  booktitle = "Proceedings of the 13th Koli Calling International Conference on
               Computing Education Research",
  author    = "Busjahn, Teresa and Schulte, Carsten",
  publisher = "ACM",
  pages     = "3--11",
  series    = "Koli Calling '13",
  year      =  2013,
  url       = "http://doi.acm.org/10.1145/2526968.2526969",
  address   = "New York, NY, USA",
  keywords  = "CS ed research, code comprehension, code reading, educational
               research, program comprehension, teaching programming",
  location  = "Koli, Finland",
  isbn      = "9781450324823",
  doi       = "10.1145/2526968.2526969"
}

@ARTICLE{McCracken2001-ni,
  title     = "A Multi-national, Multi-institutional Study of Assessment of
               Programming Skills of First-year {CS} Students",
  author    = "McCracken, Michael and Almstrum, Vicki and Diaz, Danny and
               Guzdial, Mark and Hagan, Dianne and Kolikant, Yifat Ben-David
               and Laxer, Cary and Thomas, Lynda and Utting, Ian and Wilusz,
               Tadeusz",
  abstract  = "In computer science, an expected outcome of a student's
               education is programming skill. This working group investigated
               the programming competency students have as they complete their
               first one or two courses in computer science. In order to
               explore options for assessing students, the working group
               developed a trial assessment of whether students can program.
               The underlying goal of this work was to initiate dialog in the
               Computer Science community on how to develop these types of
               assessments. Several universities participated in our trial
               assessment and the disappointing results suggest that many
               students do not know how to program at the conclusion of their
               introductory courses. For a combined sample of 216 students from
               four universities, the average score was 22.89 out of 110 points
               on the general evaluation criteria developed for this study.
               From this trial assessment we developed a framework of
               expectations for first-year courses and suggestions for further
               work to develop more comprehensive assessments.",
  journal   = "SIGCSE Bull.",
  publisher = "ACM",
  volume    =  33,
  number    =  4,
  pages     = "125--180",
  month     =  dec,
  year      =  2001,
  url       = "http://doi.acm.org/10.1145/572139.572181",
  address   = "New York, NY, USA",
  keywords  = "SketchingPaper\_ICER2017",
  issn      = "0097-8418",
  doi       = "10.1145/572139.572181"
}

@ARTICLE{Soloway1986-uw,
  title     = "Learning to program= learning to construct mechanisms and
               explanations",
  author    = "Soloway, Elliot",
  journal   = "Communications of the ACM",
  publisher = "ACM",
  volume    =  29,
  number    =  9,
  pages     = "850--858",
  year      =  1986,
  url       = "https://www.researchgate.net/profile/Elliot_Soloway/publication/234796737_Learning_to_Program_Learning_to_Construct_Mechanisms_and_Explanations/links/5544c9fe0cf234bdb21d0dee/Learning-to-Program-Learning-to-Construct-Mechanisms-and-Explanations.pdf",
  keywords  = "Structure in programming",
  issn      = "0001-0782"
}

@ARTICLE{Sorva2013-kz,
  title     = "Notional Machines and Introductory Programming Education",
  author    = "Sorva, Juha",
  journal   = "Trans. Comput. Educ.",
  publisher = "ACM",
  volume    =  13,
  number    =  2,
  pages     = "8:1--8:31",
  month     =  jul,
  year      =  2013,
  url       = "http://doi.acm.org/10.1145/2483710.2483713",
  address   = "New York, NY, USA",
  keywords  = "CS1, Notional machine, constructivism, introductory programming
               education, literature review, mental models, misconceptions,
               phenomenography, threshold concepts;SketchingPaper\_ICER2017",
  issn      = "1946-6226",
  doi       = "10.1145/2483710.2483713"
}

@BOOK{Simon1996-vg,
  title     = "The Sciences of the Artificial",
  author    = "Simon, Herbert A",
  abstract  = "Continuing his exploration of the organization of complexity and
               the science of design, this new edition of Herbert Simon's
               classic work on artificial intelligence adds a chapter that
               sorts out the current themes and tools---chaos, adaptive
               systems, genetic algorithms---for analyzing complexity and
               complex systems. There are updates throughout the book as well.
               These take into account important advances in cognitive
               psychology and the science of design while confirming and
               extending the book's basic thesis: that a physical symbol system
               has the necessary and sufficient means for intelligent action.
               The chapter ``Economic Reality'' has also been revised to
               reflect a change in emphasis in Simon's thinking about the
               respective roles of organizations and markets in economic
               systems.",
  publisher = "MIT Press",
  month     =  sep,
  year      =  1996,
  url       = "https://market.android.com/details?id=book-k5Sr0nFw7psC",
  language  = "en",
  isbn      = "9780262264495"
}

@ARTICLE{Cunningham2019-an,
  title   = "Novice Rationales for Sketching and Tracing, and How They Try to
             Avoid It",
  author  = "Cunningham, Kathryn and Ke, Shannon and Guzdial, Mark and Ericson,
             Barbara",
  journal = "In Innovation and Technology in Computer Science Education (ITiCSE
             '19)",
  year    =  2019,
  url     = "http://dx.doi.org/10.1145/3304221.3319788",
  doi     = "10.1145/3304221.3319788"
}

@INPROCEEDINGS{Lister2004-ba,
  title     = "{A multi-national study of reading and tracing skills in novice
               programmers}",
  booktitle = "{ACM} {SIGCSE} Bulletin",
  author    = "Lister, Raymond and Sepp{\"a}l{\"a}, Otto and Simon, Beth and
               Thomas, Lynda and Adams, Elizabeth S and Fitzgerald, Sue and
               Fone, William and Hamer, John and Lindholm, Morten and
               McCartney, Robert and Mostr{\"o}m, Jan Erik and Sanders, Kate",
  abstract  = "A study by a ITiCSE 2001 working group (``the McCracken Group'')
               established that many students do not know how to program at the
               conclusion of their introductory courses. A popular explanation
               for this incapacity is that the students lack the ability to
               problem-solve. That is, they lack the ability to take a problem
               description, decompose it into sub-problems and implement them,
               then assemble the pieces into a complete solution. An
               alternative explanation is that many students have a fragile
               grasp of both basic programming principles and the ability to
               systematically carry out routine programming tasks, such as
               tracing (or ``desk checking'') through code. This ITiCSE 2004
               working group studied the alternative explanation, by testing
               students from seven countries, in two ways. First, students were
               tested on their ability to predict the outcome of executing a
               short piece of code. Second, students were tested on their
               ability, when given the desired function of short piece of
               near-complete code, to select the correct completion of the code
               from a small set of possibilities. Many students were weak at
               these tasks, especially the latter task, suggesting that such
               students have a fragile grasp of skills that are a prerequisite
               for problem-solving.",
  volume    =  36,
  pages     = "119--150",
  year      =  2004,
  url       = "http://dx.doi.org/10.1145/1041624.1041673",
  keywords  = "SketchingPaper\_ICER2017",
  issn      = "0097-8418",
  isbn      = "9784417853534",
  doi       = "10.1145/1041624.1041673"
}

@MISC{Soloway1980-hp,
  title   = "Problems, plans, and programs",
  author  = "Soloway, Elliot M and Woolf, Beverly",
  journal = "Proceedings of the eleventh SIGCSE technical symposium on Computer
             science education - SIGCSE '80",
  year    =  1980,
  url     = "http://dx.doi.org/10.1145/800140.804605",
  doi     = "10.1145/800140.804605"
}

@MISC{Fitzgerald2005-hy,
  title   = "Strategies that students use to trace code",
  author  = "Fitzgerald, Sue and Simon, Beth and Thomas, Lynda",
  journal = "Proceedings of the 2005 international workshop on Computing
             education research - ICER '05",
  year    =  2005,
  url     = "http://dx.doi.org/10.1145/1089786.1089793",
  doi     = "10.1145/1089786.1089793"
}

@INPROCEEDINGS{Duran2018-qo,
  title     = "Towards an Analysis of Program Complexity From a Cognitive
               Perspective",
  booktitle = "Proceedings of the 2018 {ACM} Conference on International
               Computing Education Research",
  author    = "Duran, Rodrigo and Sorva, Juha and Leite, Sofia",
  publisher = "ACM",
  pages     = "21--30",
  series    = "ICER '18",
  year      =  2018,
  url       = "http://doi.acm.org/10.1145/3230977.3230986",
  address   = "New York, NY, USA",
  keywords  = "cognitive load theory, complexity, model of hierarchical
               complexity, plan-composition strategies, program cognitive
               complexity;Structure in programming",
  location  = "Espoo, Finland",
  isbn      = "9781450356282",
  doi       = "10.1145/3230977.3230986"
}

@INPROCEEDINGS{Guzdial2013-vw,
  title     = "Exploring Hypotheses About Media Computation",
  booktitle = "Proceedings of the Ninth Annual International {ACM} Conference
               on International Computing Education Research",
  author    = "Guzdial, Mark",
  publisher = "ACM",
  pages     = "19--26",
  series    = "ICER '13",
  year      =  2013,
  url       = "http://doi.acm.org/10.1145/2493394.2493397",
  address   = "New York, NY, USA",
  keywords  = "assessment, broadening participation, curriculum, education
               research, motivation, retention, under-represented minorities,
               women in computing;Contextualized computing",
  location  = "San Diego, San California, USA",
  isbn      = "9781450322430",
  doi       = "10.1145/2493394.2493397"
}

@INPROCEEDINGS{Guo2013-en,
  title     = "Online Python Tutor: Embeddable Web-based Program Visualization
               for Cs Education",
  booktitle = "Proceeding of the 44th {ACM} Technical Symposium on Computer
               Science Education",
  author    = "Guo, Philip J",
  publisher = "ACM",
  pages     = "579--584",
  series    = "SIGCSE '13",
  year      =  2013,
  url       = "http://doi.acm.org/10.1145/2445196.2445368",
  address   = "New York, NY, USA",
  keywords  = "CS1, program visualization, python",
  location  = "Denver, Colorado, USA",
  isbn      = "9781450318686",
  doi       = "10.1145/2445196.2445368"
}

@ARTICLE{Halverson2002-vr,
  title    = "Activity Theory and Distributed Cognition: Or What Does {CSCW}
              Need to {DO} with Theories?",
  author   = "Halverson, Christine A",
  abstract = "This essay compares activity theory (AT) with distributed
              cognitiontheory (DCOG), asking what each can do for CSCW. It
              approaches this task by proposing that theories -- when viewed as
              conceptual tools formaking sense of a domain -- have four
              important attributes: descriptivepower; rhetorical power;
              inferential power; and application power.It observes that AT and
              DCOG are not so different: both emphasizecognition; both include
              the social and cultural context of cognition;both share a
              commitment to ethnographically collected data. Startingwith a
              description of the distributed cognition approach, it uses
              anexample of a DCOG analysis to ground a discussion of the
              strengths andweaknesses of AT and DCOG as an approach to issues
              in CSCW. Finally,the essay considers what theoretical work is
              being done by theattributes of the respective theories, and
              whether AT, DCOG, or anytheory developed outside the context of
              group work, will workfor CSCW.",
  journal  = "Computer supported cooperative work: CSCW: an international
              journal",
  volume   =  11,
  number   =  1,
  pages    = "243--267",
  month    =  mar,
  year     =  2002,
  url      = "https://doi.org/10.1023/A:1015298005381",
  issn     = "0925-9724, 1573-7551",
  doi      = "10.1023/A:1015298005381"
}

@MISC{Venables2009-pt,
  title    = "A closer look at tracing, explaining and code writing skills in
              the novice programmer",
  author   = "Venables, Anne and Tan, Grace and Lister, Raymond",
  journal  = "Proceedings of the fifth international workshop on Computing
              education research workshop - ICER '09",
  year     =  2009,
  url      = "http://dx.doi.org/10.1145/1584322.1584336",
  keywords = "Explaining code",
  doi      = "10.1145/1584322.1584336"
}

@ARTICLE{Cant1995-us,
  title    = "A conceptual model of cognitive complexity of elements of the
              programming process",
  author   = "Cant, S N and Jeffery, David Ross and Henderson-Sellers, Brian",
  abstract = "A new approach to complexity metrics is described based not on
              empirical analysis of the final product, viz. the code, but on an
              understanding of the cognitive processes of the analyst or
              programmer as they approach and undertake the challenges of
              program development, modification and debugging. The resulting
              metric, the Cognitive Complexity Model, involves quantification
              of a number of cognitive processes, focused on descriptions of
              comprehension resulting from the twin processes of `chunking' and
              `tracing' used by software developers in an attempt to reach a
              cognition of a software system at the code level. A conceptual
              framework is given as well as some illustrative indicators of
              likely component measures together with areas needing further
              research.",
  journal  = "Information and Software Technology",
  volume   =  37,
  number   =  7,
  pages    = "351--362",
  month    =  jan,
  year     =  1995,
  url      = "http://www.sciencedirect.com/science/article/pii/095058499591491H",
  keywords = "complexity; measurement; software; chunking; tracing; cognitive
              complexity",
  issn     = "0950-5849",
  doi      = "10.1016/0950-5849(95)91491-H"
}

@ARTICLE{Hmelo2000-zc,
  title     = "Designing to learn about complex systems",
  author    = "Hmelo, Cindy E and Holton, Douglas L and Kolodner, Janet L",
  journal   = "The Journal of the Learning Sciences",
  publisher = "Taylor \& Francis",
  volume    =  9,
  number    =  3,
  pages     = "247--298",
  year      =  2000,
  keywords  = "SBF"
}

@INPROCEEDINGS{Xie2018-ny,
  title     = "An Explicit Strategy to Scaffold Novice Program Tracing",
  booktitle = "Proceedings of the 49th {ACM} Technical Symposium on Computer
               Science Education",
  author    = "Xie, Benjamin and Nelson, Greg L and Ko, Amy J",
  publisher = "ACM",
  pages     = "344--349",
  series    = "SIGCSE '18",
  year      =  2018,
  url       = "http://doi.acm.org/10.1145/3159450.3159527",
  address   = "New York, NY, USA",
  keywords  = "instructional intervention, program tracing, sketching,
               think-aloud",
  location  = "Baltimore, Maryland, USA",
  isbn      = "9781450351034",
  doi       = "10.1145/3159450.3159527"
}

@ARTICLE{Yadav2017-jn,
  title    = "Expanding computer science education in schools: understanding
              teacher experiences and challenges",
  author   = "Yadav, Aman and Gretter, Sarah and Hambrusch, Susanne and Sands,
              Phil",
  journal  = "Computer Science Education",
  volume   =  26,
  number   =  4,
  pages    = "235--254",
  year     =  2017,
  url      = "http://dx.doi.org/10.1080/08993408.2016.1257418",
  keywords = "SketchingPaper\_ICER2017",
  eprint   = "http://dx.doi.org/10.1080/08993408.2016.1257418",
  doi      = "10.1080/08993408.2016.1257418"
}

@ARTICLE{Lahtinen2005-ne,
  title     = "A Study of the Difficulties of Novice Programmers",
  author    = "Lahtinen, Essi and Ala-Mutka, Kirsti and J{\"a}rvinen,
               Hannu-Matti",
  journal   = "SIGCSE Bull.",
  publisher = "ACM",
  volume    =  37,
  number    =  3,
  pages     = "14--18",
  month     =  jun,
  year      =  2005,
  url       = "http://doi.acm.org/10.1145/1151954.1067453",
  address   = "New York, NY, USA",
  keywords  = "difficulties, learning, novices, programming, teaching",
  issn      = "0097-8418",
  doi       = "10.1145/1151954.1067453"
}

@INPROCEEDINGS{Teague2014-ie,
  title     = "Longitudinal Think Aloud Study of a Novice Programmer",
  booktitle = "Proceedings of the Sixteenth Australasian Computing Education
               Conference - Volume 148",
  author    = "Teague, Donna and Lister, Raymond",
  publisher = "Australian Computer Society, Inc.",
  pages     = "41--50",
  series    = "ACE '14",
  year      =  2014,
  url       = "http://dl.acm.org/citation.cfm?id=2667490.2667495",
  address   = "Darlinghurst, Australia, Australia",
  keywords  = "neo-piagetian theory, programming, think aloud;Neo-piagetian
               programming",
  location  = "Auckland, New Zealand",
  isbn      = "9781921770319"
}

@INPROCEEDINGS{Fisler2017-qg,
  title     = "Assessing and Teaching Scope, Mutation, and Aliasing in
               {Upper-Level} Undergraduates",
  booktitle = "Proceedings of the 2017 {ACM} {SIGCSE} Technical Symposium on
               Computer Science Education",
  author    = "Fisler, Kathi and Krishnamurthi, Shriram and Tunnell Wilson,
               Preston",
  publisher = "ACM",
  pages     = "213--218",
  series    = "SIGCSE '17",
  year      =  2017,
  url       = "http://doi.acm.org/10.1145/3017680.3017777",
  address   = "New York, NY, USA",
  keywords  = "concept inventories, mutation, notional machines, programming,
               scope;Notional Machine",
  location  = "Seattle, Washington, USA",
  isbn      = "9781450346986",
  doi       = "10.1145/3017680.3017777"
}

@BOOK{Aho2013-yf,
  title     = "Compilers: Principles, Techniques, and Tools",
  author    = "Aho, Alfred V and Lam, Monica S and Sethi, Ravi and Ullman,
               Jeffrey D",
  abstract  = "Compilers: Principles, Techniques and Tools, known to
               professors, students, and developers worldwide as the ``Dragon
               Book,'' is available in a new edition. Every chapter has been
               completely revised to reflect developments in software
               engineering, programming languages, and computer architecture
               that have occurred since 1986, when the last edition published.
               The authors, recognizing that few readers will ever go on to
               construct a compiler, retain their focus on the broader set of
               problems faced in software design and software development. New
               chapters include: Chapter 10 Instruction-Level Parallelism
               Chapter 11 Optimizing for Parallelism and Locality",
  publisher = "Pearson",
  month     =  jun,
  year      =  2013,
  url       = "https://market.android.com/details?id=book-HzCrngEACAAJ",
  keywords  = "CS Curriculum",
  language  = "en",
  isbn      = "9781292024349"
}

@ARTICLE{De_Kleer1984-pj,
  title     = "How circuits work",
  author    = "De Kleer, Johan",
  journal   = "Artificial intelligence",
  publisher = "Elsevier",
  volume    =  24,
  number    = "1-3",
  pages     = "205--280",
  year      =  1984,
  keywords  = "SBF",
  issn      = "0004-3702"
}

@BOOK{Sorva2012-df,
  title     = "Visual program simulation in introductory programming education",
  author    = "Sorva, Juha",
  publisher = "Aalto University",
  year      =  2012,
  url       = "https://aaltodoc.aalto.fi/handle/123456789/3534"
}

@INPROCEEDINGS{Rivers2016-ks,
  title     = "Learning curve analysis for programming: Which concepts do
               students struggle with?",
  booktitle = "{ICER}",
  author    = "Rivers, Kelly and Harpstead, Erik and Koedinger, Kenneth R",
  pages     = "143--151",
  year      =  2016,
  url       = "http://www.krivers.net/files/icer2016-paper.pdf"
}

@INPROCEEDINGS{Morrison2015-ju,
  title     = "Subgoals, Context, and Worked Examples in Learning Computing
               Problem Solving",
  booktitle = "Proceedings of the Eleventh Annual International Conference on
               International Computing Education Research",
  author    = "Morrison, Briana B and Margulieux, Lauren E and Guzdial, Mark",
  publisher = "ACM",
  pages     = "21--29",
  series    = "ICER '15",
  year      =  2015,
  url       = "http://doi.acm.org/10.1145/2787622.2787733",
  address   = "New York, NY, USA",
  keywords  = "cognitive load, contextual transfer, subgoal
               labels;SketchingPaper\_ICER2017",
  location  = "Omaha, Nebraska, USA",
  isbn      = "9781450336307",
  doi       = "10.1145/2787622.2787733"
}

@BOOK{Bransford2000-mq,
  title     = "How people learn",
  author    = "Bransford, John D and Brown, Ann L and Cocking, Rodney R and
               {Others}",
  publisher = "Washington, DC: National academy press",
  volume    =  11,
  year      =  2000,
  url       = "http://csun.edu/~SB4310/How%20People%20Learn.pdf"
}

@MISC{Xie2019-hx,
  title    = "A theory of instruction for introductory programming skills",
  author   = "Xie, Benjamin and Loksa, Dastyni and Nelson, Greg L and Davidson,
              Matthew J and Dong, Dongsheng and Kwik, Harrison and Tan, Alex
              Hui and Hwa, Leanne and Li, Min and Ko, Amy J",
  journal  = "Computer Science Education",
  volume   =  29,
  number   = "2-3",
  pages    = "205--253",
  year     =  2019,
  url      = "http://dx.doi.org/10.1080/08993408.2019.1565235",
  keywords = "Xie's theory of programming instruction",
  doi      = "10.1080/08993408.2019.1565235"
}

@INPROCEEDINGS{Sorva2010-li,
  title     = "{UUhistle}: A Software Tool for Visual Program Simulation",
  booktitle = "Proceedings of the 10th Koli Calling International Conference on
               Computing Education Research",
  author    = "Sorva, Juha and Sirki{\"a}, Teemu",
  publisher = "ACM",
  pages     = "49--54",
  series    = "Koli Calling '10",
  year      =  2010,
  url       = "http://doi.acm.org/10.1145/1930464.1930471",
  address   = "New York, NY, USA",
  keywords  = "UUhistle, automatic assessment, engagement, introductory
               programming, notional machine, program dynamics, program
               visualization, visual program simulation;Program
               Visualization;SketchingPaper\_ICER2017",
  location  = "Koli, Finland",
  isbn      = "9781450305204",
  doi       = "10.1145/1930464.1930471"
}

@BOOK{Biggs2014-ov,
  title     = "Evaluating the Quality of Learning: The {SOLO} Taxonomy
               (Structure of the Observed Learning Outcome)",
  author    = "Biggs, John B and Collis, Kevin F",
  abstract  = "Educational Psychology Series: Evaluating the Quality of
               Learning: The SOLO Taxonomy (Structure of the Observed Learning
               Outcome) focuses on the approaches, methodologies, and
               techniques employed in the valuation of the quality of
               learning.The publication first offers information on the quality
               and quantity of learning and origin and description of the
               Structure of the Observed Learning Outcome (SOLO) taxonomy.
               Discussions focus on general intellectual development and the
               growth of quality; some assumptions and applications of stage
               theory; from developmental stage to levels of learning quality;
               and general intellectual development and the growth of quality.
               The text then examines the teaching of history, elementary
               mathematics, English, and geography. Topics include interpreting
               a map and drawing conclusions, explaining a natural phenomenon,
               appreciation of poetry, implications for the teaching of
               history, English, and mathematics, numbers and operations, and
               general application of SOLO to history. The manuscript takes a
               look at modern languages, place of the taxonomy in instructional
               design, and some methodological considerations. Concerns include
               alternative formats for obtaining SOLO responses, instructional
               processes, curriculum analysis, remediation, and teacher
               intentions. The publication is a vital source of data for
               educators interested in the SOLO taxonomy.",
  publisher = "Academic Press",
  month     =  may,
  year      =  2014,
  url       = "https://market.android.com/details?id=book-xUO0BQAAQBAJ",
  language  = "en",
  isbn      = "9781483273310"
}

@INPROCEEDINGS{Morrison2016-tg,
  title     = "Learning Loops: A Replication Study Illuminates Impact of {HS}
               Courses",
  booktitle = "Proceedings of the 2016 {ACM} Conference on International
               Computing Education Research",
  author    = "Morrison, Briana B and Decker, Adrienne and Margulieux, Lauren E",
  publisher = "ACM",
  pages     = "221--230",
  series    = "ICER '16",
  year      =  2016,
  url       = "http://doi.acm.org/10.1145/2960310.2960330",
  address   = "New York, NY, USA",
  keywords  = "design, experimentation, measurement",
  location  = "Melbourne, VIC, Australia",
  isbn      = "9781450344494",
  doi       = "10.1145/2960310.2960330"
}

@BOOK{DiSessa2001-mc,
  title     = "Changing Minds: Computers, Learning, and Literacy",
  author    = "DiSessa, Andrea A",
  abstract  = "An impassioned guide to how computers can fundamentally change
               how we learn and think. Andrea diSessa's career as a scholar,
               technologist, and teacher has been driven by one important
               question: can education--in particular, science education--be
               transformed by the computer so that children can learn more,
               learn more easily at an earlier age, and learn with pleasure and
               commitment? This book is diSessa's informed and passionate
               affirmative answer to that question. While written at a level
               that anyone with a good acquaintance with high school science
               can understand, the book reflects the depth and breadth of the
               issues surrounding technology in education. Rejecting the
               simplistic notion that the computer is merely a tool for more
               efficient instruction, diSessa shows how computers can be the
               basis for a new literacy that will change how people think and
               learn. He discusses the learning theory that explains why
               computers can be such powerful catalysts for change in
               education, in particular, how intuitive knowledge is the
               platform on which students build scientific understanding. He
               also discusses the material and social reasons for the
               computer's potential and argues for ``two-way literacies,''
               where everyone is a creator as well as consumer of dynamic and
               interactive expressive forms. DiSessa gives many examples from
               his work using the Boxer computer environment, an integrated
               software system designed to investigate computational
               literacies.",
  publisher = "MIT Press",
  year      =  2001,
  url       = "https://market.android.com/details?id=book-DfNaW4zvJVgC",
  language  = "en",
  isbn      = "9780262541329"
}

@BOOK{Cormen2009-cb,
  title     = "Introduction to Algorithms",
  author    = "Cormen, Thomas H and Leiserson, Charles E and Rivest, Ronald L
               and Stein, Clifford",
  abstract  = "Some books on algorithms are rigorous but incomplete; others
               cover masses of material but lack rigor. Introduction to
               Algorithms uniquely combines rigor and comprehensiveness. The
               book covers a broad range of algorithms in depth, yet makes
               their design and analysis accessible to all levels of readers.
               Each chapter is relatively self-contained and can be used as a
               unit of study. The algorithms are described in English and in a
               pseudocode designed to be readable by anyone who has done a
               little programming. The explanations have been kept elementary
               without sacrificing depth of coverage or mathematical rigor.The
               first edition became a widely used text in universities
               worldwide as well as the standard reference for professionals.
               The second edition featured new chapters on the role of
               algorithms, probabilistic analysis and randomized algorithms,
               and linear programming. The third edition has been revised and
               updated throughout. It includes two completely new chapters, on
               van Emde Boas trees and multithreaded algorithms, substantial
               additions to the chapter on recurrence (now called
               ``Divide-and-Conquer''), and an appendix on matrices. It
               features improved treatment of dynamic programming and greedy
               algorithms and a new notion of edge-based flow in the material
               on flow networks. Many new exercises and problems have been
               added for this edition. As of the third edition, this textbook
               is published exclusively by the MIT Press.",
  publisher = "MIT Press",
  month     =  jul,
  year      =  2009,
  url       = "https://market.android.com/details?id=book-aefUBQAAQBAJ",
  keywords  = "CS Curriculum",
  language  = "en",
  isbn      = "9780262533058"
}

@ARTICLE{Soloway1984-aa,
  title    = "Empirical Studies of Programming Knowledge",
  author   = "Soloway, E and Ehrlich, K",
  abstract = "We suggest that expert programmers have and use two types of
              programming knowledge: 1) programming plans, which are generic
              program fragments that represent stereotypic action sequences in
              programming, and 2) rules of programming discourse, which capture
              the conventions in programming and govern the composition of the
              plans into programs. We report here on two empirical studies that
              attempt to evaluate the above hypothesis. Results from these
              studies do in fact support our claim.",
  journal  = "IEEE Transactions on Software Engineering",
  volume   = "SE-10",
  number   =  5,
  pages    = "595--609",
  month    =  sep,
  year     =  1984,
  url      = "http://dx.doi.org/10.1109/TSE.1984.5010283",
  keywords = "Programming profession;Functional
              programming;Psychology;Physics;Circuits;Text processing;Cognitive
              models of programming;novice/expert differences;program
              conprehension;software psychology;Structure in programming",
  issn     = "0098-5589",
  doi      = "10.1109/TSE.1984.5010283"
}

@INPROCEEDINGS{Lister2016-bk,
  title     = "Toward a Developmental Epistemology of Computer Programming",
  booktitle = "Proceedings of the 11th Workshop in Primary and Secondary
               Computing Education",
  author    = "Lister, Raymond",
  publisher = "ACM",
  pages     = "5--16",
  month     =  oct,
  year      =  2016,
  url       = "http://dl.acm.org/citation.cfm?doid=2978249.2978251",
  isbn      = "9781450342230",
  doi       = "10.1145/2978249.2978251"
}

@InProceedings{begel2008struggles,
author = {Begel, Andrew and Simon, Beth},
title = {Struggles of New College Graduates in their First Software Development Job},
booktitle = {Proceedings of the 39th Technical Symposium on Computer Science Education},
year = {2008},
month = {March},
abstract = {How do new college graduates experience their first software development jobs? In what ways are they prepared by their educational experiences, and in what ways do they struggle to be productive in their new positions? We report on a "fly-on-the-wall" observational study of eight recent college graduates in their first six months of a software development position at Microsoft Corporation. After a total of 85 hours of on-the-job observation, we report on the common abilities evidenced by new software developers including how to program, how to write design specifications, and evidence of persistence strategies for problem-solving. We also classify some of the common ways new software developers were observed getting stuck: communication, collaboration, technical, cognition, and orientation. We report on some common misconceptions of new developers which often frustrate them and hinder them in their jobs, and conclude with recommendations to align Computer Science curricula with the observed needs of new professional developers.},
publisher = {ACM},
url = {https://www.microsoft.com/en-us/research/publication/struggles-of-new-college-graduates-in-their-first-software-development-job/},
pages = {226-230},
isbn = {978-1-59593-799-5},
edition = {Proceedings of the 39th Technical Symposium on Computer Science Education},
}


@ARTICLE{Clear2011-oe,
  title     = "Report on the final {BRACElet} workshop: Auckland University of
               Technology, September 2010",
  author    = "Clear, Tony and Whalley, J L and Robbins, Phil and Philpott,
               Anne and Eckerdal, Anna and Laakso, M",
  publisher = "CITRENZ",
  year      =  2011,
  url       = "http://aut.researchgateway.ac.nz/handle/10292/1514",
  keywords  = "Explaining code"
}

@ARTICLE{Porter2013-ux,
  title     = "Success in Introductory Programming: What Works?",
  author    = "Porter, Leo and Guzdial, Mark and McDowell, Charlie and Simon,
               Beth",
  journal   = "Communications of the ACM",
  publisher = "ACM",
  volume    =  56,
  number    =  8,
  pages     = "34--36",
  month     =  aug,
  year      =  2013,
  url       = "http://doi.acm.org/10.1145/2492007.2492020",
  address   = "New York, NY, USA",
  issn      = "0001-0782",
  doi       = "10.1145/2492007.2492020"
}

@MISC{Murphy2012-ct,
  title    = "Ability to 'explain in plain english' linked to proficiency in
              computer-based programming",
  author   = "Murphy, Laurie and Fitzgerald, Sue and Lister, Raymond and
              McCauley, Ren{\'e}e",
  journal  = "Proceedings of the ninth annual international conference on
              International computing education research - ICER '12",
  year     =  2012,
  url      = "http://dx.doi.org/10.1145/2361276.2361299",
  keywords = "Explaining code",
  doi      = "10.1145/2361276.2361299"
}

@ARTICLE{Hmelo-Silver2007-fs,
  title     = "Fish swim, rocks sit, and lungs breathe: Expert-novice
               understanding of complex systems",
  author    = "Hmelo-Silver, Cindy E and Marathe, Surabhi and Liu, Lei",
  journal   = "The Journal of the Learning Sciences",
  publisher = "Taylor \& Francis",
  volume    =  16,
  number    =  3,
  pages     = "307--331",
  year      =  2007,
  keywords  = "SBF"
}

@article{vattam2011understanding,
  title={Understanding complex natural systems by articulating structure-behavior-function models},
  author={Vattam, Swaroop S and Goel, Ashok K and Rugaber, Spencer and Hmelo-Silver, Cindy E and Jordan, Rebecca and Gray, Steven and Sinha, Suparna},
  journal={Journal of Educational Technology \& Society},
  volume={14},
  number={1},
  pages={66--81},
  year={2011},
  publisher={JSTOR}
}


@INPROCEEDINGS{Tew2010-kc,
  title     = "Developing a Validated Assessment of Fundamental {CS1} Concepts",
  booktitle = "Proceedings of the 41st {ACM} Technical Symposium on Computer
               Science Education",
  author    = "Tew, Allison Elliott and Guzdial, Mark",
  publisher = "ACM",
  pages     = "97--101",
  series    = "SIGCSE '10",
  year      =  2010,
  url       = "http://doi.acm.org/10.1145/1734263.1734297",
  address   = "New York, NY, USA",
  keywords  = "assessment, cs1, programming, validity",
  location  = "Milwaukee, Wisconsin, USA",
  isbn      = "9781450300063",
  doi       = "10.1145/1734263.1734297"
}

@inproceedings{joyner2014mila,
  title={MILA--S: generation of agent-based simulations from conceptual models of complex systems},
  author={Joyner, David A and Goel, Ashok K and Papin, Nicolas M},
  booktitle={Proceedings of the 19th international conference on Intelligent User Interfaces},
  pages={289--298},
  year={2014},
  organization={ACM}
}

@article{hmelo2016PCMsystem,
author = {Hmelo-Silver, Cindy and Jordan, Rebecca and Eberbach, Catherine and Sinha, Suparna},
year = {2016},
month = {09},
pages = {},
title = {Systems learning with a conceptual representation: a quasi-experimental study},
journal = {Instructional Science},
doi = {10.1007/s11251-016-9392-y}
}

@inproceedings{riecken1991expert,
  title={What do expert programmers communicate by means of descriptive commenting},
  author={Riecken, R Douglas and Koenemann-Belliveau, Jurgen and Robertson, Scott P},
  booktitle={Empirical studies of programmers: Fourth workshop},
  pages={177--195},
  year={1991},
  organization={Ablex Publishing Corporation, Norwood, New Jersey}
}

@inproceedings{gellenbeck1991investigation,
  title={An investigation of procedure and variable names as beacons during program comprehension},
  author={Gellenbeck, Edward M and Cook, Curtis R},
  booktitle={Empirical studies of programmers: Fourth workshop},
  pages={65--81},
  year={1991},
  organization={Ablex Publishing, Norwood, NJ}
}


@inproceedings{busjahn2015linear,
 author = {Busjahn, Teresa and Bednarik, Roman and Begel, Andrew and Crosby, Martha and Paterson, James H. and Schulte, Carsten and Sharif, Bonita and Tamm, Sascha},
 title = {Eye Movements in Code Reading: Relaxing the Linear Order},
 booktitle = {Proceedings of the 2015 IEEE 23rd International Conference on Program Comprehension},
 series = {ICPC '15},
 year = {2015},
 location = {Florence, Italy},
 pages = {255--265},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=2820282.2820320},
 acmid = {2820320},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
} 

@book{meyer2003threshold,
  title={Threshold concepts and troublesome knowledge: Linkages to ways of thinking and practising within the disciplines},
  author={Meyer, Jan and Land, Ray},
  year={2003},
  publisher={University of Edinburgh Edinburgh}
}