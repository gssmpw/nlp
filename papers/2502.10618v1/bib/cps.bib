% --------------------------------------------------- added citations AF ---------------------------------
% ----------------------------
% 1 - understanding cp's     |
% ----------------------------

@inproceedings{rise-of-the-conversational-programmer_Chilana_VLHCC-2015,
	title        = {Perceptions of non-{CS} majors in intro programming: {The} rise of the conversational programmer},
	shorttitle   = {Perceptions of non-{CS} majors in intro programming},
	author       = {Chilana, Parmit K. and Alcock, Celena and Dembla, Shruti and Ho, Anson and Hurst, Ada and Armstrong, Brett and Guo, Philip J.},
	year         = 2015,
	month        = oct,
	booktitle    = {2015 {IEEE} {Symposium} on {Visual} {Languages} and {Human}-{Centric} {Computing} ({VL}/{HCC})},
	publisher    = {IEEE},
	address      = {Atlanta, GA},
	pages        = {251--259},
	doi          = {10.1109/VLHCC.2015.7357224},
	isbn         = {978-1-4673-7457-6},
	url          = {http://ieeexplore.ieee.org/document/7357224/},
	urldate      = {2021-07-15},
	abstract     = {Despite the enthusiasm and initiatives for making programming accessible to students outside Computer Science (CS), unfortunately, there are still many unanswered questions about how we should be teaching programming to engineers, scientists, artists or other non-CS majors. We present an in-depth case study of first-year management engineering students enrolled in a required introductory programming course at a large North American university. Based on an inductive analysis of one-on-one interviews, surveys, and weekly observations, we provide insights into students' motivations, career goals, perceptions of programming, and reactions to the Java and Processing languages. One of our key findings is that between the traditional classification of non-programmers vs. programmers, there exists a category of conversational programmers who do not necessarily want to be professional programmers or even end-user programmers, but want to learn programming so that they can speak in the “programmer's language” and improve their perceived job marketability in the software industry.}
}
@inproceedings{JargonLite-conversational-programmmers_Wang_VLHCC-2019,
	title        = {Designing {Curated} {Conversation}-{Driven} {Explanations} for {Communicating} {Complex} {Technical} {Concepts}},
	author       = {Wang, April Y. and Chilana, Parmit K.},
	year         = 2019,
	month        = oct,
	booktitle    = {2019 {IEEE} {Symposium} on {Visual} {Languages} and {Human}-{Centric} {Computing} ({VL}/{HCC})},
	publisher    = {IEEE},
	address      = {Memphis, TN, USA},
	pages        = {211--215},
	doi          = {10.1109/VLHCC.2019.8818822},
	isbn         = {978-1-72810-810-0},
	url          = {https://ieeexplore.ieee.org/document/8818822/},
	urldate      = {2021-07-15},
	abstract     = {The need for learning about emerging technologies and technical concepts among the general population is increasing, but formal explanations from online encyclopedias, textbooks, and articles are often rich in technical jargon and can be challenging to grasp. In this paper, we explore a novel approach for explaining technical concepts to non-technical users through the design of JargonLite, an interactive dictionary that shows how technical concepts can be used in everyday conversations. We evaluated curated conversation-driven explanations with 12 users who had little or no technical training and wanted to learn about big data concepts. We found that users perceived conversation-driven explanations to be easy to understand and these explanations helped them to maintain focus. We discuss the potential of using conversation-driven explanations as a learning tool for non-technical users and reflect on the advantages and disadvantages of this approach.}
}
@inproceedings{conversational-programmer-learning-failures_Wang_CHI-2018,
	title        = {Mismatch of {Expectations}: {How} {Modern} {Learning} {Resources} {Fail} {Conversational} {Programmers}},
	shorttitle   = {Mismatch of {Expectations}},
	author       = {Wang, April Y. and Mitts, Ryan and Guo, Philip J. and Chilana, Parmit K.},
	year         = 2018,
	month        = apr,
	booktitle    = {Proceedings of the 2018 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher    = {ACM},
	address      = {Montreal QC Canada},
	pages        = {1--13},
	doi          = {10.1145/3173574.3174085},
	isbn         = {978-1-4503-5620-6},
	url          = {https://dl.acm.org/doi/10.1145/3173574.3174085},
	urldate      = {2021-07-15},
	abstract     = {Conversational programmers represent a class of learners who are not required to write any code, yet try to learn programming to improve their participation in technical conversations. We carried out interviews with 23 conversational programmers to better understand the challenges they face in technical conversations, what resources they choose to learn programming, how they perceive the learning process, and to what extent learning programming actually helps them. Among our key findings, we found that conversational programmers often did not know where to even begin the learning process and ended up using formal and informal learning resources that focus largely on programming syntax and logic. However, since the end goal of conversational programmers was not to build artifacts, modern learning resources usually failed these learners in their pursuits of improving their technical conversations. Our findings point to design opportunities in HCI to invent learner-centered approaches that address the needs of conversational programmers and help them establish common ground in technical conversations.},
	language     = {en}
}
@article{undergrad-instruction-IS_Noshin_IJEMR-2018,
	title        = {Teaching {Programming} to {Non}-{Programmers} at {Undergraduate} {Level}},
	author       = {Noshin, Juena Ahmed and Ahmed, Syed Ishteaque},
	year         = 2018,
	month        = mar,
	journal      = {International Journal of Engineering and Management Research},
	volume       = 8,
	number       = 3,
	doi          = {10.31033/ijemr.8.3.26},
	issn         = {2250-0758, 2394-6962},
	url          = {http://www.ijemr.net/DOC/TeachingProgrammingToNonProgrammersAtUndergraduateLevel.PDF},
	urldate      = {2021-07-16},
	abstract     = {This paper focuses on solving the problems faced by non-IT (Information Technology) background students at undergraduate level in learning programming language who are at the same time non-native English language speakers. In this regard a step by step methodology has been proposed here which try to take into account the difficulties faced by this particular niche of programmers and counteract them with possible solutions. Following this approach may help lower the problems faced by the non-IT background students to some extent and fulfill their aim in being professional or conversational or end- user programmers according to their career choices}
}
@phdthesis{chow_effectiveness_2020,
	title        = {Effectiveness of introductory coding education on the self-efficacy beliefs of {Hong} {Kong} liberal arts students: a case study.},
	shorttitle   = {Effectiveness of introductory coding education on the self-efficacy beliefs of {Hong} {Kong} liberal arts students},
	author       = {Chow, Eric H. C.},
	year         = 2020,
	url          = {https://repository.library.northeastern.edu/files/neu:m0472467j},
	urldate      = {2021-07-21},
	abstract     = {The purpose of this qualitative case study is to understand the effectiveness of introductory coding education offered by a publicly funded liberal arts university in Hong Kong. Of particular focus is the lived experiences of non-CS (computer science) students who attended the introductory coding courses offered at the university. The research questions of this study are as follows: (1) How do non-CS students describe their learning experience and challenges in self-efficacy beliefs development with respect to their participation in introductory coding education? (2) How are faculty integrating introductory coding education into academic programs for non-CS students? Data collection included semi-structured interviews, document review of course syllabi, review of course projects, as well as review of assignments. Participants for the interviews included six non-CS students who attended introductory coding courses, and three faculty members who have taught introductory coding courses or worked in academic programs that included introductory education at the research site. Data was analyzed using descriptive coding and revealed the presence of an informal student hierarchy in the introductory coding courses. Unhelpful feedback from teaching assistants and instructors have failed to help some of the students develop coding self-efficacy, while learning from online resources through self-help and working with non-CS peers helped rebuild their self-efficacy. The students also reported successful transfer of learning to other courses or attempted to study advanced topics in coding outside the regular university curriculum. Interestingly, students who failed to gain coding self-efficacy were not afraid to transfer their learning to other courses.}
}
@article{self-efficacy-IS_Abdunabi_JITE-2019,
	title        = {Towards {Enhancing} {Programming} {Self}-{Efficacy} {Perceptions} among {Undergraduate} {Information} {Systems} {Students}},
	author       = {Abdunabi, Ramadan and Hbaci, Ilham and Ku, Heng-Yu},
	year         = 2019,
	month        = apr,
	journal      = {Journal of Information Technology Education: Research},
	volume       = 18,
	pages        = {185--206},
	doi          = {10.28945/4308},
	url          = {https://www.informingscience.org/Publications/4308},
	urldate      = {2021-07-21},
	abstract     = {An international association advancing the multidisciplinary study of informing systems. Founded in 1998, the Informing Science Institute (ISI) is a global community of academics shaping the future of informing science.},
	language     = {en}
}
% ------------------------------
% 2 - instructional strategies |
% ------------------------------
@inproceedings{PFP-instruction_Cunningham_CHI-2021,
	title        = {Avoiding the {Turing} {Tarpit}: {Learning} {Conversational} {Programming} by {Starting} from {Code}'s {Purpose}},
	shorttitle   = {Avoiding the {Turing} {Tarpit}},
	author       = {Cunningham, Kathryn and Ericson, Barbara J. and Agrawal Bejarano, Rahul and Guzdial, Mark},
	year         = 2021,
	month        = may,
	booktitle    = {Proceedings of the 2021 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	pages        = {1--15},
	isbn         = {978-1-4503-8096-6},
	url          = {https://doi.org/10.1145/3411764.3445571},
	urldate      = {2021-07-15},
	abstract     = {Conversational programmers want to learn about code primarily to communicate with technical co-workers, not to develop software. However, existing instructional materials don’t meet the needs of conversational programmers because they prioritize syntax and semantics over concepts and applications. This mismatch results in feelings of failure and low self-efficacy. To motivate conversational programmers, we propose purpose-first programming, a new approach that focuses on learning a handful of domain-specific code patterns and assembling them to create authentic and useful programs. We report on the development of a purpose-first programming prototype that teaches five patterns in the domain of web scraping. We show that learning with purpose-first programming is motivating for conversational programmers because it engenders a feeling of success and aligns with these learners’ goals. Purpose-first programming learning enabled novice conversational programmers to complete scaffolded code writing, debugging, and explaining activities after only 30 minutes of instruction.},
	keywords     = {computer-supported instruction, conversational programmers, motivation, programming plans, scaffolding}
}
@article{teach-adults-ai-one-day_Seya_IEEIIAI-2020,
	title        = {Teaching {Method} for {Non}-technical {Adult} {Learners} to {Gain} an {Authentic} {Understanding} of {AI} within a {Day}},
	author       = {Seya, Keisuke and Kobayashi, Nobuyuki and Shirasaka, Seiko},
	year         = 2020,
	month        = jun,
	journal      = {Information Engineering Express},
	volume       = 6,
	number       = 1,
	pages        = {14--26},
	doi          = {10.3991/ijet.v15i03.11645},
	issn         = {2185-9892},
	url          = {http://www.iaiai.org/journals/index.php/IEE/article/view/523},
	urldate      = {2021-07-16},
	abstract     = {This study proposes and evaluates an effective teaching method for non-technical adults who want to gain an authentic understanding of artificial intelligence (AI) within a short time budget. Recent studies have revealed the existence of non-technical business professionals who want to improve their participation in technical discussions and identified their needs for learning technologies effectively using real programming tools. The proposed teaching method utilizes the story aligned with the history of AI, visual feedback, and agile practices to overcome the challenges the non-technical adults face. In this study, we evaluated the effectiveness of the proposed teaching method by the open coding method and by the paired t-test over the responses to the questions based on the expectancy-value theory before and after the lecture. We found that this teaching method effectively supported the learners to understand the core technical concepts of AI using authentic tools within a day. We also confirmed that the non-technical adult learners had significantly changed their attitude from initially negative to positive in terms of expected success and value in understanding AI, which is one of the essential outcomes for the learners as they predict the learner’s performance on understanding AI in the future.},
	language     = {en}
}
@article{story-features_Seya_IJET-2020,
	title        = {Features of a {Good} {Story} for {Non}-{Technical} {Adults} to {Learn} {Emerging} {Technologies}},
	author       = {Seya, Keisuke and Kobayashi, Nobuyuki and Shirasaka, Seiko},
	year         = 2020,
	month        = feb,
	journal      = {International Journal of Emerging Technologies in Learning (iJET)},
	volume       = 15,
	number       = 3,
	pages        = {15--33},
	doi          = {10.3991/ijet.v15i03.11645},
	issn         = {1863-0383},
	url          = {https://www.learntechlib.org/p/217020/},
	urldate      = {2021-07-16},
	note         = {Publisher: International Journal of Emerging Technology in Learning},
	abstract     = {The need to learn emerging technologies such as artificial intelligence is increasingly important not only for technical people but also for non-technical people. Previous studies showed the effectiveness of a story-based teaching method for both technical and non-technical people who want to learn emerging technologies. However, the difference between the story-building methods for technical people and non-technical people is not revealed. The purpose of this research is to pro-pose perspectives that reveal the differences in the stories used for emerging technology education and identify ...},
	language     = {en}
}
@incollection{community-data-science-workshops_Hill_2017,
	title        = {Democratizing {Data} {Science}: {The} {Community} {Data} {Science} {Workshops} and {Classes}},
	shorttitle   = {Democratizing {Data} {Science}},
	author       = {Hill, Benjamin Mako and Dailey, Dharma and Guy, Richard T. and Lewis, Ben and Matsuzaki, Mika and Morgan, Jonathan T.},
	year         = 2017,
	booktitle    = {Big {Data} {Factories}: {Collaborative} {Approaches}},
	publisher    = {Springer International Publishing},
	address      = {Cham},
	series       = {Computational {Social} {Sciences}},
	pages        = {115--135},
	doi          = {10.1007/978-3-319-59186-5_9},
	isbn         = {978-3-319-59186-5},
	url          = {https://doi.org/10.1007/978-3-319-59186-5_9},
	urldate      = {2021-07-16},
	abstract     = {Nearly every published discussion of data science education begins with a reflection on an acute shortage in labor markets of professional data scientists with the skills necessary to extract business value from burgeoning datasets created by online communities like Facebook, Twitter, and LinkedIn. This model of data science—professional data scientists mining online communities for the benefit of their employers—is only one possible vision for the future of the field. What if everybody learned the basic tools of data science? What if the users of online communities—instead of being ignored completely or relegated to the passive roles of data producers to be shaped and nudged—collected and analyzed data about themselves? What if, instead, they used data to understand themselves and communicate with each other? What if data science was treated not as a highly specialized set of skills but as a basic literacy in an increasingly data-driven world?},
	language     = {en},
	editor       = {Matei, Sorin Adam and Jullien, Nicolas and Goggins, Sean P.},
	keywords     = {Application Programming Interface (API), Data Science Community, Extract Business Value, Previous Programming Experience, Self-directed Projects}
}
@inproceedings{cai_software_2019,
	title        = {Software {Developers} {Learning} {Machine} {Learning}: {Motivations}, {Hurdles}, and {Desires}},
	shorttitle   = {Software {Developers} {Learning} {Machine} {Learning}},
	author       = {Cai, Carrie J. and Guo, Philip J.},
	year         = 2019,
	month        = oct,
	booktitle    = {2019 {IEEE} {Symposium} on {Visual} {Languages} and {Human}-{Centric} {Computing} ({VL}/{HCC})},
	pages        = {25--34},
	doi          = {10.1109/VLHCC.2019.8818751},
	note         = {ISSN: 1943-6106},
	abstract     = {The growing popularity of machine learning (ML) has attracted more software developers to now want to adopt ML into their own practices, through tinkering with and learning from ML framework websites and online code examples. To investigate the motivations, hurdles, and desires of these software developers, we deployed a survey to the website of the TensorFlow.js ML framework. We found via 645 responses that many wanted to learn ML for aspirational reasons rather than for immediate job needs. Critically, developers faced hurdles due to a perceived lack of mathematical and theoretical background. They desired frameworks to provide more basic ML conceptual support, such as a curated corpus of best practices, conceptual tutorials, and a de-mystification of mathematical jargon into practical tips. These findings inform the design of ML frameworks and informal learning resources to broaden the base of people acquiring this increasingly important skill set.},
	keywords     = {Programming profession, Software, machine learning, Machine learning, Neural networks, software developers, Tutorials, Visualization}
}
@article{chat-codes-label-code_Oney_ToCHI-2017,
	title        = {Creating {Guided} {Code} {Explanations} with chat.codes},
	author       = {Oney, Steve and Brooks, Christopher and Resnick, Paul},
	year         = 2018,
	month        = nov,
	journal      = {Proceedings of the ACM on Human-Computer Interaction},
	volume       = 2,
	number       = {CSCW},
	pages        = {1--20},
	doi          = {10.1145/3274400},
	issn         = {2573-0142},
	url          = {https://dl.acm.org/doi/10.1145/3274400},
	urldate      = {2021-07-21},
	language     = {en}
}
@article{BlockPy-data-science_Bart_IEEE-ToETC,
	title        = {Design and {Evaluation} of a {Block}-based {Environment} with a {Data} {Science} {Context}},
	author       = {Bart, Austin Cory and Tibau, Javier and Kafura, Dennis and Shaffer, Clifford A. and Tilevich, Eli},
	year         = 2020,
	month        = jan,
	journal      = {IEEE Transactions on Emerging Topics in Computing},
	volume       = 8,
	number       = 1,
	pages        = {182--192},
	doi          = {10.1109/TETC.2017.2729585},
	issn         = {2168-6750},
	note         = {Conference Name: IEEE Transactions on Emerging Topics in Computing},
	abstract     = {As computing becomes pervasive across fields, introductory computing curricula needs new tools to motivate and educate the influx of learners with little prior background and divergent goals. We seek to improve curricula by enriching it with authentic, real-world contexts and powerful scaffolds that can guide learners to success using automated tools, thereby reducing the strain on limited human instructional resources. To address these issues, we have created the BlockPy programming environment, a web-based, open-access, open-source platform for introductory computing students (https://www.blockpy.com). BlockPy has an embedded data science context that allows learners to connect the educational content with real-world scenarios through meaningful problems. The environment is block-based and gives guiding feedback to learners as they complete problems, but also mediates transfer to more sophisticated programming environments by supporting bidirectional, seamless transitions between block and text programming. Although it can be used as a stand-alone application, the environment has first-class support for the latest Learning Tools Interoperability standards, so that instructors can embed the environment directly within their Learning Management System. In this paper, we describe interesting design issues that we encountered during the development of BlockPy, an evaluation of the environment from fine-grained logs, and our future plans for the environment.},
	keywords     = {Engineering profession, Programming profession, Games, automatic guidance, block-based programming, Computer science education, data science, Data science, introductory computing, Programming environments, Tools}
}
@incollection{Poirot-designers_Tanner_CHI-2019,
	title        = {Poirot: {A} {Web} {Inspector} for {Designers}},
	shorttitle   = {Poirot},
	author       = {Tanner, Kesler and Johnson, Naomi and Landay, James A.},
	year         = 2019,
	month        = may,
	booktitle    = {Proceedings of the 2019 {CHI} {Conference} on {Human} {Factors} in {Computing} {Systems}},
	publisher    = {Association for Computing Machinery},
	address      = {New York, NY, USA},
	pages        = {1--12},
	isbn         = {978-1-4503-5970-2},
	url          = {https://doi.org/10.1145/3290605.3300758},
	urldate      = {2021-07-20},
	abstract     = {To better understand the issues designers face as they interact with developers and use developer tools to create websites, we conducted a formative investigation consisting of interviews, a survey, and an analysis of professional design documents. Based on insights gained from these efforts, we developed Poirot, a web inspection tool for designers that enables them to make style edits to websites using a familiar graphical interface. We compared Poirot to Chrome DevTools in a lab study with 16 design professionals. We observed common problems designers experience when using Chrome DevTools and found that when using Poirot, designers were more successful in accomplishing typical design tasks (97\% to 63\%). In addition, we found that Poirot had a significantly lower perceived cognitive load and was overwhelmingly preferred by the designers in our study.},
	keywords     = {designer web tools, inspector tools, web development}
}
@inproceedings{story-based-non-technical-adults-AI_Seya_IIAI-AAI-2019,
	title        = {Effectiveness of {Story}-based {Visual} and {Agile} {Teaching} {Method} for {Non}-technical {Adult} {Learners} {Who} {Want} to {Understand} {Artificial} {Intelligence}},
	author       = {Seya, Keisuke and Kobayashi, Nobuyuki and Shirasaka, Seiko},
	year         = 2019,
	month        = jul,
	booktitle    = {2019 8th {International} {Congress} on {Advanced} {Applied} {Informatics} ({IIAI}-{AAI})},
	pages        = {768--774},
	doi          = {10.1109/IIAI-AAI.2019.00157},
	abstract     = {This study proposes and evaluates an effective teaching method for non-technical adults who want to understand artificial intelligence (AI). As the number of non-technical business professionals who want to improve their participation in technical discussions is increasing, it becomes important to find effective teaching methods for non-technical adults who need to understand core technical concepts in which they are involved reasonably. The proposed teaching method utilizes the active use of visual feedback and agile practices to overcome the challenges the adult learners face. In this study, we evaluated the effectiveness of the proposed teaching method by the open coding method to analyze the free-form responses and by the paired t-test over the responses to the questions asked to the participants before and after the lecture. We found that this teaching method effectively supported the learners to understand the basic technical concepts of AI within one or two-day time frame. We also confirmed the non-technical adult learners had significantly changed their attitude toward understanding AI from initially negative to positive with a good expectation of success in understanding AI, which is one of the important outcomes for the learners as the expectancy-value theory predicts their future performance on understanding AI.},
	keywords     = {adult learners, agile method, artificial intelligence, programming, storytelling, technology education, visual method}
}
