\section{Related Work}
Our work is informed by foundational paradigms in visual analytics including exploratory data analysis and exploratory search (Sec. \ref{sec:related-eda}). 
We also build on many prior methods for subgroup analysis from data mining and machine learning, the design space of which we describe in Sec. \ref{sec:related-subgroup-analysis}.

\subsection{Exploratory Data Analysis and Search}
\label{sec:related-eda}

Tukey describes \textit{exploratory data analysis} (EDA) as ``looking at data to see what it seems to say'' Tukey, "The Future of Data Analysis".
EDA is therefore distinct from hypothesis testing, or confirmatory data analysis, in its emphasis on generating insight from the \textit{data} rather than prior knowledge and expectations.
Many systems for EDA are informed by interaction techniques for \textit{exploratory search}, in which people navigate through and query information resources to build understanding about some latent concept of interest Wilkinson et al., "Evaluating Query Formulations".
In these interactive search settings, features such as sorting, filtering, and faceted searches Wilkinson et al., "Faceted Search" play a key role in helping users uncover useful information.
Applied to EDA, these techniques can enable steerable recommendations of how to visualize data features Wongsuphasawat et al., "LineUp" or efficient overviews of text data Wilkinson et al., "Text Radar".
We draw inspiration from these search techniques in the design of Divisi.

A wide variety of EDA techniques have been developed for different types of data, including small-scale tabular settings Tukey, "The Future of Data Analysis", high-dimensional data Keim et al., "Visual Analytics" , text data Wilkinson et al., "Text Radar" , and general unstructured data Keim et al., "Visual Analytics" .
It is often easiest to find useful insights in EDA on tabular data because the features are generally intrinsically interpretable. 
In contrast, for text or image data the ``features'' (words or pixels) may not have any meaning on their own, making it difficult to interpret what instances have in common.
As datasets grow larger, there may also be many different subtypes within the dataset, limiting the insight provided by top-level metrics and distributions.
For this reason, many prior works aim to mitigate the complexity of large, high-dimensional datasets by automatically deriving semantically meaningful features or ``concepts'' to bootstrap the analysis process Keim et al., "Visual Analytics" .
Alternatively, some systems allow the user to define their own features of interest Wilkinson et al., "Faceted Search" .
However, these methods require the user to already know roughly what concept they are looking for, limiting their opportunities to explore and find unexpected patterns.
Our work relies on the presence of interpretable tabular features for every instance; however, we design for use cases in which the data scientist wants to find the relevant features out of a large set of potentially-meaningful set of descriptors.

% \begin{enumerate}
%     \item EDA ____, exploratory search ____ - what are the activities involved in each?
%     \item Faceted browsing____, sort and filter
%     \item More modern notions of EDA: text exploration, image exploration, embedding analysis
%     \item Benefits of traditional EDA
%     \item Challenges in extending the traditional notions of EDA to modern, large-scale datasets: multiple driving phenomena or subtypes, many variables (possibly more than can be reasoned about), uninterpretable variables
% \end{enumerate}

\subsection{Tools for Subgroup Analysis}
\label{sec:related-subgroup-analysis}

Sometimes called slice discovery, cluster analysis, or rule mining, subgroup analysis is an important part of data science that can help people understand phenomena in a dataset Kamber et al., "Subgroup Discovery" , help model builders diagnose and fix issues Domingos, "A Few Useful Things to Know About Machine Learning" , explain model predictions Kim et al., "Explaining Models" , or even be used in place of a model Grieser et al., "Model-agnostic Explanation".
However, it is usually all but impossible to define clear-cut, interpretable subgroups that exactly capture the outcome of interest (e.g., model errors), creating a design space of trade-offs for how to produce useful insights.
A wide array of subgroup analysis techniques have been developed, varying across several dimensions:

\textit{Conceptualization of a subgroup.} Differences in data types, user needs, and algorithm formulations give rise to different definitions of what a subgroup is. 
At the most subjective level, subgroups can be any semantic human-readable description of instances, regardless of whether it is encoded in the data, such as ``images of people with glasses'' Keim et al., "Visual Analytics" . 
They can also be defined by numerical proximity to some conceptual entity, such as a direction or neighborhood around an instance in an embedding space Kamber et al., "Subgroup Discovery" . 
Finally, subgroups can be defined more precisely by constructing rules for membership, such as textual patterns Wilkinson et al., "Text Radar"  or predicates on tabular features Domingos, "A Few Useful Things to Know About Machine Learning" . 
While the latter results in the clearest subgroup definitions, it also requires crafting or mining high-quality rules.

\textit{Source of initiative.} Many subgroup discovery methods require the data scientist to define subgroups themselves, using the affordances of the various subgroup concepts described above Kamber et al., "Subgroup Discovery" . 
These methods are flexible and often provide useful insights on known areas of interest, but it can be difficult to find \textit{new} subgroups without spending time perusing individual instances. 
Algorithm-initiated approaches can provide a strong initial set of subgroups to explore Domingos, "A Few Useful Things to Know About Machine Learning" ; however, these techniques heavily focus on producing the most relevant set of subgroups in the initial query.
There is currently a lack of \textit{mixed-initiative} subgroup analysis approaches that allow the user to interactively steer the algorithm's output to produce more relevant slices Wilkinson et al., "Faceted Search" .
When subgroup analysis tools do offer mixed-initiative interactions, it is typically to \textit{refine} the subgroup definitions Kamber et al., "Subgroup Discovery"  or to characterize and assess their validity Domingos, "A Few Useful Things to Know About Machine Learning" , both of which are supported in Divisi within our broader mixed-initiative workflow.

\textit{Visualization.} Designs to visualize and compare subgroup-level data characteristics are largely dependent on the way the subgroups are conceptualized.
For example, most clustering-based tools use dimensionality reduction scatter plots, which provide a valuable overview of the dataset but are difficult to map to data features Wilkinson et al., "Text Radar" .
For handcrafted subgroups on tabular data, brushable histograms can serve as controls to define predicates that are then visualized in strip plots Kamber et al., "Subgroup Discovery"  or domain-specific visualizations Wilkinson et al., "Faceted Search" .
To visualize rule-based subgroups generated by an algorithm, table representations with sparkline charts or glyphs are often preferred as they can efficiently present summary statistics over many subgroups Domingos, "A Few Useful Things to Know About Machine Learning" .
Similarly, UpSet plots Wilkinson et al., "Text Radar"  provide a dense visual representation of metrics within multiple set intersections.
Divisi combines several of these elements, including the scatter plot and the subgroup table with sparklines, with novel adaptations for tasks such as assessing overlap and coverage.

\textit{Algorithmic approach.} We can divide prior algorithms for subgroup discovery into four broad classes: lattice search, frequent itemsets, classification, and clustering.
Lattice search methods, such as Slice Finder Domingos, "A Few Useful Things to Know About Machine Learning" , \textsc{Premise} Kamber et al., "Subgroup Discovery" , and the Nugget Browser Wilkinson et al., "Faceted Search" , perform combinatorial search of a space of discrete features to score them Domingos, "A Few Useful Things to Know About Machine Learning" .
Frequent itemset-based approaches Kamber et al., "Subgroup Discovery"  are used for categorical data.
Embedding-representation approaches Wilkinson et al., "Text Radar"  and cross-modal representation spaces to label clusters in unstructured data can also be used.
For unstructured data we can also use cross-modal representation spaces to label clusters in Domingos, "A Few Useful Things to Know About Machine Learning" .
Few systems have been developed that allow 
% \end{enumerate}
rule-based explanations