@Article{Dagstuhl,
  author =	{Bjorn {De Sutter} and Christian Collberg and Mila Dalla Preda and Brecht Wyseur},
  title =	{{Software Protection Decision Support and Evaluation Methodologies (Dagstuhl Seminar 19331)}},
  pages =	{1--25},
  journal =	{Dagstuhl Reports},
  ISSN =	{2192-5283},
  year =	{2019},
  volume =	{9},
  number =	{8},
  OPTeditor =	{{De Sutter}, Bjorn and Collberg, Christian  and {Dalla Preda}, Mila and Wyseur, Brecht},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{https://drops.dagstuhl.de/opus/volltexte/2019/11682},
  URN =		{urn:nbn:de:0030-drops-116825},
  doi =		{10.4230/DagRep.9.8.1},
  annote =	{Keywords: Benchmarks, Decision Support Systems, Evaluation Methodology, man-at-the-end attacks, metrics, predictive models, reverse engineering and tampering, software protection}
}

@inproceedings{checkmate24,
author = {Faingnaert, Thomas and Zhang, Tab and Van Iseghem, Willem and Everaert, Gertjan and Coppens, Bart and Collberg, Christian and De Sutter, Bjorn},
title = {Tools and Models for Software Reverse Engineering Research},
year = {2024},
isbn = {9798400712302},
publisher = {ACM},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3689934.3690817},
doi = {10.1145/3689934.3690817},
abstract = {Software protection researchers often struggle with the evaluation of MATE software protections and attacks. Evaluations often are incomplete and not representative of the practice. This can in part be explained by a lack of standardized, generally applicable models, tools, and methodologies for evaluating how reverse engineering attack strategies are executed. The framework of related components proposed in this paper is an attempt to provide exactly that. It includes a meta-model and supporting tools for modeling the knowledge that reverse engineers acquire as they execute their strategies, a meta-model to estimate the required effort of those strategies, and tools to capture strategic activities from data streams collected during human reverse engineering experiments. Their use is demonstrated on three example reverse engineering strategies.},
booktitle = {Proc.\ Workshop on Research on Offensive and Defensive Techniques in the Context of Man At The End (MATE) Attacks},
pages = {44â€“58},
numpages = {15},
keywords = {reverse engineering, strategy modeling, simulation, and capturing},
OPTlocation = {Salt Lake City, UT, USA},
series = {CheckMATE '24}
}

@article{desutter2024evaluation,
author = {De Sutter, Bjorn and Schrittwieser, Sebastian and Coppens, Bart and Kochberger, Patrick},
title = {Evaluation Methodologies in Software Protection Research},
year = {2024},
issue_date = {April 2025},
publisher = {ACM},
address = {New York, NY, USA},
volume = {57},
number = {4},
issn = {0360-0300},
url = {https://doi.org/10.1145/3702314},
doi = {10.1145/3702314},
abstract = {Man-at-the-end (MATE) attackers have full control over the system on which the attacked software runs, and try to break the confidentiality or integrity of assets embedded in the software. Both companies and malware authors want to prevent such attacks. This has driven an arms race between attackers and defenders, resulting in a plethora of different protection and analysis methods. However, it remains difficult to measure the strength of protections because MATE attackers can reach their goals in many different ways and a universally accepted evaluation methodology does not exist. This survey systematically reviews the evaluation methodologies of papers on obfuscation, a major class of protections against MATE attacks. For 571 papers, we collected 113 aspects of their evaluation methodologies, ranging from sample set types and sizes, over sample treatment, to performed measurements. We provide detailed insights into how the academic state of the art evaluates both the protections and analyses thereon. In summary, there is a clear need for better evaluation methodologies. We identify nine challenges for software protection evaluations, which represent threats to the validity, reproducibility, and interpretation of research results in the context of MATE attacks and formulate a number of concrete recommendations for improving the evaluations reported in future research papers.},
journal = {ACM Comput. Surv.},
month = dec,
articleno = {86},
numpages = {41},
keywords = {Survey, software protection, obfuscation, deobfuscation, diversification}
}

@INPROCEEDINGS{ollvm,
    author = {P. Junod and J. Rinaldini and J. Wehrli and J. Michielin},
    booktitle = {IEEE/ACM 1st Int'l Workshop on Software Protection (SPRO)},
    title = {Obfuscator-LLVM -- Software Protection for the Masses},
    year = {2015},
    volume = {00},
    number = {},
    pages = {3-9},
    keywords={Software;Cryptography;Software algorithms;Resistance;Routing;Merging},
    doi = {10.1109/SPRO.2015.10},
    url = {doi.ieeecomputersociety.org/10.1109/SPRO.2015.10},
    ISSN = {},
    month={05},
}

@misc{tigress2023,
    author = {{Christian Collberg}},
    title = {The {Tigress} {C} Obfuscator},
    year = {2023},
    note = {\url{https://tigress.wtf/}}
}

