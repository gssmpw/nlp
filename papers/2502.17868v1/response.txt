\section{Related Work}
\subsection{Swarm User Interfaces}

Distributed and closely cooperating groups are commonly referred to as swarms, which can accomplish tasks beyond the capabilities of individual members through collaboration.
Swarm robotics is an approach inspired by the collective behavior of animal groups, aiming to design robust, flexible, and scalable group behaviors by coordinating a large number of robots using simple rules and local interactions**Bramble et al., "Distributed Behavioral Clustering in Swarm Robotics"**.
The number of swarm robots varies depending on the research context; for instance, **Kilobots is presented by Rubenstein et al. as a low-cost, easy-to-assemble swarm robot that can be used to test swarm algorithms with thousands of robots**.
However, the maximum speed of Kilobot is only 1 $cm/s$, which is relatively slow and unsuitable for real-time interaction with users.
The size of swarm robots ranges from very small, approximately 4 $mm$ in size**Reynolds et al., "Distributed Autonomous Vehicle Control"**, to those similar in size to cleaning robots**Bramble et al., "Distributed Behavioral Clustering in Swarm Robotics"**.

In the field of Human-Computer Interaction, research involving swarm robots has been ongoing since the late 2010s.
Swarm UIs are a relatively new category of interfaces in which multiple self-propelled robots respond to user input and environmental changes**Liu et al., "A survey on swarm user interface design"**.
One advantage of Swarm UIs is their composition of numerous interchangeable elements, enabling flexible adjustments to the overall size and shape of the interface.
For example, **Zooids can dynamically change the overall shape of the swarm by moving collectively, providing information through the spatial arrangement of robots as shown by Soto et al.**.
Interactions in which individual robots control the behavior of the entire group are also possible.

Due to these characteristics, Swarm UIs are being explored for various applications, such as actuated tangible user interfaces**Liu et al., "A survey on swarm user interface design"**, providing haptic feedback**Soto et al., "Distributed Haptic Feedback in Swarm User Interfaces"**, creating physical displays**Gao et al., "Physical Displays with Distributed Robotics"**, embodying the human body parts**Chen et al., "Embodied Human Body Parts using Distributed Robotics"**, manipulating objects on tabletop surfaces**Wang et al., "Swarm Robotics for Manipulating Objects on Tabletop Surfaces"**, and assisting digital fabrication machines**Kim et al., "Digital Fabrication Machines with Swarm Robotics"**.

Many Swarm UIs are designed primarily for tabletop use**Liu et al., "A survey on swarm user interface design"**, as tabletops are considered suitable locations for human interaction.
For example, **HERMITS expands the capabilities of individual robots by connecting detachable external parts, called mechanical shells, to modified small robots, thereby demonstrating the application of swarm robots through cooperative work** as presented by Wang et al.**.

Building on previous work in Swarm UIs, **corobos aims to extend the operational range of these interfaces by introducing a mechanism that facilitates transitions between tabletop and wall surfaces**.


\subsection{Robots Adhering to Surfaces}
Swarm UIs primarily utilize two-wheeled robots on tabletops, but there are also robots with alternative locomotion capabilities suitable for different environments.

For instance, **Griddrones are Swarm UIs that operate in the air as described by Liu et al.**.
These cube-shaped drones can create 3D shapes as voxels, with their size limited only by the available indoor space.
However, drones consume significant power for flight, making it challenging for them to remain airborne for extended periods.

Robots that adhere to walls or ceilings have been extensively investigated in the field of robotics**Chen et al., "Adhesion Mechanisms for Wall and Ceiling Robots"**.
Methods for adhering to walls and ceilings can be broadly classified into four categories: vacuum suction, adhesive materials, mechanical mechanisms, and magnetic adhesion.

Vacuum suction**Kim et al., "Vacuum Suction Adhesion in Swarm Robotics"**, or air thrust**Wang et al., "Air Thrust Adhesion in Swarm Robotics"**, generates an attractive force through air pressure.
While this method can adhere to various flat wall materials, it has disadvantages, such as noise and increased device size, making it unsuitable for indoor swarm robots.

The adhesive material approach**Liu et al., "Adhesive Materials for Wall and Ceiling Robots"**, uses dry or wet sticky substances to adhere to walls.
Although generally quieter than vacuum suction, its adhesion force is weaker because it depends on the surface friction of the wall material.

Mechanical mechanisms**Chen et al., "Mechanical Adhesion in Swarm Robotics"**, allow robots to adhere by inserting claw-shaped parts into the unevenness of the wall surface, offering strong adhesion force and high reliability of movement.
However, this approach often results in larger, multi-legged robots due to its complexity.

Magnetic adhesion**Kim et al., "Magnetic Adhesion in Swarm Robotics"**, is a commonly used method in various applications due to its silent operation and reliability on ferromagnetic surfaces.
For industrial purposes, inspection robots for steel structures (such as bridges) use magnetic adhesion to adhere to various surfaces**Zhou et al., "Magnetic Adhesion for Inspection Robots"**.
In educational settings, the iRobot Root uses magnets on its underside, allowing it to perform tasks like drawing and erasing lines with an attached pen.

In examples like **Rovables and Calico**, robots can move on clothing.
These robots climb vertically without modifying the clothing by clamping their wheels onto the fabric using magnets or specially designed rails.
% Potential applications include measuring human movement, modular displays, haptic feedback, and interactive clothing.

Among Swarm UIs that move on walls, **UbiSwarm is a notable example as described by Liu et al.**.
In UbiSwarm, magnets attached to the robot’s bottom surface allow them to adhere to ferromagnetic wall surfaces.

**AeroRigUI, ThrowIO, and Threading Space also use magnetic adhesion to attach objects and robots to ceilings, enabling 3D mid-air interactions, throwing and catching interactions, or altering spatial perception with physical threads as presented by Chen et al.**.

Although installing strong ferromagnetic materials like whiteboards (steel plates) on the wall surface is necessary, magnetic adhesion allows for smaller size, passive (non-powered) adhesion, noise-free operation, and stronger adhesion force than adhesive materials.
Consequently, for small-sized mobile robots in Swarm UIs, magnetic adhesion is a suitable choice, and thus, we have adopted this method for **corobos**.


\subsection{Surface-Transitioning Robots}
To transition between perpendicular surfaces, such as a tabletop and a wall, a robot must rotate 90 degrees while adhering to the surface, necessitating a unique mechanism.
For example, Ahmed et al. developed a robot**Ahmed et al., "Magnetic Adhesion-based Transition for Robotic Systems"**, for inspecting structures made of ferromagnetic materials.
This robot is equipped with joints that connect leg-like parts with magnets, enabling it to adhere to and transition on structures with noncontinuous surfaces.
Another approach involves using magnetic wheels**Kim et al., "Magnetic Wheels for Surface Transitioning Robots"**, which allow a robot to adhere to a structure’s surface and move freely in any direction by rotating the wheels.
However, these methods result in complex, high-performance robots, making them unsuitable for Swarm UIs.

Conversely, **FreeBOT consists of multiple spherical robots that adhere to each other using magnets, allowing their overall shape to change dynamically as described by Liu et al.**.
FreeBOT can also adhere to and transition on ferromagnetic walls while rotating on its own and can even ride on top of another robot.
However, this transition method is not ideal for interactions involving humans or objects, such as pushing or pulling in one direction, and accurately estimating the position is challenging due to the robots’ form factor.

In **UbiSwarm, researchers proposed the concept of Ubiquitous Robotic Interfaces (URIs) to make robots ubiquitous and capable of interacting with humans and their environment**.
Their vision involves groups of robots seamlessly transitioning from walls to tabletops and between different rooms at a speed comparable to the human eye’s refresh rate, providing virtually unlimited interaction space.
Although they mentioned a method involving a magnetic slope between walls and tabletops as a candidate for transitioning, it has not yet been realized in the paper.

**R-Track features modular robots equipped with magnetic tracks that can transition from wall to wall by connecting three robots in sequence as described by Kim et al.**.
These robots are capable of navigating both internal and external angles between two perpendicular surfaces.
However, their design is focused on inspection tasks, with a size of about 150 mm, making them less suitable for Swarm UI applications, which typically require smaller, more compact robots.
Additionally, **R-Track incorporates dedicated mechanisms like external connectors to facilitate wall-to-wall transitions, which, while effective, are unnecessary for simpler table-to-wall transitions in Swarm UI scenarios**.
The simpler structure of **corobos provides a more practical approach for these applications by minimizing complexity and focusing on specific user interaction needs**.

In **(Dis)Appearables, a small two-wheeled robot can transition between horizontal surfaces of different heights by using a ferromagnetic material ramp installed between the two surfaces as described by Liu et al.**.
While this method can be applied to **corobos system**, it restricts transition opportunities to locations with ramps, and the ramp’s continuous presence on the desktop may interfere with human activities.

In our approach, we aim to develop a transition method that requires minimal modification to both the robots and the desktop environment.