\section{Related Work}
First-order logic, initially championed by Hilbert as the formal language for mathematical description, formed the basis of his ambitious formalism project in mathematics **Hilbert, "Grundlagen der Arithmetik"**. This endeavor was subsequently challenged by Gödel and Turing through their seminal work on first-order arithmetic and computability theory **Gödel, Turing, "On Formally Undecidable Propositions"**. **Turing, "Computing Machinery and Intelligence"** further extended Turing's halting problem construction to develop the arithmetical hierarchy using alternating quantified computable predicates. Computational complexity theorists later adapted ideas from Turing, Gödel, and Kleene to establish foundational results in time and space complexity, catalyzing systematic studies in complexity theory and algorithm design **Kleene, "Introduction to Metamathematics"**. Our proposed formalism can be viewed as an adaptation of these computational constructions to model real-world reasoning problems. This approach enables formal categorization of reasoning problems and potentially introduces additional theoretical tools for their analysis.
%\twr{I would avoid the word ``differentiation.''}

LLMs have demonstrated significant potential across various domains, particularly through the application of test-time computation to enhance their performance. Prompt engineering techniques, such as CoT and Tree of Thoughts (ToT) **Brown et al., "Language Models play DOTA"**, have been shown to augment the reasoning capabilities of less robust LLMs on complex reasoning tasks. However, a formal framework for
%\twrchanged{
classifying
%}
the complexity of reasoning problems has been lacking. This study proposes a formal description of reasoning, which aims to facilitate researchers' understanding of the underlying complexity of reasoning problems.

We employ LLMs to synthesize programs that implement our PEA framework, addressing real-world computational problems. While recent works have utilized LLMs for program synthesis in reasoning tasks, our approach distinguishes itself by targeting more complex reasoning problems **Andreas et al., "Reasoning with Weights"**. From a first-order-logic perspective, we 
%\twrchanged{
go beyond quantifier-free formulations used in
% beyond unquantified concrete predicate evaluation in 
previous studies to quantified problems (see appendix for a detailed discussion).
%}
%We hypothesize that program execution becomes crucial in this context due to the requirements of extensive search spaces and precise predicate evaluation.

A parallel line of research uses established solvers as underlying reasoning engines for real-world problems, with LLMs facilitating the translation process **Denniston et al., "Solving Large Linear Programs using a Simple Solver"**. However, a programming language constrained by solver binding significantly reduces its programmability and often necessitates substantial human effort to ensure translation correctness, particularly in API usage and adherence to specific programming structures. Furthermore, while solvers typically use fixed proof-search optimization strategies, our approach leverages LLMs' programmability to address a broader range of challenges and allows customization of search space optimization, potentially offering greater flexibility and efficiency in problem-solving. %However, these solvers are typically designed for specific problem types, such as SAT or planning.
%\twr{This argument is a poor one: what is the difference between ``specific problem types'' (i.e., for certain fragments of logic) and complexity classes as discussed in \Cref{Se:Method}?
%Note that the field of Descriptive Complexity studies exactly the relationship between the families of logical structures that can be define via a formula in some logic language and standard Turing-machine-based complexity classes.}
%In contrast, our work addresses general reasoning problems, leveraging the programmability of LLMs to tackle a broader class of challenges. This approach enables a more versatile application of computational reasoning across diverse problem domains.