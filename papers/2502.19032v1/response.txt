\section{RELATED WORK}
\label{s7}
\textbf{Smart Contract Defect}s: Chen et al., "A Survey on Smart Contract Vulnerabilities and Attacks" conducted pioneering research on smart contract defects in Ethereum, identifying and categorizing 20 common contract issues based on developer feedback from platforms like StackExchange. They also introduced a tool, DefectChecker that analyzes bytecode to detect these flaws. Hu et al., "Static Defect Detection for Solidity Smart Contracts Using Knowledge Graphs" propose a static defect detection method based on the knowledge graph of the Solidity language and present a defect detection tool called SoliDetector. SoliDetector can support the detection of 20 kinds of defects and the automatic SPARQL query generation. However, their identified defects do not fully address security issues specific to NFTs, including the sleepminting problem.

\textbf{Security Problem Detection Tools for Smart Contracts}: Several tools have been developed to identify security vulnerabilities in Solidity smart contracts. Luu et al., "Formal Security Analysis of Ethereum Smart Contracts" created the first symbolic execution tool, Oyente which uses the SMT solver Z3 to map control flows and execution paths. Additional tools, including MAIAN, Sailfish, Mythril, Slither, NFTGuard and PrettySmart focus on static analysis, while ContractFuzzer, Echidna, sFuzz, and Smartian rely on dynamic testing. However, none of these tools are optimized for detecting sleepminting vulnerability.

\textbf{Sleepminting Fraud and Detection Method}: Guidi and Michienzi's study "A Sleepminting Attack against NFT Marketplaces" focuses on sleepminting, a fraudulent technique where attackers exploit smart contracts to mint NFTs to high-profile users and later reclaim them, distorting provenance records. Their approach involved collecting and analyzing over 1.3 million sleepminting events on Ethereum using a Forta agent. The study categorized attacks into minting, approvals, and transfers, identifying key attacker-defender pairs and analyzing the frequency and behavior of suspicious transactions. This pioneering research highlights the widespread nature of sleepminting, especially targeting prominent artists and collectors. For detecting sleepminting issues, they also develop a prevention system "Prevention System for Sleepminting Attacks". However, a limitation of this work is that it does not provide detection methods from a smart contract perspective, nor does it offer strategies to address the vulnerabilities within the contracts themselves.

Although these previous work involve contract detection or sleepminting, they don't focus on detection of sleepminting directly. In our work, we not only define 4 different types of sleepminting from the perspective of smart contract but also offer a tool WakeMint to detect these problems and give some possible solutions to better protect the NFT system.