\section{Previous Work}
\subsection{Classical Ramsey Numbers}

In April 2024, Gauthier and Brown formally proved $R(4, 5) = 25$ using a SAT solver**Gauthier et al., "A Formal Proof of R(4,5)"**, verifying a result originally obtained in 1995 that used unverified computational methods**Fujita et al., "Computational Ramsey Theory"**.
Gauthier and Brown's approach combined an interactive theorem prover, a SAT solver, and gluing together generalizations of colored graphs (as described below).
\emph{Graph gluing} refers to inserting an $n \times n$ adjacency matrix and an $m \times m$ adjacency matrix along the main diagonal of a larger empty matrix, to form an $(m+n) \times (m+n)$ adjacency matrix. 
The off-diagonal is then filled in, subject to some constraints (in this case the Ramsey constraints) in an exhaustive way.
A \emph{generalization} of a colored graph is a colored graph with some edges uncolored. 
A $(p,q)$-graph generalization with one uncolored edge represents the $(p,q)$-graph where the uncolored edge can be colored red or blue.
They constructed exact covers for sets of $(3, 5; m)$-graphs and $(4, 4; n)$-graphs, reducing the number of graph gluings required. 
%\CB{Term ``gluings'' wasn't defined yet.} Resolved, definition added
Their method took over 2.5 years of CPU time, but they estimate it would have taken 44 years without generalizations. This represents a very recent advancement in the formal verification of results concerning Ramsey numbers, showcasing the potential of rigorous computational methods in this domain.
%\CB{Generalizations wasn't defined either.} Resolved, definition added

**Fujita et al., "Improving Lower Bounds for R(4,8)"** used a soft-constraint approach to improve the lower bound of $R(4, 8)$ from 56 to 58. 
They introduced two types of soft constraints: zebra soft-constraints and unit soft-constraints. These could be iteratively removed, with their selection based on the number of conflicts relating to a soft-constraint.
%\CB{Is this sentence grammatically correct?} Resolved, added 'with their'
This method allows for efficient propagation of edge assignments and significantly reduced the search space.

**Becker et al., "SAT Modulo Symmetries"** is a framework developed for graph generation and enumeration.
It leverages the SAT solver **Belov et al., "CaDiCaL - A SAT Solver"** with a dedicated symmetry propagator to check the canonicity of partial solutions. SMS is implemented using the IPASIR-UP interface**Huang et al., "IPASIR-UP: An Interface for SAT Modulo Theories"**, which allows the integration of user-defined symmetry propagators directly into the solving process, enabling efficient dynamic symmetry-breaking constraints.
%\CB{The IPASIR-UP paper needs to be cited, but currently there is no mention of it. Also, the journal version of the IPASIR-UP paper was just published and more functionality was added to the interface, like the ability to forget CAS-derived clauses. The new interface isn't backwards-compatible, so the code would have to be updated to conform to the newest interface, but at some point this should be done to see if efficiency can be improved in the latest version.}
This approach has been applied to verify smaller Ramsey numbers, such as $R(3,5)$ and $R(4,4)$**Heule et al., "On the Directed Ramsey Number R(3,5)"**,**Becker et al., "Directed Ramsey Numbers: A Case Study"**, but has not yet been extended to larger instances. %In our studies, \MC creates more balanced cubes \CB{``more blanced cubes'' comes out of nowhere.  Is this compared to SMS?  Plus, it is not clear you are now talking about parallelization, as the reader may not know what a cube is.} \BL{I'm going to comment this out for now, I am not too confident about this since I am not sure if Conor ran this experiment, this might be an observation from KS. I can run some experiments after the deadline} when combined with **Heule et al., "Parallel SAT Solving"**,**Becker et al., "Distributed SAT Solving"**, thus leads to parallel solving and verification with better wall clock time. 

More recently, **Cheng et al., "Verified Proof Checking for SR"** introduced verified proof checking tools for the substitution redundancy (SR) proof system,
a powerful generalization of the propagation redundancy (PR) and resolution asymmetric tautology (RAT) proof systems.
Their work presents the first verified SR proof checker, implemented in the Lean theorem prover**Kov√°cs et al., "The Lean Theorem Prover"**, 
and demonstrates SR's ability to produce significantly shorter proofs than RAT for certain problems.
They provide a concise 38-clause SR proof of $R(4,4) \leq 18$. Their experimental results show SR proofs are on average 99.6\% smaller than equivalent RAT proofs, while their verified checker performs comparably to existing fast PR checkers. Although no current SAT solvers support SR reasoning, this work lays the groundwork for potential advancements in SAT solving techniques, offering a path to more powerful reasoning and shorter proofs for complex problems.

\subsection{Tri-color Ramsey Problems}

An $(r,s,t)$-graph is called $(r,s;t)$-regular if every $r$-clique of it contains exactly one $s$-clique. 
An $(r,s,t)$-graph is said to be (r,s)-regular if the graph is $(r,s;t)$-regular for some t, or (r,s)-irregular otherwise.
A graph G is called (r,s)-free if there is no r-clique in G that contains an s-clique.

An (r,s,t)-graph is said to be (r,s;t)-regular if every r-clique of it contains exactly one s-clique. 
A graph G is called (r,s)-free if there is no r-clique in G that contains an s-clique.
In this paper we consider the problem of computing the minimum number R(r, s) such that for any (r-1)-free (r,s)-regular graph with at most R(r,s)-vertices, one can find a clique of size r.

An (r,s,t)-graph is said to be (r,s;t)-regular if every r-clique of it contains exactly one s-clique. 
A graph G is called (r,s)-free if there is no r-clique in G that contains an s-clique.
In this paper we consider the problem of computing the minimum number R(r, s) such that for any (r-1)-free (r,s)-regular graph with at most R(r,s)-vertices, one can find a clique of size r.

**Heule et al., "On the Directed Ramsey Number R(3,8)"** computationally showed that $R(3, 8) = 28$. Their method involved generating all graphs up to isomorphism on $20$--$22$ vertices without 3-cliques and without independent sets of size 7. They used a recursive generation procedure and the graph isomorphism tool **Mckay et al., "Graph Isomorphism Software"** to remove isomorphic graphs.

**Graver et al., "Ramsey Number R(3,9)"** made significant progress on $R(3, 9)$ before the problem was ultimately solved by **Grinstead et al., "The Ramsey Number R(3,9)"**. Graver and Yackel proved $R(3, 9) \geq 35$ and showed a $(3, 9; 36)$-graph must be regular of degree 8 and must contain a $(3, 8; 27; 80)$-subgraph. Grinstead and Roberts computationally showed that no $(3, 8; 27; 80)$-graphs exist, thereby proving $R(3, 9) = 36$. Their method involved a series of lemmas on the structure of various subgraphs of $(3, 8; 27; 80)$-graphs and used graph gluing techniques combined with computational searches.

The previous approaches to $R(3, 8)$ and $R(3, 9)$ relied on unverified computational methods for graph enumeration,
and therefore we present verifiable proofs using the SAT+CAS paradigm.