@article{almeida_perceived_2023,
	title = {Perceived {Importance} of {Metrics} for {Agile} {Scrum} {Environments}},
	volume = {14},
	copyright = {http://creativecommons.org/licenses/by/3.0/},
	issn = {2078-2489},
	url = {https://www.mdpi.com/2078-2489/14/6/327},
	doi = {10.3390/info14060327},
	abstract = {Metrics are key elements that can give us valuable information about the effectiveness of agile software development processes, particularly considering the Scrum environment. This study aims to learn about the metrics adopted to assess agile development processes and explore the impact of how the role performed by each member in Scrum contributed to increasing/reducing the perception of the importance of these metrics. The impact of years of experience in Scrum on this perception was also explored. To this end, a quantitative study was conducted with 191 Scrum professionals in companies based in Portugal. The results show that the Scrum role is not a determining factor, while individuals with more years of experience have a higher perception of the importance of metrics related to team performance. The same conclusion is observed for the business value metric of the product backlog and the percentage of test automation in the testing phase. The findings allow for extending the knowledge about Scrum project management processes and their teams, in addition to offering important insights into the implementation of metrics for software engineering companies that adopt Scrum.},
	language = {en},
	number = {6},
	urldate = {2024-10-29},
	journal = {Information},
	author = {Almeida, Fernando and Carneiro, Pedro},
	month = jun,
	year = {2023},
	keywords = {Scrum, agile, information management, metrics, process measurement, project management, software engineering},
	pages = {327},
}

@inproceedings{bein_student_2023,
	address = {New York, NY, USA},
	series = {{SAC} '23},
	title = {Student {Research} {Abstract}: {Why} and {Where} {Software} {Developers} are (not) using {Project} {Data} in {Agile} {Retrospectives}},
	isbn = {9781450395175},
	shorttitle = {Student {Research} {Abstract}},
	url = {https://dl.acm.org/doi/10.1145/3555776.3577205},
	doi = {10.1145/3555776.3577205},
	abstract = {Software project data holds knowledge of the development process enacted in teams. However, it is rarely used for process improvement approaches as part of agile retrospective meetings. We argue that this integration shows promise: Project data is evidence of what occurred in the last development iteration(s). It complements the perceptions of individuals that are usually exclusively relied upon in retrospectives. In this paper, we present the results of semi-structured interviews with agile practitioners, which revealed missing knowledge of the capabilities, implementation, and application of project data analyses as a key reason for the lack of usage. Looking forward, we provide an initial look at a structured approach to the usage of software project data in agile retrospectives.},
	urldate = {2024-10-07},
	booktitle = {Proceedings of the 38th {ACM}/{SIGAPP} {Symposium} on {Applied} {Computing}},
	publisher = {Association for Computing Machinery},
	author = {Bein, Leon},
	month = jun,
	year = {2023},
	pages = {1060--1063},
}

@article{biesialska_big_2021,
	title = {Big {Data} analytics in {Agile} software development: {A} systematic mapping study},
	volume = {132},
	issn = {0950-5849},
	shorttitle = {Big {Data} analytics in {Agile} software development},
	url = {https://www.sciencedirect.com/science/article/pii/S0950584920301981},
	doi = {10.1016/j.infsof.2020.106448},
	abstract = {Context:
Over the last decade, Agile methods have changed the software development process in an unparalleled way and with the increasing popularity of Big Data, optimizing development cycles through data analytics is becoming a commodity.
Objective:
Although a myriad of research exists on software analytics as well as on Agile software development (ASD) practice on itself, there exists no systematic overview of the research done on ASD from a data analytics perspective. Therefore, the objective of this work is to make progress by linking ASD with Big Data analytics (BDA).
Method:
As the primary method to find relevant literature on the topic, we performed manual search and snowballing on papers published between 2011 and 2019.
Results:
In total, 88 primary studies were selected and analyzed. Our results show that BDA is employed throughout the whole ASD lifecycle. The results reveal that data-driven software development is focused on the following areas: code repository analytics, defects/bug fixing, testing, project management analytics, and application usage analytics.
Conclusions:
As BDA and ASD are fast-developing areas, improving the productivity of software development teams is one of the most important objectives BDA is facing in the industry. This study provides scholars with information about the state of software analytics research and the current trends as well as applications in the business environment. Whereas, thanks to this literature review, practitioners should be able to understand better how to obtain actionable insights from their software artifacts and on which aspects of data analytics to focus when investing in such initiatives.},
	urldate = {2024-10-29},
	journal = {Information and Software Technology},
	author = {Biesialska, Katarzyna and Franch, Xavier and Muntés-Mulero, Victor},
	month = apr,
	year = {2021},
	keywords = {Agile software development, Artificial intelligence, Data analytics, Literature review, Machine learning, Software analytics},
	pages = {106448},
}

@book{derby_agile_2006,
	address = {Raleigh, NC},
	title = {Agile retrospectives: making good teams great},
	isbn = {9780977616640},
	shorttitle = {Agile retrospectives},
	publisher = {Pragmatic Bookshelf},
	author = {Derby, Esther and Larsen, Diana},
	year = {2006},
	note = {OCLC: ocm71756468},
	keywords = {Computer software, Development, Project management, Teams in the workplace},
}

@article{erdogan_more_2018,
	title = {More effective sprint retrospective with statistical analysis},
	volume = {30},
	copyright = {http://onlinelibrary.wiley.com/termsAndConditions\#vor},
	issn = {2047-7473, 2047-7481},
	url = {https://onlinelibrary.wiley.com/doi/10.1002/smr.1933},
	doi = {10.1002/smr.1933},
	abstract = {Abstract 
            Scrum teams aim to deliver products productively with highest possible value and quality, so they try to deliver high priority and high value product backlog items in earlier sprints. Making size estimation of product backlog items correctly is one of the most prominent factors for effective sprint planning. Retrospective meetings are an opportunity for teams to improve product quality, their productivity, and estimation capability. Enhancing in those areas requires empiricism as agility requires; hence, measureable indicators should be inspected and adapted at regular intervals. In this study, we assessed how and what kind of historical data is required to be collected for monitoring, and how statistical analysis can be investigated for inspection and adaptation in retrospective meetings. We experimented that statistics of ‚ÄúCorrelation between Story Point and Actual Effort‚Äù and ‚ÄúConsistency of Relative Estimation‚Äù were convenient for inspection and adaptation of estimation capability of teams. Past retrospective meetings also showed that statistics of ‚ÄúTeam's Actual Effort on Product,‚Äù ‚ÄúTeam Velocity,‚Äù ‚ÄúActual Effort for One Story Point,‚Äù ‚ÄúInnovation Rate,‚Äù and ‚ÄúVelocity vs Unplanned Effort Rate‚Äù were helpful to control and increase the productivity of teams. ‚ÄúActual Effort Rate of Quality Activities‚Äù and ‚ÄúSubcomponent Defect Density‚Äù statistical results helped to enhance product quality.},
	language = {en},
	number = {5},
	urldate = {2024-10-07},
	journal = {Journal of Software: Evolution and Process},
	author = {Erdoğan, Onur and Pekkaya, Muhammed Emre and Gök, Halime},
	month = may,
	year = {2018},
	pages = {e1933},
}

@misc{fawzy_exploring_2024,
	title = {Exploring {Data} {Management} {Challenges} and {Solutions} in {Agile} {Software} {Development}: {A} {Literature} {Review} and {Practitioner} {Survey}},
	shorttitle = {Exploring {Data} {Management} {Challenges} and {Solutions} in {Agile} {Software} {Development}},
	url = {http://arxiv.org/abs/2402.00462},
	doi = {10.48550/arXiv.2402.00462},
	abstract = {Managing data related to a software product and its development poses significant challenges for software projects and agile development teams. Challenges include integrating data from diverse sources and ensuring data quality in light of continuous change and adaptation. To this end, we aimed to systematically explore data management challenges and potential solutions in agile projects. We employed a mixed-methods approach, utilizing a systematic literature review (SLR) to understand the state-of-research followed by a survey with practitioners to reflect on the state-of-practice. In the SLR, we reviewed 45 studies in which we identified and categorized data management aspects and the associated challenges and solutions. In the practitioner survey, we captured practical experiences and solutions from 32 industry experts to complement the findings from the SLR. Our findings reveal major data management challenges reported in both the SLR and practitioner survey, such as managing data integration processes, capturing diverse data, automating data collection, and meeting real-time analysis requirements. Based on our findings, we present implications for practitioners and researchers, which include the necessity of developing clear data management policies, training on data management tools, and adopting new data management strategies that enhance agility, improve product quality, and facilitate better project outcomes.},
	urldate = {2024-10-29},
	publisher = {arXiv},
	author = {Fawzy, Ahmed and Tahir, Amjed and Galster, Matthias and Liang, Peng},
	month = jul,
	year = {2024},
	note = {arXiv:2402.00462 [cs]},
	keywords = {Computer Science - Software Engineering},
}

@article{forsgren_space_2021,
	title = {The {SPACE} of {Developer} {Productivity}: {There}'s more to it than you think.},
	volume = {19},
	issn = {1542-7730, 1542-7749},
	shorttitle = {The {SPACE} of {Developer} {Productivity}},
	url = {https://dl.acm.org/doi/10.1145/3454122.3454124},
	doi = {10.1145/3454122.3454124},
	abstract = {Developer productivity is about more than an individual's activity levels or the efficiency of the engineering systems relied on to ship software, and it cannot be measured by a single metric or dimension. The SPACE framework captures different dimensions of productivity, and here we demonstrate how this framework can be used to understand productivity in practice and why using it will help teams better understand developer productivity and create better measures to inform their work and teams.},
	language = {en},
	number = {1},
	urldate = {2024-10-29},
	journal = {Queue},
	author = {Forsgren, Nicole and Storey, Margaret-Anne and Maddila, Chandra and Zimmermann, Thomas and Houck, Brian and Butler, Jenna},
	month = feb,
	year = {2021},
	pages = {20--48},
}

@misc{google_2024_dora,
	title = {2024 {State} of {DevOps} {Report}},
	url = {https://cloud.google.com/resources/devops/state-of-devops},
	abstract = {DevOps tools, practices, and research to help you get the agility, without compromising on quality or stability.},
	language = {en-US},
	urldate = {2024-10-29},
	journal = {Google Cloud},
	author = {Google},
}

@misc{jira,
	title = {Jira},
	url = {https://www.atlassian.com/software/jira},
	urldate = {2024-10-07},
}

@misc{manager_21_2021,
	title = {21 {Sprint} {Retrospective} {Ideas} {To} {Get} {Quiet} {Project} {Teams} {Talking}},
	url = {https://thedigitalprojectmanager.com/projects/leadership-team-management/get-quiet-teams-talking-agile-retrospectives/},
	abstract = {Struggling to engage a quiet team? Steal these 21 tips to get teams talking and start running better, more productive sprint retrospective meetings.},
	language = {en-US},
	urldate = {2024-10-07},
	journal = {The Digital Project Manager},
	author = {Galen Low},
	month = aug,
	year = {2021},
}

@InProceedings{matthies_experience_2021,
        author="Matthies, Christoph
        and Dobrigkeit, Franziska",
        editor="Przyby{\l}ek, Adam
        and Miler, Jakub
        and Poth, Alexander
        and Riel, Andreas",
        title="Experience vs Data: A Case for More Data-Informed Retrospective Activities",
        booktitle="Lean and Agile Software Development",
        year="2021",
        publisher="Springer International Publishing",
        address="Cham",
        pages="130--144",
        abstract="Effective Retrospective meetings are vital for ensuring productive development processes because they provide the means for Agile software development teams to discuss and decide on future improvements of their collaboration. Retrospective agendas often include activities that encourage sharing ideas and motivate participants to discuss possible improvements. The outcomes of these activities steer the future directions of team dynamics and influence team happiness. However, few empirical evaluations of Retrospective activities are currently available. Additionally, most activities rely on team members experiences and neglect to take existing project data into account. With this paper we want to make a case for data-driven decision-making principles, which have largely been adopted in other business areas. Towards this goal we review existing retrospective activities and highlight activities that already use project data as well as activities that could be augmented to take advantage of additional, more subjective data sources. We conclude that data-driven decision-making principles, are advantageous, and yet underused, in modern Agile software development. Making use of project data in retrospective activities would strengthen this principle and is a viable approach as such data can support the teams in making decisions on process improvement.",
        isbn="978-3-030-67084-9"
}

@inproceedings{matthies_feedback_2019,
	title = {Feedback in {Scrum}: {Data}-{Informed} {Retrospectives}},
	shorttitle = {Feedback in {Scrum}},
	url = {https://ieeexplore.ieee.org/abstract/document/8802669},
	doi = {10.1109/ICSE-Companion.2019.00081},
	abstract = {Improving the way that teams work together by reflecting and improving the executed process is at the heart of agile processes. The idea of iterative process improvement takes various forms in different agile development methodologies, e.g. Scrum Retrospectives. However, these methods do not prescribe how improvement steps should be conducted in detail. In this research we investigate how agile software teams can use their development data, such as commits or tickets, created during regular development activities, to drive and track process improvement steps. Our previous research focused on data-informed process improvement in the context of student teams, where controlled circumstances and deep domain knowledge allowed creation and usage of specific process measures. Encouraged by positive results in this area, we investigate the process improvement approaches employed in industry teams. Researching how the vital mechanism of process improvement is implemented and how development data is already being used in practice in modern software development leads to a more complete picture of agile process improvement. It is the first step in enabling a data-informed feedback and improvement process, tailored to a team's context and based on the development data of individual teams.},
	urldate = {2024-10-29},
	booktitle = {2019 {IEEE}/{ACM} 41st {International} {Conference} on {Software} {Engineering}: {Companion} {Proceedings} ({ICSE}-{Companion})},
	author = {Matthies, Christoph},
	month = may,
	year = {2019},
	note = {ISSN: 2574-1934},
	keywords = {Companies, Industries, Interviews, Process control, Scrum, Scrum (Software development), Software, Tools, agile, retrospective, software development, software process improvement},
	pages = {198--201},
}

@inproceedings{matthies_mining_2020,
	address = {New York, NY, USA},
	series = {{ICSEW}'20},
	title = {Mining for {Process} {Improvements}: {Analyzing} {Software} {Repositories} in {Agile} {Retrospectives}},
	isbn = {9781450379632},
	shorttitle = {Mining for {Process} {Improvements}},
	url = {https://dl.acm.org/doi/10.1145/3387940.3392168},
	doi = {10.1145/3387940.3392168},
	abstract = {Software Repositories contain knowledge on how software engineering teams work, communicate, and collaborate. It can be used to develop a data-informed view of a team's development process, which in turn can be employed for process improvement initiatives. In modern, Agile development methods, process improvement takes place in Retrospective meetings, in which the last development iteration is discussed. However, previously proposed activities that take place in these meetings often do not rely on project data, instead depending solely on the perceptions of team members. We propose new Retrospective activities, based on mining the software repositories of individual teams, to complement existing approaches with more objective, data-informed process views.},
	urldate = {2024-10-07},
	booktitle = {Proceedings of the {IEEE}/{ACM} 42nd {International} {Conference} on {Software} {Engineering} {Workshops}},
	publisher = {Association for Computing Machinery},
	author = {Matthies, Christoph and Dobrigkeit, Franziska and Hesse, Guenter},
	month = sep,
	year = {2020},
	pages = {189--190},
}

@inproceedings{matthies_playing_2020,
	address = {New York, NY, USA},
	series = {{ICSE} '20},
	title = {Playing with your project data in scrum retrospectives},
	isbn = {9781450371223},
	url = {https://dl.acm.org/doi/10.1145/3377812.3382164},
	doi = {10.1145/3377812.3382164},
	abstract = {Modern, agile software development methods rely on iterative work and improvement cycles to deliver their claimed benefits. In Scrum, the most popular agile method, process improvement is implemented through regular Retrospective meetings. In these meetings, team members reflect on the latest development iteration and decide on improvement actions. To identify potential issues, data on the completed iteration needs to be gathered. The Scrum method itself does not prescribe these steps in detail. However, Retrospective games, i.e. interactive group activities, have been proposed to encourage the sharing of experiences and problems. These activities mostly rely on the collected perceptions of team members. However, modern software development practices produce a large variety of digital project artifacts, e.g. commits in version control systems or test run results, which contain detailed information on performed teamwork. We propose taking advantage of this information in new, data-driven Retrospective activities, allowing teams to gain additional insights based on their own team-specific data.},
	urldate = {2024-10-07},
	booktitle = {Proceedings of the {ACM}/{IEEE} 42nd {International} {Conference} on {Software} {Engineering}: {Companion} {Proceedings}},
	publisher = {Association for Computing Machinery},
	author = {Matthies, Christoph},
	month = oct,
	year = {2020},
	pages = {113--115},
}

@inproceedings{matthies_towards_2019,
	title = {Towards {Using} {Data} to {Inform} {Decisions} in {Agile} {Software} {Development}: {Views} of {Available} {Data}},
	shorttitle = {Towards {Using} {Data} to {Inform} {Decisions} in {Agile} {Software} {Development}},
	url = {http://arxiv.org/abs/1907.12959},
	doi = {10.5220/0007967905520559},
	abstract = {Software development comprises complex tasks which are performed by humans. It involves problem solving, domain understanding and communication skills as well as knowledge of a broad variety of technologies, architectures, and solution approaches. As such, software development projects include many situations where crucial decisions must be made. Making the appropriate organizational or technical choices for a given software team building a product can make the difference between project success or failure. Software development methods have introduced frameworks and sets of best practices for certain contexts, providing practitioners with established guidelines for these important choices. Current Agile methods employed in modern software development have highlighted the importance of the human factors in software development. These methods rely on short feedback loops and the self-organization of teams to enable collaborative decision making. While Agile methods stress the importance of empirical process control, i.e. relying on data to make decisions, they do not prescribe in detail how this goal should be achieved. In this paper, we describe the types and abstraction levels of data and decisions within modern software development teams and identify the benefits that usage of this data enables. We argue that the principles of data-driven decision making are highly applicable, yet underused, in modern Agile software development.},
	urldate = {2024-10-29},
	booktitle = {Proceedings of the 14th {International} {Conference} on {Software} {Technologies}},
	author = {Matthies, Christoph and Hesse, Guenter},
	year = {2019},
	note = {arXiv:1907.12959 [cs]},
	keywords = {Computer Science - Software Engineering},
	pages = {552--559},
}

@article{mccausland_creating_2023,
	title = {Creating {Psychological} {Safety} in the {Workplace}},
	volume = {66},
	issn = {0895-6308, 1930-0166},
	url = {https://www.tandfonline.com/doi/full/10.1080/08956308.2023.2164439},
	doi = {10.1080/08956308.2023.2164439},
	language = {en},
	number = {2},
	urldate = {2024-11-07},
	journal = {Research-Technology Management},
	author = {McCausland, Tammy},
	month = mar,
	year = {2023},
	pages = {56--58},
}

@misc{miro,
	title = {Miro},
	url = {https://miro.com/},
	urldate = {2024-10-07},
}

@misc{nyt_online,
	title = {What {G}oogle Learned From Its Quest to Build the Perfect Team},
	url = {https://www.nytimes.com/2016/02/28/magazine/what-google-learned-from-its-quest-to-build-the-perfect-team.html},
	urldate = {2024-10-29},
	author = {Charles Duhigg},
}

@misc{ram_data-driven_2022,
	type = {v√§it√∂skirja},
	title = {Data-driven process improvement in agile software development : an industrial multiple-case study},
	copyright = {https://rightsstatements.org/vocab/InC/1.0/},
	shorttitle = {Data-driven process improvement in agile software development},
	url = {https://oulurepo.oulu.fi/handle/10024/36880},
	abstract = {{\textless}div lang="en" class="abs"{\textgreater}{\textless}p class="abs\_header"{\textgreater}Abstract{\textless}/p{\textgreater}{\textless}p{\textgreater}Practitioners have been trying to capitalise on the software development data produced as a result of the use of modern development approaches like Agile Software Development (ASD). {\textless}em{\textgreater}Structured{\textless}/em{\textgreater} software development data have been utilised in software metrics programme for undertaking process improvement, but what metrics practitioners prefer and why need further clarity, especially in large industrial contexts. Success factors for a metrics programme in ASD are also not as well understood as they are in traditional software development. Lastly, there is little knowledge on how practitioners can capitalise on their {\textless}em{\textgreater}unstructured{\textless}/em{\textgreater} data, which are generated in larger volume than {\textless}em{\textgreater}structured{\textless}/em{\textgreater} data.{\textless}/p{\textgreater}{\textless}p{\textgreater}In the context of the European Union Horizon 2020 project Q-Rapids, a multiple-case study was conducted with four software-intensive Agile companies to address the above research gaps in two phases. In the first phase, knowledge about the state of the practice and the practitioners‚Äô perspective influencing the definition, operationalisation, and use of metrics programme was gathered. In the second phase, empirical evidence for how practitioners utilised their {\textless}em{\textgreater}structured{\textless}/em{\textgreater} data in a metrics programme for process improvement was elicited. Lastly, empirical evidence was sought on how practitioners can capitalise on their {\textless}em{\textgreater}unstructured{\textless}/em{\textgreater} data.{\textless}/p{\textgreater}{\textless}p{\textgreater}To utilise their data to increase awareness and exercise control, practitioners prefer metrics for measuring planning, implementation, and testing processes. Contextual factors like company size and project characteristics determine if metrics will be a trigger or the main driver for process improvement. The {\textless}em{\textgreater}prerequisites{\textless}/em{\textgreater} that facilitate such use of metrics programmes concern data, process, and metrics actionability. For {\textless}em{\textgreater}unstructured{\textless}/em{\textgreater} data, text-mining techniques such as Latent Dirichlet Allocation can help derive development-related insights. These results highlight the utility of two distinct approaches that practitioners can use to capitalise on their software development data, even in large industrial contexts.{\textless}/p{\textgreater}{\textless}/div{\textgreater}},
	language = {eng},
	urldate = {2024-10-29},
	journal = {jultika.oulu.fi},
	author = {Ram, Prabhat},
	month = oct,
	year = {2022},
}

@misc{retromat,
	title = {Retromat {Miroboard} {Mega} {Template} {Retrospectives}},
	url = {https://retromat.org/blog/retromat-miroboard-mega-template/},
	language = {en-US},
	urldate = {2024-10-07},
}

@misc{scrum,
	title = {Home {\textbar} {Scrum} {Guides}},
	url = {https://scrumguides.org/},
	urldate = {2024-10-07},
}

@misc{scrum_alliance,
	title = {The {State} of {Scrum} {Report}},
	howpublished ={\url{https://www.scrumalliance.org/ScrumRedesignDEVSite/media/ScrumAllianceMedia/Files%20and%20PDFs/State%20of%20Scrum/2017-SoSR-Final-Version-(Pages).pdf}},
	urldate = {2024-10-07},
}

@inproceedings{yalciner_data-driven_2024,
	address = {Cham},
	title = {Data-{Driven} {Software} {Engineering}: {A} {Systematic} {Literature} {Review}},
	isbn = {9783031711398},
	shorttitle = {Data-{Driven} {Software} {Engineering}},
	doi = {10.1007/978-3-031-71139-8_2},
	abstract = {Over the past few years, emerging technologies have had a significant impact on the processes of software engineering (SE). Consequently, there has been a shift from a more experience-based approach to a data-driven decision-making approach. This shift to data-driven decision-making has resulted in more reliable and accurate decision-making, ultimately leading to more efficient and effective SE processes and a reduction in rework. Our study involved a comprehensive systematic literature review (SLR) examining the utilization of data-driven approaches in SE processes over the last decade. Our analysis of 34 primary studies revealed that data-driven approaches are most commonly utilized. After analyzing the primary studies, we found that data-driven methods are commonly employed in SE processes for software management and software testing. Researchers are delving into subfields of artificial intelligence, including machine learning and deep learning, to devise decision-making models for SE processes that have undergone extensive validation. We aim to provide valuable insights into the usage of data-driven approaches in SE by conducting a systematic mapping based on the studies that we have found.},
	language = {en},
	booktitle = {Systems, {Software} and {Services} {Process} {Improvement}},
	publisher = {Springer Nature Switzerland},
	author = {Yalçıner, Aybüke and Dikici, Ahmet and Gökalp, Ebru},
	editor = {Yilmaz, Murat and Clarke, Paul and Riel, Andreas and Messnarz, Richard and Greiner, Christian and Peisl, Thomas},
	year = {2024},
	pages = {19--32},
}

