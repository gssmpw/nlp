@inproceedings{sharma_journey_2019,
	title = {A {Journey} {Towards} {Providing} {Intelligence} and {Actionable} {Insights} to {Development} {Teams} in {Software} {Delivery}},
	url = {https://ieeexplore.ieee.org/document/8952441},
	doi = {10.1109/ASE.2019.00142},
	abstract = {For delivering high-quality artifacts within the budget and on schedule, software delivery teams ideally should have a holistic and in-process view of the current health and future trajectory of the project. However, such insights need to be at the right level of granularity and need to be derived typically from a heterogeneous project environment, in a way that helps development team members with their tasks at hand. Due to client mandates, software delivery project environments employ many disparate tools and teams tend to be distributed, thus making the relevant information retrieval, insight generation, and developer intelligence augmentation process fairly complex. In this paper, we discuss our journey in this area spanning across facets like software project modelling and new development metrics, studying developer priorities, adoption of new metrics, and different approaches of developer intelligence augmentation. Finally, we present our exploration of new immersive technologies for human-centered software engineering.},
	urldate = {2024-11-07},
	booktitle = {2019 34th {IEEE}/{ACM} {International} {Conference} on {Automated} {Software} {Engineering} ({ASE})},
	author = {Sharma, Vibhu Saujanya and Mehra, Rohit and Podder, Sanjay and Burden, Adam P.},
	month = nov,
	year = {2019},
	note = {ISSN: 2643-1572},
	keywords = {Conferences, Indexes, Measurement, Project management, Software, Software Delivery, Software Analytics, Project Management, Actionable Insights, Software engineering, Tools},
	pages = {1214--1215},
}


@inproceedings{singer_people_2017,
	address = {Cham},
	title = {People {Analytics} in {Software} {Development}},
	isbn = {9783319600741},
	doi = {10.1007/978-3-319-60074-1_6},
	language = {en},
	booktitle = {Grand {Timely} {Topics} in {Software} {Engineering}},
	publisher = {Springer International Publishing},
	author = {Singer, Leif and Storey, Margaret-Anne and Figueira Filho, Fernando and Zagalsky, Alexey and German, Daniel M.},
	editor = {Cunha, JXcome and Fernandes, JoXo P. and LXmmel, Ralf and Saraiva, JoXo and Zaytsev, Vadim},
	year = {2017},
	pages = {124--153},
}

@inproceedings{bjarnason_evidence-based_2012,
	address = {Berlin, Heidelberg},
	title = {Evidence-{Based} {Timelines} for {Agile} {Project} {Retrospectives} - {A} {Method} {Proposal}},
	isbn = {9783642303500},
	doi = {10.1007/978-3-642-30350-0_13},
	abstract = {Retrospective analysis of agile projects can support identification of issues through team reflection and may enable learning and process improvements. Basing retrospectives primarily on experiences poses a risk of memory bias as people may remember events differently, which can lead to incorrect conclusions. This bias is enhanced in project retrospectives which cover a longer period compared to iteration retrospectives. To support teams in recalling accurate and joint views of projects, we propose using an evidence-based timeline with historical data as input to project retrospectives. The proposed method was developed together with a large software development company in the telecommunications domain. This paper outlines a method for visualizing an evidence-based project timeline by illustrating aspects such as business priority, iterations and test activities. Our method complements an experience-based approach by providing objective data as a starting point for reflection and aims to support objective analysis of issues and root causes.},
	language = {en},
	booktitle = {Agile {Processes} in {Software} {Engineering} and {Extreme} {Programming}},
	publisher = {Springer},
	author = {Bjarnason, Elizabeth and Regnell, Björn},
	editor = {Wohlin, Claes},
	year = {2012},
	pages = {177--184},
}



@article{mccausland_creating_2023,
	title = {Creating {Psychological} {Safety} in the {Workplace}},
	volume = {66},
	issn = {0895-6308, 1930-0166},
	url = {https://www.tandfonline.com/doi/full/10.1080/08956308.2023.2164439},
	doi = {10.1080/08956308.2023.2164439},
	language = {en},
	number = {2},
	urldate = {2024-11-07},
	journal = {Research-Technology Management},
	author = {McCausland, Tammy},
	month = mar,
	year = {2023},
	pages = {56--58},
}

@misc{nyt_online,
	title = {What {G}oogle Learned From Its Quest to Build the Perfect Team},
	url = {https://www.nytimes.com/2016/02/28/magazine/what-google-learned-from-its-quest-to-build-the-perfect-team.html},
	urldate = {2024-10-29},
	author = {Charles Duhigg},
}

@misc{kanban_online,
	title = {{K}anban {G}uides},
	url = {https://kanbanguides.org/},
	urldate = {2024-10-29},
	author = {Daniel Vacanti and John Coleman},
}

@misc{shapeup_online,
	title = {Shape Up: a complete guide to this new development methodology (2024)},
	url = {https://agilefirst.io/what-is-shape-up/},
	urldate = {2024-10-29},
	author = {Michael August},
}

@misc{multitudes_blog_trust,
	title = {{W}ant productive engineers? {S}tart with trust, not metrics},
	url = {https://www.multitudes.co/blog/want-productive-engineers-start-with-trust-not-metrics},
	urldate = {2024-10-29},
	author = {Eric Grigson and Lauren Peate},
}




@misc{pegg_role_nodate,
	title = {The {Role} of {Empathy} in {Retros} and {Writing} a {Team} {Support} {Charter}},
	url = {https://www.linkedin.com/pulse/role-empathy-retros-writing-team-support-charter-nic-pegg-ksnxe},
	abstract = {If you‚Äôve read my previous article on energizing retrospectives, you already know I‚Äôm passionate about creating meaningful team interactions. While that retro helped teams understand themselves in a new way, this new retro focuses on building empathy, not just recognizing challenges but creating a f},
	language = {en},
	urldate = {2024-10-29},
	author = {Pegg, Nic},
}

@misc{google_announcing_nodate,
	title = {Announcing the 2023 {State} of {DevOps} {Report}},
	url = {https://cloud.google.com/blog/products/devops-sre/announcing-the-2023-state-of-devops-report},
	abstract = {When it comes to building a successful DevOps practice, organizational culture and user-centricity are key, the 2023 State of DevOps Report finds.},
	language = {en-US},
	urldate = {2024-10-29},
	author = {Google},
}

@misc{google_2024_dora,
	title = {2024 {State} of {DevOps} {Report}},
	url = {https://cloud.google.com/resources/devops/state-of-devops},
	abstract = {DevOps tools, practices, and research to help you get the agility, without compromising on quality or stability.},
	language = {en-US},
	urldate = {2024-10-29},
	journal = {Google Cloud},
	author = {Google},
}

@techreport{dx_developer_nodate,
	title = {Developer {Productivity}
Metrics at {Top} {Tech}
Companies},
	url = {https://getdx.com/uploads/developer-productivity-metrics-at-top-tech-companies.pdf},
	author = {DX},
}

@article{forsgren_space_2021,
	title = {The {SPACE} of {Developer} {Productivity}: {There}'s more to it than you think.},
	volume = {19},
	issn = {1542-7730, 1542-7749},
	shorttitle = {The {SPACE} of {Developer} {Productivity}},
	url = {https://dl.acm.org/doi/10.1145/3454122.3454124},
	doi = {10.1145/3454122.3454124},
	abstract = {Developer productivity is about more than an individual's activity levels or the efficiency of the engineering systems relied on to ship software, and it cannot be measured by a single metric or dimension. The SPACE framework captures different dimensions of productivity, and here we demonstrate how this framework can be used to understand productivity in practice and why using it will help teams better understand developer productivity and create better measures to inform their work and teams.},
	language = {en},
	number = {1},
	urldate = {2024-10-29},
	journal = {Queue},
	author = {Forsgren, Nicole and Storey, Margaret-Anne and Maddila, Chandra and Zimmermann, Thomas and Houck, Brian and Butler, Jenna},
	month = feb,
	year = {2021},
	pages = {20--48},
}

@article{almeida_perceived_2023,
	title = {Perceived {Importance} of {Metrics} for {Agile} {Scrum} {Environments}},
	volume = {14},
	copyright = {http://creativecommons.org/licenses/by/3.0/},
	issn = {2078-2489},
	url = {https://www.mdpi.com/2078-2489/14/6/327},
	doi = {10.3390/info14060327},
	abstract = {Metrics are key elements that can give us valuable information about the effectiveness of agile software development processes, particularly considering the Scrum environment. This study aims to learn about the metrics adopted to assess agile development processes and explore the impact of how the role performed by each member in Scrum contributed to increasing/reducing the perception of the importance of these metrics. The impact of years of experience in Scrum on this perception was also explored. To this end, a quantitative study was conducted with 191 Scrum professionals in companies based in Portugal. The results show that the Scrum role is not a determining factor, while individuals with more years of experience have a higher perception of the importance of metrics related to team performance. The same conclusion is observed for the business value metric of the product backlog and the percentage of test automation in the testing phase. The findings allow for extending the knowledge about Scrum project management processes and their teams, in addition to offering important insights into the implementation of metrics for software engineering companies that adopt Scrum.},
	language = {en},
	number = {6},
	urldate = {2024-10-29},
	journal = {Information},
	author = {Almeida, Fernando and Carneiro, Pedro},
	month = jun,
	year = {2023},
	keywords = {Scrum, agile, information management, metrics, process measurement, project management, software engineering},
	pages = {327},
}

@inproceedings{salis_monitoring_2024,
	title = {Monitoring the {Scrum} {Team} {Using} {Internal} and {External} {Measure}},
	url = {https://ieeexplore.ieee.org/abstract/document/10497493/?casa_token=3lrM8KWxprkAAAAA:lEUy8N9ch8_97bMD83kU1yh3w0RhPTx7Y0CD_XkpWHA6fj28IOngeB8x_oSEZbmdi8uMFncxLA},
	doi = {10.1109/ICoSEIT60086.2024.10497493},
	abstract = {The importance of monitoring in the Scrum process is due to the challenges inherent in Scrum implementation, such as the limited time available. Consequently, there may be delays in delivery and deviations from user expectations. Therefore, this research aims to monitor the software development team by incorporating internal and external measurements, namely the velocity chart and customer satisfaction. Through Spearman correlation analysis, it is revealed that there is no significant relationship between internal and external measures. Therefore, even if the team performs well in their tasks, it does not necessarily guarantee customer satisfaction, and vice versa. Hence, it is essential to maintain ongoing internal and external monitoring and measurement to support the team in achieving timely project completion, the quality of the software produced is in line with customer needs and aligns with stakeholders‚Äô specified scope.},
	urldate = {2024-10-29},
	booktitle = {2024 2nd {International} {Conference} on {Software} {Engineering} and {Information} {Technology} ({ICoSEIT})},
	author = {Salis, Rafika and Kusumo, Dana Sulistyo},
	month = feb,
	year = {2024},
	keywords = {Correlation, Customer satisfaction, Software, Software measurement, Stakeholders, Task analysis, Velocity measurement, agile, customer satisfaction, external measure, internal measure, scrum, velocity},
	pages = {76--81},
}

@inproceedings{ammersdorfer_evaluation_2024,
	title = {Evaluation of {Reflective} {Behavior} in {Agile} {Product} {Development}: {A} {Theoretical} {Categorization} to {Evaluate} the {Effectiveness} of {Retrospectives} in {Engineering} {Teams}},
	isbn = {9781912254217},
	shorttitle = {Evaluation of {Reflective} {Behavior} in {Agile} {Product} {Development}},
	url = {https://www.designsociety.org/publication/47616/Evaluation+of+Reflective+Behavior+in+Agile+Product+Development%3A+A+Theoretical+Categorization+to+Evaluate+the+Effectiveness+of+Retrospectives+in+Engineering+Teams},
	doi = {10.35199/NORDDESIGN2024.24},
	abstract = {Reflection is an enabler for team learning and continuous adaption of used processes and methods. Although reflection is an integral part of agile development many engineers lack an understanding of reflective behavior and reflection competencies. In this paper, we perform a Case Study to analyze and measure the impact and outcome of structured reflection in engineering teams. The underlying question is whether the effectiveness of retrospectives can be derived from certain reflection behaviors and outcomes. Based on the findings we propose a theoretical categorization for reflection outcomes.},
	language = {en},
	urldate = {2024-10-29},
	booktitle = {{DS} 130: {Proceedings} of {NordDesign} 2024, {Reykjavik}, {Iceland}, 12th - 14th {August} 2024},
	author = {Ammersdorfer, Theresa and Tartler, Darien and Kauffeld, Simone and Inkermann, David},
	year = {2024},
	pages = {216--225},
}

@inproceedings{ramin_more_2020,
	address = {New York, NY, USA},
	series = {{ICSEW}'20},
	title = {More than {Code}: {Contributions} in {Scrum} {Software} {Engineering} {Teams}},
	isbn = {9781450379632},
	shorttitle = {More than {Code}},
	url = {https://dl.acm.org/doi/10.1145/3387940.3392241},
	doi = {10.1145/3387940.3392241},
	abstract = {Motivated and competent team members are a vital part of Agile Software development and make or break any project's success. Motivation is fostered by continuous progress and recognition of efforts. These concepts are founding pillars of the Scrum methodology, which focuses on self-organizing teams. The types of contributions Scrum development team members make to a project's progress are not only technical. However, a comprehensive model comprising the varied contributions in modern software engineering teams is not yet established. We propose a model that incorporates contributions of all Scrum roles, explicitly including those which are not directly related to project artifacts. It improves the visibility of performed tasks, acts as a starting point for team retrospection, and serves as a foundation for discussion in the research community.},
	urldate = {2024-10-28},
	booktitle = {Proceedings of the {IEEE}/{ACM} 42nd {International} {Conference} on {Software} {Engineering} {Workshops}},
	publisher = {Association for Computing Machinery},
	author = {Ramin, Frederike and Matthies, Christoph and Teusner, Ralf},
	month = sep,
	year = {2020},
	pages = {137--140},
}

@misc{fawzy_exploring_2024,
	title = {Exploring {Data} {Management} {Challenges} and {Solutions} in {Agile} {Software} {Development}: {A} {Literature} {Review} and {Practitioner} {Survey}},
	shorttitle = {Exploring {Data} {Management} {Challenges} and {Solutions} in {Agile} {Software} {Development}},
	url = {http://arxiv.org/abs/2402.00462},
	doi = {10.48550/arXiv.2402.00462},
	abstract = {Managing data related to a software product and its development poses significant challenges for software projects and agile development teams. Challenges include integrating data from diverse sources and ensuring data quality in light of continuous change and adaptation. To this end, we aimed to systematically explore data management challenges and potential solutions in agile projects. We employed a mixed-methods approach, utilizing a systematic literature review (SLR) to understand the state-of-research followed by a survey with practitioners to reflect on the state-of-practice. In the SLR, we reviewed 45 studies in which we identified and categorized data management aspects and the associated challenges and solutions. In the practitioner survey, we captured practical experiences and solutions from 32 industry experts to complement the findings from the SLR. Our findings reveal major data management challenges reported in both the SLR and practitioner survey, such as managing data integration processes, capturing diverse data, automating data collection, and meeting real-time analysis requirements. Based on our findings, we present implications for practitioners and researchers, which include the necessity of developing clear data management policies, training on data management tools, and adopting new data management strategies that enhance agility, improve product quality, and facilitate better project outcomes.},
	urldate = {2024-10-29},
	publisher = {arXiv},
	author = {Fawzy, Ahmed and Tahir, Amjed and Galster, Matthias and Liang, Peng},
	month = jul,
	year = {2024},
	note = {arXiv:2402.00462 [cs]},
	keywords = {Computer Science - Software Engineering},
}

@inproceedings{matthies_attitudes_2019,
	title = {Attitudes, {Beliefs}, and {Development} {Data} {Concerning} {Agile} {Software} {Development} {Practices}},
	url = {https://ieeexplore.ieee.org/abstract/document/8802117/},
	doi = {10.1109/ICSE-SEET.2019.00025},
	abstract = {The perceptions and attitudes of developers impact how software projects are run and which development practices are employed in development teams. Recent agile methodologies have taken this into account, focusing on collaboration and shared team culture. In this research, we investigate the perceptions of agile development practices and their usage in Scrum software development teams. Although perceptions collected through surveys of 42 participating students did not evolve significantly over time, our analyses show that the Scrum role significantly impacted participants' views of employed development practices. We find that using the version control system according to agile ideas was consistently rated most related to the values of the Agile Manifesto. Furthermore, we investigate how common software development artifacts can be used to gain insights into team behavior and present the development data measurements we employed. We show that we can reliably detect well-defined agile practices, such Test-Driven Development, in this data and that usage of these practices coincided with participants' self-assessments.},
	urldate = {2024-10-29},
	booktitle = {2019 {IEEE}/{ACM} 41st {International} {Conference} on {Software} {Engineering}: {Software} {Engineering} {Education} and {Training} ({ICSE}-{SEET})},
	author = {Matthies, Christoph and Huegle, Johannes and D√ºrschmid, Tobias and Teusner, Ralf},
	month = may,
	year = {2019},
	keywords = {Agile, Scrum, metrics, software engineering},
	pages = {158--169},
}

@inproceedings{matthies_towards_2019,
	title = {Towards {Using} {Data} to {Inform} {Decisions} in {Agile} {Software} {Development}: {Views} of {Available} {Data}},
	shorttitle = {Towards {Using} {Data} to {Inform} {Decisions} in {Agile} {Software} {Development}},
	url = {http://arxiv.org/abs/1907.12959},
	doi = {10.5220/0007967905520559},
	abstract = {Software development comprises complex tasks which are performed by humans. It involves problem solving, domain understanding and communication skills as well as knowledge of a broad variety of technologies, architectures, and solution approaches. As such, software development projects include many situations where crucial decisions must be made. Making the appropriate organizational or technical choices for a given software team building a product can make the difference between project success or failure. Software development methods have introduced frameworks and sets of best practices for certain contexts, providing practitioners with established guidelines for these important choices. Current Agile methods employed in modern software development have highlighted the importance of the human factors in software development. These methods rely on short feedback loops and the self-organization of teams to enable collaborative decision making. While Agile methods stress the importance of empirical process control, i.e. relying on data to make decisions, they do not prescribe in detail how this goal should be achieved. In this paper, we describe the types and abstraction levels of data and decisions within modern software development teams and identify the benefits that usage of this data enables. We argue that the principles of data-driven decision making are highly applicable, yet underused, in modern Agile software development.},
	urldate = {2024-10-29},
	booktitle = {Proceedings of the 14th {International} {Conference} on {Software} {Technologies}},
	author = {Matthies, Christoph and Hesse, Guenter},
	year = {2019},
	note = {arXiv:1907.12959 [cs]},
	keywords = {Computer Science - Software Engineering},
	pages = {552--559},
}

@article{hoda_rise_2018,
	title = {The {Rise} and {Evolution} of {Agile} {Software} {Development}},
	volume = {35},
	issn = {1937-4194},
	url = {https://ieeexplore.ieee.org/abstract/document/8409911},
	doi = {10.1109/MS.2018.290111318},
	abstract = {Agile software development has dominated the second half of the past 50 years of software engineering. Retrospectives, one of the most common agile practices, enables reflection on past performance, discussion of current progress, and charting forth directions for future improvement. Because of agile‚Äôs burgeoning popularity as the software development model of choice and a significant research subdomain of software engineering, it demands a retrospective of its own. This article provides a historical overview of agile‚Äôs main focus areas and a holistic synthesis of its trends, their evolution over the past two decades, agile‚Äôs current status, and, forecast from these, agile‚Äôs likely future. This article is part of a theme issue on software engineering‚Äôs 50th anniversary.},
	number = {5},
	urldate = {2024-10-29},
	journal = {IEEE Software},
	author = {Hoda, Rashina and Salleh, Norsaremah and Grundy, John},
	month = sep,
	year = {2018},
	keywords = {Agile software development, Market research, Planning, Software engineering, agile, agile software development, software development, software engineering},
	pages = {58--63},
}

@misc{abrahamsson_agile_2017,
	title = {Agile {Software} {Development} {Methods}: {Review} and {Analysis}},
	shorttitle = {Agile {Software} {Development} {Methods}},
	url = {http://arxiv.org/abs/1709.08439},
	doi = {10.48550/arXiv.1709.08439},
	abstract = {Agile - denoting "the quality of being agile, readiness for motion, nimbleness, activity, dexterity in motion" - software development methods are attempting to offer an answer to the eager business community asking for lighter weight along with faster and nimbler software development processes. This is especially the case with the rapidly growing and volatile Internet software industry as well as for the emerging mobile application environment. The new agile methods have evoked substantial amount of literature and debates. However, academic research on the subject is still scarce, as most of existing publications are written by practitioners or consultants. The aim of this publication is to begin filling this gap by systematically reviewing the existing literature on agile software development methodologies. This publication has three purposes. First, it proposes a definition and a classification of agile software development approaches. Second, it analyses ten software development methods that can be characterized as being "agile" against the defined criterion. Third, it compares these methods and highlights their similarities and differences. Based on this analysis, future research needs are identified and discussed.},
	urldate = {2024-10-29},
	publisher = {arXiv},
	author = {Abrahamsson, Pekka and Salo, Outi and Ronkainen, Jussi and Warsta, Juhani},
	month = sep,
	year = {2017},
	note = {arXiv:1709.08439 [cs]},
	keywords = {Computer Science - Software Engineering},
}

@article{hoda_systematic_2017,
	title = {Systematic literature reviews in agile software development: {A} tertiary study},
	volume = {85},
	issn = {0950-5849},
	shorttitle = {Systematic literature reviews in agile software development},
	url = {https://www.sciencedirect.com/science/article/pii/S0950584917300538},
	doi = {10.1016/j.infsof.2017.01.007},
	abstract = {Context
A number of systematic literature reviews and mapping studies (SLRs) covering numerous primary research studies on various aspects of agile software development (ASD) exist.
Objective
The aim of this paper is to provide an overview of the SLRs on ASD research topics for software engineering researchers and practitioners.
Method
We followed the tertiary study guidelines by Kitchenham et¬†al. to find SLRs published between late 1990s to December 2015.
Results
We found 28 SLRs focusing on ten different ASD research areas: adoption, methods, practices, human and social aspects, CMMI, usability, global software engineering (GSE), organizational agility, embedded systems, and software product line engineering. The number of SLRs on ASD topics, similar to those on software engineering (SE) topics in general, is on the rise. A majority of the SLRs applied standardized guidelines and the quality of these SLRs on ASD topics was found to be slightly higher for journal publications than for conferences. While some individuals and institutions seem to lead this area, the spread of authors and institutions is wide. With respect to prior review recommendations, significant progress was noticed in the area of connecting agile to established domains such as usability, CMMI, and GSE; and considerable progress was observed in focusing on management-oriented approaches as Scrum and sustaining ASD in different contexts such as embedded systems.
Conclusion
SLRs of ASD studies are on the rise and cover a variety of ASD aspects, ranging from early adoption issues to newer applications of ASD such as in product line engineering. ASD research can benefit from further primary and secondary studies on evaluating benefits and challenges of ASD methods, agile hybrids in large-scale setups, sustainability, motivation, teamwork, and project management; as well as a fresh review of empirical studies in ASD to cover the period post 2008.},
	urldate = {2024-10-29},
	journal = {Information and Software Technology},
	author = {Hoda, Rashina and Salleh, Norsaremah and Grundy, John and Tee, Hui Mien},
	month = may,
	year = {2017},
	keywords = {Agile software development, Mapping study, Systematic literature reviews, Tertiary study},
	pages = {60--70},
}

@inproceedings{abrahamsson_new_2003,
	title = {New directions on agile methods: a comparative analysis},
	shorttitle = {New directions on agile methods},
	url = {https://ieeexplore.ieee.org/abstract/document/1201204/authors#authors},
	doi = {10.1109/ICSE.2003.1201204},
	abstract = {Agile software development methods have caught the attention of software engineers and researchers worldwide. Scientific research is yet scarce. This paper reports results from a study, which aims to organize, analyze and make sense out of the dispersed field of agile software development methods. The comparative analysis is performed using the method's life-cycle coverage, project management support, type of practical guidance, fitness-for-use and empirical evidence as the analytical lenses. The results show that agile software development methods, without rationalization, cover certain/different phases of the software development life-cycle and most of them do not offer adequate support for project management. Yet, many methods still attempt to strive for universal solutions (as opposed to situation appropriate) and the empirical evidence is still very limited. Based on the results, new directions are suggested In principal, it is suggested to place emphasis on methodological quality - not method quantity.},
	urldate = {2024-10-29},
	booktitle = {25th {International} {Conference} on {Software} {Engineering}, 2003. {Proceedings}.},
	author = {Abrahamsson, P. and Warsta, J. and Siponen, M.T. and Ronkainen, J.},
	month = may,
	year = {2003},
	note = {ISSN: 0270-5257},
	keywords = {Application software, Computer industry, Feedback, Information analysis, Information processing, Internet, Lenses, Performance analysis, Programming, Project management},
	pages = {244--254},
}

@inproceedings{matthies_agile_2019,
	title = {Agile {Process} {Improvement} in {Retrospectives}},
	url = {https://ieeexplore.ieee.org/abstract/document/8802788},
	doi = {10.1109/ICSE-Companion.2019.00063},
	abstract = {Working in iterations and repeatedly improving team workflows based on collected feedback is fundamental to agile software development processes. Scrum, the most popular agile method, provides dedicated retrospective meetings to reflect on the last development iteration and to decide on process improvement actions. However, agile methods do not prescribe how these improvement actions should be identified, managed or tracked in detail. The approaches to detect and remove problems in software development processes are therefore often based on intuition and prior experiences and perceptions of team members. Previous research in this area has focused on approaches to elicit a team's improvement opportunities as well as measurements regarding the work performed in an iteration, e.g. Scrum burn-down charts. Little research deals with the quality and nature of identified problems or how progress towards removing issues is measured. In this research, we investigate how agile development teams in the professional software industry organize their feedback and process improvement approaches. In particular, we focus on the structure and content of improvement and reflection meetings, i.e. retrospectives, and their outcomes. Researching how the vital mechanism of process improvement is implemented in practice in modern software development leads to a more complete picture of agile process improvement.},
	urldate = {2024-10-29},
	booktitle = {2019 {IEEE}/{ACM} 41st {International} {Conference} on {Software} {Engineering}: {Companion} {Proceedings} ({ICSE}-{Companion})},
	author = {Matthies, Christoph},
	month = may,
	year = {2019},
	note = {ISSN: 2574-1934},
	keywords = {Agile, Companies, Industries, Interviews, Scrum, Scrum (Software development), Software, Task analysis, retrospective, software process improvement},
	pages = {150--152},
}

@book{loeffler_improving_2017,
	title = {Improving {Agile} {Retrospectives}: {Helping} {Teams} {Become} {More} {Efficient}},
	isbn = {9780134678351},
	shorttitle = {Improving {Agile} {Retrospectives}},
	abstract = {Agile retrospectives help you get to the root of your real problems, so you can solve them quickly and effectively. They‚Äôre the cornerstone of a successful continuous improvement process, and one of your best tools for triggering positive cultural change.  In  Improving Agile Retrospectives, leading agile coach/trainer Marc Loeffler combines practical guidance, proven practices, and innovative approaches for maximizing the value of retrospectives for your team‚Äîand your entire organization. You can apply his powerful techniques in any project, agile or otherwise. These techniques offer exceptional value wherever continuous improvement is needed: from ‚Äúlessons-learned‚Äù workshops in traditional project management to enterprise-wide change management.  Loeffler‚Äôs detailed, results-focused examples help you recognize and overcome common pitfalls, adapt retrospectives to your unique needs, and consistently achieve tangible results. Throughout, he integrates breakthrough concepts, such as using experimentation and learning from system thinking. He presents small ideas that make a big difference‚Äîbecause they‚Äôre deeply grounded in real experience.  ‚Ä¢ Learn from failures and successes, and make good things even better ‚Ä¢ Master facilitation techniques that help you achieve your goals (and have fun doing it) ‚Ä¢ Prepare your retrospective so it runs smoothly ‚Ä¢ Practice techniques for generating actionable insights ‚Ä¢ Keep your retrospectives fresh and interesting ‚Ä¢ Perform retrospectives that address the entire system, not just your team ‚Ä¢ Focus on your ‚Äúbetter future‚Äù with solution-focused retrospectives ‚Ä¢ Learn how to avoid typical pitfalls when facilitating retrospectives ‚Ä¢ Lead retrospectives across multiple distributed teams ‚Ä¢ Use retrospectives to support large-scale change},
	language = {en},
	publisher = {Addison-Wesley Professional},
	author = {Loeffler, Marc},
	month = dec,
	year = {2017},
	note = {Google-Books-ID: 8TZCDwAAQBAJ},
	keywords = {Business \& Economics / Project Management, Computers / Software Development \& Engineering / General},
}

@article{lehtinen_recurring_2017,
	title = {Recurring opinions or productive improvements‚Äîwhat agile teams actually discuss in retrospectives},
	volume = {22},
	issn = {1573-7616},
	url = {https://doi.org/10.1007/s10664-016-9464-2},
	doi = {10.1007/s10664-016-9464-2},
	abstract = {Team-level retrospectives are widely used in agile and lean software development, yet little is known about what is actually discussed during retrospectives or their outcomes. In this paper, we synthesise the outcomes of sprint retrospectives in a large, distributed, agile software development organisation. This longitudinal case study analyses data from 37 team-level retrospectives for almost 3¬†years. We report the outcomes of the retrospectives, their perceived importance for process improvement and relatVed action proposals. Most discussions were related to topics close to and controllable by the team. However, the discussions might suffer from participant bias, and in cases where they are not supported by hard evidence, they might not reflect reality, but rather the sometimes strong opinions of the participants. Some discussions were related to topics that could not be resolved at the team level due to their complexity. Certain topics recurred over a long period of time, either reflecting issues that can and have been solved previously, but that recur naturally as development proceeds, or reflecting waste since they cannot be resolved or improved on by the team due to a lack of controllability or their complexity. For example, the discussion on estimation accuracy did not reflect the true situation and improving the estimates was complicated. On the other hand, discussions on the high number of known bugs recurred despite effective improvements as development proceeded.},
	language = {en},
	number = {5},
	urldate = {2024-10-29},
	journal = {Empirical Software Engineering},
	author = {Lehtinen, Timo O. A. and Itkonen, Juha and Lassenius, Casper},
	month = oct,
	year = {2017},
	keywords = {Agile, Continuous improvement, Longitudinal case study, Retrospective, Scrum, Software engineering},
	pages = {2409--2452},
}

@phdthesis{sigurjonsdottir_retrospective_2016,
	type = {Thesis},
	title = {Retrospective and {Feelings} {Meetings} in {Agile} {Software} {Development}},
	url = {https://skemman.is/handle/1946/25964},
	abstract = {Agile software development is getting established in the Icelandic software industry and the number of companies using Agile processes in their work is increasing. One approach in Agile isthe retrospective meetings, where the whole team attends and inspects how the iteration has been going and decide what can be done to improve their future processes.Retrospectives have always been a part of Agile processes, but they have not been considered to be the most important part of the processes. Still there are indications that the meetings are highly important and even the reason for success in many projects. On retrospective meetings the team members emphasize on the process and discuss how the iteration went and what procedures can be improved, what should be eliminated and what should be kept.Feelings meetings are not an established Agile method but are originated from parts of Agile that have evolved into feelings meetings at the company the research study took place, Plain Vanilla.The feelings meetings are short meetings where the teams meet to discuss how they have felt in the last iteration, and give the members the opportunity to express their feelings to their teammates and also get the chance to hear how their teammates are doing.This paper presents results from a research study based on observations and 11 interviews, eight structured interviews, as well as three semi-structured interviews. The main focus of the study is to give an understanding on the procedure and the practitioners‚Äô perspectives of the retrospective meetings and the feelings meetings in the Agile working environment. The observation, and all but one interview, were conducted in cooperation with employees at Plain Vanilla. One independent software consultant, an expert in Agile processes, was also interviewed, to gain insights from an outsider.The results show the importance of retrospective meetings and the huge effect they can have on teamwork and team productivity. They also show how the meetings seem to be an highly important part of the software development process as they result in better overview and improvement ofprocesses.The feelings meetings are not as established as the retrospective meetings and the outcomes from those meetings are not as decisive. But overall these meetings result in tighter teams and better understanding between teammates. The results also show how important the role of theAgile coach is and how they are often the driving force the teams need to have successful meetings.},
	language = {en},
	urldate = {2024-10-29},
	author = {Sigurj√≥nsd√≥ttir, √Åsr√∫n and √ûrastard√≥ttir, Perla},
	month = jun,
	year = {2016},
}

@book{goncalves_getting_2015,
	title = {Getting {Value} out of {Agile} {Retrospectives}: {A} {Toolbox} of {Retrospective} {Exercises}},
	isbn = {9789492119070},
	shorttitle = {Getting {Value} out of {Agile} {Retrospectives}},
	abstract = {Getting Value out of Agile Retrospectives helps you and your teams to do retrospectives effectively and efficiently. It\&\#39;s a toolbox with many exercises for facilitating retrospectives, supported with the \&quot;what\&quot; and \&quot;why\&quot; of retrospectives, the business value and benefits that they bring, and advice for introducing and improving retrospectives. If you are a Scrum master, agile coach, project manager, product manager or facilitator then this book helps you to discover and apply new ways to do Valuable Agile Retrospectives with your teams. With plenty of exercises you can develop your own personal Retrospectives Toolbox to become more proficient in doing retrospectives and get more out of them.},
	language = {en},
	publisher = {Ben Linders Publishing},
	author = {Gon√ßalves, Luis and Linders, Ben},
	month = jan,
	year = {2015},
	note = {Google-Books-ID: ZnDHDwAAQBAJ},
	keywords = {Computers / Software Development \& Engineering / General},
}

@inproceedings{hayes_impact_2011,
	title = {The impact of project retrospectives on process improvement initiatives: {A} case study},
	shorttitle = {The impact of project retrospectives on process improvement initiatives},
	url = {https://ieeexplore.ieee.org/abstract/document/5784234?casa_token=DmBCWkkw0nAAAAAA:nbIldNwgxhtU6Dxfy95mfyXQ7fQXhxLfkV9dIX7aA_-5IpisvPJZGg5Z_TNUF5nPDmPHrCxT2A},
	doi = {10.1109/LISAT.2011.5784234},
	abstract = {The impact of project retrospectives on process improvement initiatives has been questioned for many years. It is an important question because project retrospectives can be demanding in terms of time and organizational resources. Therefore, measuring whether retrospectives are an efficient methodology for instigating continuous process improvements is extremely important. Many have been committed to the notion that retrospectives are essential to continuous process improvement in organizations but unfortunately could not prove their efficacy in a scientific manner. This paper details how one company has used project retrospectives to change its organizational practices and improve processes related to software development. The case company's business process improvement department conducted project retrospectives, with software development teams and other project-related staff, for more than five years. These development teams subsequently created action plans, which were independently monitored. Action plans were comprised of precise and measurable action items, which were assigned to sub-teams and sponsored by management. Management support and sponsorship for process improvement was critical to continuity of the retrospective process as well as to provide for the availability of resources to implement improvements. Moreover, management was imperative in ensuring accountability for the completion of process improvement initiatives. The company's business process improvement department conducted the project retrospectives, helped teams to craft action plans and aided in the assignment of actions items. This department comprehensively documented the implementation of many of these action items and their impact on process improvement initiatives and ultimately provided much of the conclusive evidence for this research. This research paper uses case study analysis, supported by unstructured interviews, to identify how one company developed process improvement initiatives and ultimately tracked their assignment and successful implementation. This is possibly the first case study analysis to scientifically prove that project retrospectives do have a measurable impact on process improvement initiatives. The study also illustrates the importance of the retrospective facilitator in facilitating organizational process improvement.},
	urldate = {2024-10-29},
	booktitle = {2011 {IEEE} {Long} {Island} {Systems}, {Applications} and {Technology} {Conference}},
	author = {Hayes, Darren R. and Grossman, Fred and Knapp, Constance and Rising, Linda},
	month = may,
	year = {2011},
	keywords = {Companies, Interviews, Planning, Programming, Testing, post mortem, process improvement, retrospective, software development},
	pages = {1--7},
}

@inproceedings{yalciner_data-driven_2024,
	address = {Cham},
	title = {Data-{Driven} {Software} {Engineering}: {A} {Systematic} {Literature} {Review}},
	isbn = {9783031711398},
	shorttitle = {Data-{Driven} {Software} {Engineering}},
	doi = {10.1007/978-3-031-71139-8_2},
	abstract = {Over the past few years, emerging technologies have had a significant impact on the processes of software engineering (SE). Consequently, there has been a shift from a more experience-based approach to a data-driven decision-making approach. This shift to data-driven decision-making has resulted in more reliable and accurate decision-making, ultimately leading to more efficient and effective SE processes and a reduction in rework. Our study involved a comprehensive systematic literature review (SLR) examining the utilization of data-driven approaches in SE processes over the last decade. Our analysis of 34 primary studies revealed that data-driven approaches are most commonly utilized. After analyzing the primary studies, we found that data-driven methods are commonly employed in SE processes for software management and software testing. Researchers are delving into subfields of artificial intelligence, including machine learning and deep learning, to devise decision-making models for SE processes that have undergone extensive validation. We aim to provide valuable insights into the usage of data-driven approaches in SE by conducting a systematic mapping based on the studies that we have found.},
	language = {en},
	booktitle = {Systems, {Software} and {Services} {Process} {Improvement}},
	publisher = {Springer Nature Switzerland},
	author = {Yalçıner, Aybüke and Dikici, Ahmet and Gökalp, Ebru},
	editor = {Yilmaz, Murat and Clarke, Paul and Riel, Andreas and Messnarz, Richard and Greiner, Christian and Peisl, Thomas},
	year = {2024},
	pages = {19--32},
}

@misc{ram_data-driven_2022,
	type = {v√§it√∂skirja},
	title = {Data-driven process improvement in agile software development : an industrial multiple-case study},
	copyright = {https://rightsstatements.org/vocab/InC/1.0/},
	shorttitle = {Data-driven process improvement in agile software development},
	url = {https://oulurepo.oulu.fi/handle/10024/36880},
	abstract = {{\textless}div lang="en" class="abs"{\textgreater}{\textless}p class="abs\_header"{\textgreater}Abstract{\textless}/p{\textgreater}{\textless}p{\textgreater}Practitioners have been trying to capitalise on the software development data produced as a result of the use of modern development approaches like Agile Software Development (ASD). {\textless}em{\textgreater}Structured{\textless}/em{\textgreater} software development data have been utilised in software metrics programme for undertaking process improvement, but what metrics practitioners prefer and why need further clarity, especially in large industrial contexts. Success factors for a metrics programme in ASD are also not as well understood as they are in traditional software development. Lastly, there is little knowledge on how practitioners can capitalise on their {\textless}em{\textgreater}unstructured{\textless}/em{\textgreater} data, which are generated in larger volume than {\textless}em{\textgreater}structured{\textless}/em{\textgreater} data.{\textless}/p{\textgreater}{\textless}p{\textgreater}In the context of the European Union Horizon 2020 project Q-Rapids, a multiple-case study was conducted with four software-intensive Agile companies to address the above research gaps in two phases. In the first phase, knowledge about the state of the practice and the practitioners‚Äô perspective influencing the definition, operationalisation, and use of metrics programme was gathered. In the second phase, empirical evidence for how practitioners utilised their {\textless}em{\textgreater}structured{\textless}/em{\textgreater} data in a metrics programme for process improvement was elicited. Lastly, empirical evidence was sought on how practitioners can capitalise on their {\textless}em{\textgreater}unstructured{\textless}/em{\textgreater} data.{\textless}/p{\textgreater}{\textless}p{\textgreater}To utilise their data to increase awareness and exercise control, practitioners prefer metrics for measuring planning, implementation, and testing processes. Contextual factors like company size and project characteristics determine if metrics will be a trigger or the main driver for process improvement. The {\textless}em{\textgreater}prerequisites{\textless}/em{\textgreater} that facilitate such use of metrics programmes concern data, process, and metrics actionability. For {\textless}em{\textgreater}unstructured{\textless}/em{\textgreater} data, text-mining techniques such as Latent Dirichlet Allocation can help derive development-related insights. These results highlight the utility of two distinct approaches that practitioners can use to capitalise on their software development data, even in large industrial contexts.{\textless}/p{\textgreater}{\textless}/div{\textgreater}},
	language = {eng},
	urldate = {2024-10-29},
	journal = {jultika.oulu.fi},
	author = {Ram, Prabhat},
	month = oct,
	year = {2022},
}

@article{biesialska_big_2021,
	title = {Big {Data} analytics in {Agile} software development: {A} systematic mapping study},
	volume = {132},
	issn = {0950-5849},
	shorttitle = {Big {Data} analytics in {Agile} software development},
	url = {https://www.sciencedirect.com/science/article/pii/S0950584920301981},
	doi = {10.1016/j.infsof.2020.106448},
	abstract = {Context:
Over the last decade, Agile methods have changed the software development process in an unparalleled way and with the increasing popularity of Big Data, optimizing development cycles through data analytics is becoming a commodity.
Objective:
Although a myriad of research exists on software analytics as well as on Agile software development (ASD) practice on itself, there exists no systematic overview of the research done on ASD from a data analytics perspective. Therefore, the objective of this work is to make progress by linking ASD with Big Data analytics (BDA).
Method:
As the primary method to find relevant literature on the topic, we performed manual search and snowballing on papers published between 2011 and 2019.
Results:
In total, 88 primary studies were selected and analyzed. Our results show that BDA is employed throughout the whole ASD lifecycle. The results reveal that data-driven software development is focused on the following areas: code repository analytics, defects/bug fixing, testing, project management analytics, and application usage analytics.
Conclusions:
As BDA and ASD are fast-developing areas, improving the productivity of software development teams is one of the most important objectives BDA is facing in the industry. This study provides scholars with information about the state of software analytics research and the current trends as well as applications in the business environment. Whereas, thanks to this literature review, practitioners should be able to understand better how to obtain actionable insights from their software artifacts and on which aspects of data analytics to focus when investing in such initiatives.},
	urldate = {2024-10-29},
	journal = {Information and Software Technology},
	author = {Biesialska, Katarzyna and Franch, Xavier and Muntés-Mulero, Victor},
	month = apr,
	year = {2021},
	keywords = {Agile software development, Artificial intelligence, Data analytics, Literature review, Machine learning, Software analytics},
	pages = {106448},
}

@inproceedings{svensson_unfulfilled_2019,
	address = {Cham},
	title = {The {Unfulfilled} {Potential} of {Data}-{Driven} {Decision} {Making} in {Agile} {Software} {Development}},
	isbn = {9783030190347},
	doi = {10.1007/978-3-030-19034-7_5},
	abstract = {With the general trend towards data-driven decision making (DDDM), organizations are looking for ways to use DDDM to improve their decisions. However, few studies have looked into the practitioners view of DDDM, in particular for agile organizations. In this paper we investigated the experiences of using DDDM, and how data can improve decision making. An emailed questionnaire was sent out to 124 industry practitioners in agile software developing companies, of which 84 answered. The results show that few practitioners indicated a wide-spread use of DDDM in their current decision making practices. The practitioners were more positive to its future use for higher-level and more general decision making, fairly positive to its use for requirements elicitation and prioritization decisions, while being less positive to its future use at the team level. The practitioners do see a lot of potential for DDDM in an agile context; however, currently unfulfilled.},
	language = {en},
	booktitle = {Agile {Processes} in {Software} {Engineering} and {Extreme} {Programming}},
	publisher = {Springer International Publishing},
	author = {Svensson, Richard Berntsson and Feldt, Robert and Torkar, Richard},
	editor = {Kruchten, Philippe and Fraser, Steven and Coallier, Fran√ßois},
	year = {2019},
	keywords = {Agile, Data-Driven Decision Making, Survey},
	pages = {69--85},
}

@book{vacanti_actionable_2015,
	title = {Actionable {Agile} {Metrics} for {Predictability}: {An} {Introduction}},
	url = {https://educacionpublica.gob.cl/wp-content/uploads/2020/03/actionableagilemetrics.pdf},
	publisher = {Actionable Agile Press, LeanPub},
	author = {Vacanti, Daniel S.},
	year = {2015},
}

@inproceedings{matthies_feedback_2019,
	title = {Feedback in {Scrum}: {Data}-{Informed} {Retrospectives}},
	shorttitle = {Feedback in {Scrum}},
	url = {https://ieeexplore.ieee.org/abstract/document/8802669},
	doi = {10.1109/ICSE-Companion.2019.00081},
	abstract = {Improving the way that teams work together by reflecting and improving the executed process is at the heart of agile processes. The idea of iterative process improvement takes various forms in different agile development methodologies, e.g. Scrum Retrospectives. However, these methods do not prescribe how improvement steps should be conducted in detail. In this research we investigate how agile software teams can use their development data, such as commits or tickets, created during regular development activities, to drive and track process improvement steps. Our previous research focused on data-informed process improvement in the context of student teams, where controlled circumstances and deep domain knowledge allowed creation and usage of specific process measures. Encouraged by positive results in this area, we investigate the process improvement approaches employed in industry teams. Researching how the vital mechanism of process improvement is implemented and how development data is already being used in practice in modern software development leads to a more complete picture of agile process improvement. It is the first step in enabling a data-informed feedback and improvement process, tailored to a team's context and based on the development data of individual teams.},
	urldate = {2024-10-29},
	booktitle = {2019 {IEEE}/{ACM} 41st {International} {Conference} on {Software} {Engineering}: {Companion} {Proceedings} ({ICSE}-{Companion})},
	author = {Matthies, Christoph},
	month = may,
	year = {2019},
	note = {ISSN: 2574-1934},
	keywords = {Companies, Industries, Interviews, Process control, Scrum, Scrum (Software development), Software, Tools, agile, retrospective, software development, software process improvement},
	pages = {198--201},
}

@misc{noauthor_manifesto_nodate,
	title = {Manifesto for {Agile} {Software} {Development}},
	url = {https://agilemanifesto.org/},
	abstract = {We are uncovering better ways of developing software
by doing it and helping others do it. These are our
values and principles.},
	urldate = {2024-10-25},
}

@article{highsmith_agile_2001,
	title = {Agile software development: the business of innovation},
	volume = {34},
	issn = {1558-0814},
	shorttitle = {Agile software development},
	url = {https://ieeexplore.ieee.org/document/947100},
	doi = {10.1109/2.947100},
	abstract = {The rise and fall of the dotcom-driven Internet economy shouldn't distract us from seeing that the business environment continues to change at a dramatically increasing pace. To thrive in this turbulent environment, we must confront the business need for relentless innovation and forge the future workforce culture. Agile software development approaches, such as extreme programming, Crystal methods, lean development, Scrum, adaptive software development (ASD) and others, view change from a perspective that mirrors today's turbulent business and technology environment.},
	number = {9},
	urldate = {2024-10-25},
	journal = {Computer},
	author = {Highsmith, J. and Cockburn, A.},
	month = sep,
	year = {2001},
	keywords = {Adaptive systems, Collaborative software, Collaborative work, Contracts, Documentation, Humans, Programming, Software development management, Technological innovation, Variable speed drives},
	pages = {120--127},
}

@article{marshburn_scrum_2018,
	title = {{SCRUM} {RETROSPECTIVES}: {MEASURING} {AND} {IMPROVING} {EFFECTIVENESS}},
	shorttitle = {{SCRUM} {RETROSPECTIVES}},
	url = {https://aisel.aisnet.org/sais2018/26},
	journal = {SAIS 2018 Proceedings},
	author = {Marshburn, David},
	month = mar,
	year = {2018},
}

@misc{scrum,
	title = {Home {\textbar} {Scrum} {Guides}},
	url = {https://scrumguides.org/},
	urldate = {2024-10-07},
}

@misc{scrum_alliance,
	title = {The {State} of {Scrum} {Report}},
	howpublished ={\url{https://www.scrumalliance.org/ScrumRedesignDEVSite/media/ScrumAllianceMedia/Files%20and%20PDFs/State%20of%20Scrum/2017-SoSR-Final-Version-(Pages).pdf}},
	urldate = {2024-10-07},
}

@misc{miro,
	title = {Miro},
	url = {https://miro.com/},
	urldate = {2024-10-07},
}

@misc{jira,
	title = {Jira},
	url = {https://www.atlassian.com/software/jira},
	urldate = {2024-10-07},
}


@misc{stormboard_how_nodate,
	title = {How {To} {Use} {Data}-{Driven} {Retrospectives} {For} {Your} {Business}{\textless}br/{\textgreater}},
	url = {https://stormboard.com/blog/how-to-use-data-driven-retrospectives},
	abstract = {In the data-driven era, retrospectives have become an indispensable tool for modern businesses. They foster collaboration and continuous improvement and ultimately lead to better business outcomes. Don't miss the opportunity to harness the power of data-driven retrospectives for your organization.},
	language = {en-CA},
	urldate = {2024-10-07},
	journal = {Stormboard},
	author = {stormboard},
}

@misc{retromat,
	title = {Retromat {Miroboard} {Mega} {Template} {Retrospectives}},
	url = {https://retromat.org/blog/retromat-miroboard-mega-template/},
	language = {en-US},
	urldate = {2024-10-07},
}

@misc{retrium_using_nodate,
	title = {Using {Data} {Effectively} in {Your} {Retrospectives}},
	url = {https://www.retrium.com/ultimate-guide-to-agile-retrospectives/using-data-effectively-in-your-retrospectives},
	abstract = {Using both hard and soft data can help agile teams run effective retrospectives and build attainable action plans.},
	language = {en},
	urldate = {2024-10-07},
	author = {Retrium},
}

@misc{koponen_reduce_nodate,
	title = {Reduce bias in retrospectives with better data},
	url = {https://www.swarmia.com/blog/data-driven-retrospectives-stop-fake-improvements/},
	abstract = {Retrospectives using only subjective data easily lead to skewed insights and actions. One solution is to add a "present hard data" step to your retrospectives.},
	language = {en},
	urldate = {2024-10-07},
	author = {Koponen, Ari-Pekka},
}

@misc{lucena_data-driven_2020,
	title = {A data-driven retrospective},
	url = {https://sergioviniciuss.medium.com/a-data-driven-retrospective-d95d52f1f19c},
	abstract = {Recently I was looking for a way to help my team to reflect about how we are performing and how we could do things better.},
	language = {en},
	urldate = {2024-10-07},
	journal = {Medium},
	author = {Lucena, S√©rgio Vin√≠cius de S√°},
	month = sep,
	year = {2020},
}

@misc{manager_21_2021,
	title = {21 {Sprint} {Retrospective} {Ideas} {To} {Get} {Quiet} {Project} {Teams} {Talking}},
	url = {https://thedigitalprojectmanager.com/projects/leadership-team-management/get-quiet-teams-talking-agile-retrospectives/},
	abstract = {Struggling to engage a quiet team? Steal these 21 tips to get teams talking and start running better, more productive sprint retrospective meetings.},
	language = {en-US},
	urldate = {2024-10-07},
	journal = {The Digital Project Manager},
	author = {Galen Low},
	month = aug,
	year = {2021},
}

@misc{dash_retrospectives_2019,
	title = {Retrospectives and {Intraspectives} for {Agile} {Practitioners}},
	url = {https://mpug.com/retrospectives-and-intraspectives-for-agile-practitioners/},
	abstract = {Two woodcutters were assigned to chop wood in a forest. Both formed a team and started early and earnestly. Although working a distance from each other,},
	language = {en-US},
	urldate = {2024-10-07},
	journal = {MPUG},
	author = {Dash, Satya Narayan},
	month = oct,
	year = {2019},
}

@inproceedings{guzzi_supporting_2015,
	address = {Vancouver BC Canada},
	title = {Supporting {Developers}' {Coordination} in the {IDE}},
	isbn = {9781450329224},
	url = {https://dl.acm.org/doi/10.1145/2675133.2675177},
	doi = {10.1145/2675133.2675177},
	language = {en},
	urldate = {2024-10-07},
	booktitle = {Proceedings of the 18th {ACM} {Conference} on {Computer} {Supported} {Cooperative} {Work} \& {Social} {Computing}},
	publisher = {ACM},
	author = {Guzzi, Anja and Bacchelli, Alberto and Riche, Yann and Van Deursen, Arie},
	month = feb,
	year = {2015},
	pages = {518--532},
}

@book{derby_agile_2006,
	address = {Raleigh, NC},
	title = {Agile retrospectives: making good teams great},
	isbn = {9780977616640},
	shorttitle = {Agile retrospectives},
	publisher = {Pragmatic Bookshelf},
	author = {Derby, Esther and Larsen, Diana},
	year = {2006},
	note = {OCLC: ocm71756468},
	keywords = {Computer software, Development, Project management, Teams in the workplace},
}

@article{drury_obstacles_2012,
	series = {Special {Issue}: {Agile} {Development}},
	title = {Obstacles to decision making in {Agile} software development teams},
	volume = {85},
	issn = {0164-1212},
	url = {https://www.sciencedirect.com/science/article/pii/S0164121212000374},
	doi = {10.1016/j.jss.2012.01.058},
	abstract = {The obstacles facing decision making in Agile development are critical yet poorly understood. This research examines decisions made across four stages of the iteration cycle: Iteration Planning, Iteration Execution, Iteration Review and Iteration Retrospective. A mixed method approach was employed, whereby a focus group was initially conducted with 43 Agile developers and managers to determine decisions made at different points of the iteration cycle. Subsequently, six illustrative mini cases were purposefully conducted as examples of the six obstacles identified in these focus groups. This included interviews with 18 individuals in Agile projects from five different organizations: a global consulting organization, a multinational communications company, two multinational software development companies, and a large museum organization. This research contributes to Agile software development literature by analyzing decisions made during the iteration cycle and identifying six key obstacles to these decisions. Results indicate the six decision obstacles are unwillingness to commit to decisions; conflicting priorities; unstable resource availability; and lack of: implementation; ownership; empowerment. These six decision obstacles are mapped to descriptive decision making principles to demonstrate where the obstacles affect the decision process. The effects of these obstacles include a lack of longer-term, strategic focus for decisions, an ever-growing backlog of delayed work from previous iterations, and a lack of team engagement.},
	number = {6},
	urldate = {2024-10-07},
	journal = {Journal of Systems and Software},
	author = {Drury, Meghann and Conboy, Kieran and Power, Ken},
	month = jun,
	year = {2012},
	keywords = {Agile decision making, Agile project management, Agile software development, Case study, Decision making, Decision obstacles, Focus group, Iteration Planning, Iteration Review, Iteration decisions, Retrospective, Scrum, Software engineering, Team decisions},
	pages = {1239--1254},
}

@inproceedings{patzak_realizing_2018,
	title = {Realizing the potential of retrospectives with team reflexivity : an intervention study to improve reflection and planning in evaluation meetings of {Scrum} teams},
	shorttitle = {Realizing the potential of retrospectives with team reflexivity},
	url = {https://www.semanticscholar.org/paper/Realizing-the-potential-of-retrospectives-with-team-Patzak/f126022e3d47cb000c40faf57da1d683e929d068},
	abstract = {In the complex work environment of software development (SD) teams, the quality of teamwork is vital for their effectivity. The Scrum method copes with this by engaging collaborative teamwork methods and developing software in short iterations. In Scrum, the development process is regularly evaluated during a 'retrospective' meeting during which action points (AP's) are set. However, although Scrum teams often report problems, they cannot effectively respond to these issues. The goal of this study is to support Scrum teams from a Dutch SD firm with an intervention. The research question was: How can we design an intervention that supports Scrum teams to enhance team reflexivity during their retrospectives? A quasi-experimental control group design was designed, three SD Scrum teams participated and fifteen video observations of retrospectives were made. The intervention was a one-hour training to teach the teams how to make SMART AP‚Äôs. The videos were coded with a coding scheme. This study has found that there is room for improvement in the continuous improvement through retrospectives, as a lot of examples of low quality team reflexivity were identified. Also, the intervention was not enough to solve the team‚Äôs issues as there were only small, brief changes.},
	urldate = {2024-10-07},
	author = {Patzak, C.},
	year = {2018},
}

@inproceedings{andriyani_reflection_2017,
	address = {Cham},
	title = {Reflection in {Agile} {Retrospectives}},
	isbn = {9783319576336},
	doi = {10.1007/978-3-319-57633-6_1},
	abstract = {A retrospective is a standard agile meeting practice designed for agile software teams to reflect and tune their process. Despite its integral importance, we know little about what aspects are focused upon during retrospectives and how reflection occurs in this practice. We conducted Case Study research involving data collected from interviews of sixteen software practitioners from four agile teams and observations of their retrospective meetings. We found that the important aspects focused on during the retrospective meeting include identifying and discussing obstacles, discussing feelings, analyzing previous action points, identifying background reasons, identifying future action points and generating a plan. Reflection occurs when the agile teams embody these aspects within three levels of reflection: reporting and responding, relating and reasoning, and reconstructing. Critically, we show that agile teams may not achieve all levels of reflection simply by performing retrospective meetings. One of the key contributions of our work is to present a reflection framework for agile retrospective meetings that explains and embeds three levels of reflection within the five steps of a standard agile retrospective. Agile teams can use this framework to achieve better focus and higher levels of reflection in their retrospective meetings.},
	language = {en},
	booktitle = {Agile {Processes} in {Software} {Engineering} and {Extreme} {Programming}},
	publisher = {Springer International Publishing},
	author = {Andriyani, Yanti and Hoda, Rashina and Amor, Robert},
	editor = {Baumeister, Hubert and Lichter, Horst and Riebisch, Matthias},
	year = {2017},
	keywords = {Agile retrospective meeting, Agile software development, Levels of reflection, Reflection, Reflective practice, Teams},
	pages = {3--19},
}

@article{terzakis_virtual_2011,
	title = {Virtual {Retrospectives} for {Geographically} {Dispersed} {Software} {Teams}},
	volume = {28},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	issn = {0740-7459},
	url = {http://ieeexplore.ieee.org/document/5756291/},
	doi = {10.1109/MS.2011.68},
	number = {3},
	urldate = {2024-10-07},
	journal = {IEEE Software},
	author = {Terzakis, John},
	month = may,
	year = {2011},
	pages = {12--15},
}

@inproceedings{bein_student_2023,
	address = {New York, NY, USA},
	series = {{SAC} '23},
	title = {Student {Research} {Abstract}: {Why} and {Where} {Software} {Developers} are (not) using {Project} {Data} in {Agile} {Retrospectives}},
	isbn = {9781450395175},
	shorttitle = {Student {Research} {Abstract}},
	url = {https://dl.acm.org/doi/10.1145/3555776.3577205},
	doi = {10.1145/3555776.3577205},
	abstract = {Software project data holds knowledge of the development process enacted in teams. However, it is rarely used for process improvement approaches as part of agile retrospective meetings. We argue that this integration shows promise: Project data is evidence of what occurred in the last development iteration(s). It complements the perceptions of individuals that are usually exclusively relied upon in retrospectives. In this paper, we present the results of semi-structured interviews with agile practitioners, which revealed missing knowledge of the capabilities, implementation, and application of project data analyses as a key reason for the lack of usage. Looking forward, we provide an initial look at a structured approach to the usage of software project data in agile retrospectives.},
	urldate = {2024-10-07},
	booktitle = {Proceedings of the 38th {ACM}/{SIGAPP} {Symposium} on {Applied} {Computing}},
	publisher = {Association for Computing Machinery},
	author = {Bein, Leon},
	month = jun,
	year = {2023},
	pages = {1060--1063},
}

@inproceedings{matthies_playing_2020,
	address = {New York, NY, USA},
	series = {{ICSE} '20},
	title = {Playing with your project data in scrum retrospectives},
	isbn = {9781450371223},
	url = {https://dl.acm.org/doi/10.1145/3377812.3382164},
	doi = {10.1145/3377812.3382164},
	abstract = {Modern, agile software development methods rely on iterative work and improvement cycles to deliver their claimed benefits. In Scrum, the most popular agile method, process improvement is implemented through regular Retrospective meetings. In these meetings, team members reflect on the latest development iteration and decide on improvement actions. To identify potential issues, data on the completed iteration needs to be gathered. The Scrum method itself does not prescribe these steps in detail. However, Retrospective games, i.e. interactive group activities, have been proposed to encourage the sharing of experiences and problems. These activities mostly rely on the collected perceptions of team members. However, modern software development practices produce a large variety of digital project artifacts, e.g. commits in version control systems or test run results, which contain detailed information on performed teamwork. We propose taking advantage of this information in new, data-driven Retrospective activities, allowing teams to gain additional insights based on their own team-specific data.},
	urldate = {2024-10-07},
	booktitle = {Proceedings of the {ACM}/{IEEE} 42nd {International} {Conference} on {Software} {Engineering}: {Companion} {Proceedings}},
	publisher = {Association for Computing Machinery},
	author = {Matthies, Christoph},
	month = oct,
	year = {2020},
	pages = {113--115},
}

@inproceedings{lehtinen_why_2015,
	address = {Cham},
	title = {Why the {Development} {Outcome} {Does} {Not} {Meet} the {Product} {Owners}‚Äô {Expectations}?},
	isbn = {9783319186122},
	doi = {10.1007/978-3-319-18612-2_8},
	abstract = {Many software development projects fail due to problems in requirements, scope, and collaboration. This paper presents a case study of the mismatch between the expectations of Product Owners and the outcome of the development in a large distributed Scrum organization. The data was collected in retrospective meetings involving a team of Product Owners and two software development teams. A focused root cause analysis of the problem ‚ÄúWhy the expectations of Product Owners do not meet the outcome of development teams?‚Äù was conducted. The analysis aimed at explaining why the problem occurred and how the causes were related to one another. The outcomes were analyzed both quantitatively and qualitatively. Our results illustrate the challenges of implementing the Product Owner role in the context of complex, high-variability requirements and distributed development. We highlight the importance of true collaboration, effective requirements specification activities, and sufficient resources for the Product Owner role.},
	language = {en},
	booktitle = {Agile {Processes} in {Software} {Engineering} and {Extreme} {Programming}},
	publisher = {Springer International Publishing},
	author = {Lehtinen, Timo O.A. and Virtanen, Risto and Heikkil√§, Ville T. and Itkonen, Juha},
	editor = {Lassenius, Casper and Dings√∏yr, Torgeir and Paasivaara, Maria},
	year = {2015},
	pages = {93--104},
}

@inproceedings{matthies_mining_2020,
	address = {New York, NY, USA},
	series = {{ICSEW}'20},
	title = {Mining for {Process} {Improvements}: {Analyzing} {Software} {Repositories} in {Agile} {Retrospectives}},
	isbn = {9781450379632},
	shorttitle = {Mining for {Process} {Improvements}},
	url = {https://dl.acm.org/doi/10.1145/3387940.3392168},
	doi = {10.1145/3387940.3392168},
	abstract = {Software Repositories contain knowledge on how software engineering teams work, communicate, and collaborate. It can be used to develop a data-informed view of a team's development process, which in turn can be employed for process improvement initiatives. In modern, Agile development methods, process improvement takes place in Retrospective meetings, in which the last development iteration is discussed. However, previously proposed activities that take place in these meetings often do not rely on project data, instead depending solely on the perceptions of team members. We propose new Retrospective activities, based on mining the software repositories of individual teams, to complement existing approaches with more objective, data-informed process views.},
	urldate = {2024-10-07},
	booktitle = {Proceedings of the {IEEE}/{ACM} 42nd {International} {Conference} on {Software} {Engineering} {Workshops}},
	publisher = {Association for Computing Machinery},
	author = {Matthies, Christoph and Dobrigkeit, Franziska and Hesse, Guenter},
	month = sep,
	year = {2020},
	pages = {189--190},
}

@InProceedings{matthies_experience_2021,
        author="Matthies, Christoph
        and Dobrigkeit, Franziska",
        editor="Przyby{\l}ek, Adam
        and Miler, Jakub
        and Poth, Alexander
        and Riel, Andreas",
        title="Experience vs Data: A Case for More Data-Informed Retrospective Activities",
        booktitle="Lean and Agile Software Development",
        year="2021",
        publisher="Springer International Publishing",
        address="Cham",
        pages="130--144",
        abstract="Effective Retrospective meetings are vital for ensuring productive development processes because they provide the means for Agile software development teams to discuss and decide on future improvements of their collaboration. Retrospective agendas often include activities that encourage sharing ideas and motivate participants to discuss possible improvements. The outcomes of these activities steer the future directions of team dynamics and influence team happiness. However, few empirical evaluations of Retrospective activities are currently available. Additionally, most activities rely on team members experiences and neglect to take existing project data into account. With this paper we want to make a case for data-driven decision-making principles, which have largely been adopted in other business areas. Towards this goal we review existing retrospective activities and highlight activities that already use project data as well as activities that could be augmented to take advantage of additional, more subjective data sources. We conclude that data-driven decision-making principles, are advantageous, and yet underused, in modern Agile software development. Making use of project data in retrospective activities would strengthen this principle and is a viable approach as such data can support the teams in making decisions on process improvement.",
        isbn="978-3-030-67084-9"
}



@article{jovanovic_agile_2016,
	title = {Agile {Retrospective} {Games} for {Different} {Team} {Development} {Phases}},
	volume = {22},
	copyright = {2016 Milo≈° Jovanoviƒá, Antoni-Llu√≠s Mesquida, Nikola Radakoviƒá, Antonia Mas},
	issn = {0948-6968},
	url = {https://lib.jucs.org/article/23761/},
	doi = {10.3217/jucs-022-12-1489},
	abstract = {Retrospectives in Agile software development can be used for improving processes among other issues that could affect the final product quality or the working environment. Games used in retrospective meetings influence positively the project team behaviour. In this research, games from Agile retrospectives are gathered from various sources and a new classification of games is created based on the four stage group development model proposed by Tuckman. Suitable games to be used in Forming, Storming, Norming and Performing phases are presented. The results obtained in this research can help practitioners to choose the appropriate activities for process improvement and other technical or human related factors arising in the team, depending on the development stage at which their team currently is.},
	language = {en},
	number = {12},
	urldate = {2024-10-07},
	journal = {JUCS - Journal of Universal Computer Science},
	author = {Jovanoviƒá, Milo≈° and Mesquida, Antoni-Llu√≠s and Radakoviƒá, Nikola and Mas, Antonia},
	month = dec,
	year = {2016},
	pages = {1489--1508},
}

@inproceedings{matthies_counteracting_2019,
	address = {Cham},
	title = {Counteracting {Agile} {Retrospective} {Problems} with {Retrospective} {Activities}},
	isbn = {9783030280055},
	doi = {10.1007/978-3-030-28005-5_41},
	abstract = {Retrospective meetings are a fundamental part of Agile software development methods. Effective retrospectives can positively impact teamwork, productivity, and work satisfaction. In this paper, we focus on problems that commonly occur during these meetings. To address them, we suggest retrospective activities that are already used in practice. These activities provide structure and guide the team through the meeting. We created a mapping between a selection of these activities and the problems they attempt to solve. We evaluated the created mapping through multiple case studies with software development teams in educational and professional contexts. Our results verify the existence of a relationship between specific retrospective activities and connected retrospective problems. Furthermore, using observational studies we could verify parts of the created problem-activity mapping.},
	language = {en},
	booktitle = {Systems, {Software} and {Services} {Process} {Improvement}},
	publisher = {Springer International Publishing},
	author = {Matthies, Christoph and Dobrigkeit, Franziska and Ernst, Alexander},
	editor = {Walker, Alastair and O'Connor, Rory V. and Messnarz, Richard},
	year = {2019},
	pages = {532--545},
}

@article{erdogan_more_2018,
	title = {More effective sprint retrospective with statistical analysis},
	volume = {30},
	copyright = {http://onlinelibrary.wiley.com/termsAndConditions\#vor},
	issn = {2047-7473, 2047-7481},
	url = {https://onlinelibrary.wiley.com/doi/10.1002/smr.1933},
	doi = {10.1002/smr.1933},
	abstract = {Abstract 
            Scrum teams aim to deliver products productively with highest possible value and quality, so they try to deliver high priority and high value product backlog items in earlier sprints. Making size estimation of product backlog items correctly is one of the most prominent factors for effective sprint planning. Retrospective meetings are an opportunity for teams to improve product quality, their productivity, and estimation capability. Enhancing in those areas requires empiricism as agility requires; hence, measureable indicators should be inspected and adapted at regular intervals. In this study, we assessed how and what kind of historical data is required to be collected for monitoring, and how statistical analysis can be investigated for inspection and adaptation in retrospective meetings. We experimented that statistics of ‚ÄúCorrelation between Story Point and Actual Effort‚Äù and ‚ÄúConsistency of Relative Estimation‚Äù were convenient for inspection and adaptation of estimation capability of teams. Past retrospective meetings also showed that statistics of ‚ÄúTeam's Actual Effort on Product,‚Äù ‚ÄúTeam Velocity,‚Äù ‚ÄúActual Effort for One Story Point,‚Äù ‚ÄúInnovation Rate,‚Äù and ‚ÄúVelocity vs Unplanned Effort Rate‚Äù were helpful to control and increase the productivity of teams. ‚ÄúActual Effort Rate of Quality Activities‚Äù and ‚ÄúSubcomponent Defect Density‚Äù statistical results helped to enhance product quality.},
	language = {en},
	number = {5},
	urldate = {2024-10-07},
	journal = {Journal of Software: Evolution and Process},
	author = {Erdoğan, Onur and Pekkaya, Muhammed Emre and Gök, Halime},
	month = may,
	year = {2018},
	pages = {e1933},
}

@inproceedings{grassi_towards_2023,
	title = {Towards {Supporting} {Emotion} {Awareness} in {Retrospective} {Meetings}},
	url = {https://ieeexplore.ieee.org/abstract/document/10173895/authors#authors},
	doi = {10.1109/ICSE-NIER58687.2023.00024},
	abstract = {Emotion awareness is a key antecedent to team effectiveness and the use of biometrics can help software developers in gaining awareness of emotions at the individual and team level. In this paper, we propose an approach to include emotional feedback in agile retrospective meetings as a proxy to identify developers‚Äô feelings in association with the activity performed by the team. As a proof of concept, we developed an emotion visualization tool that provides an integrated visualization of self-reported emotions, activities, and biometrics. We run a pilot study to evaluate our approach with the agile retrospective meetings of a software engineering capstone project. The preliminary findings suggest that integrated emotion visualization can be useful to inform discussion and reflection around the potential causes of unhappiness, thus triggering actionable insights that could enhance team productivity and improve collaboration.},
	urldate = {2024-10-07},
	booktitle = {2023 {IEEE}/{ACM} 45th {International} {Conference} on {Software} {Engineering}: {New} {Ideas} and {Emerging} {Results} ({ICSE}-{NIER})},
	author = {Grassi, Daniela and Lanubile, Filippo and Novielli, Nicole and Serebrenik, Alexander},
	month = may,
	year = {2023},
	note = {ISSN: 2832-7632},
	keywords = {Biometrics (access control), Collaboration, Conferences, Emotion awareness, Productivity, Reflection, Software, Visualization, agile teams, biometric sensors, retrospective meetings, visualization},
	pages = {101--105},
}

@inproceedings{ng_playing_2020,
	address = {Cham},
	title = {Playing the {Sprint} {Retrospective}: {A} {Replication} {Study}},
	isbn = {9783030375348},
	shorttitle = {Playing the {Sprint} {Retrospective}},
	doi = {10.1007/978-3-030-37534-8_7},
	abstract = {The Sprint Retrospective is a vehicle for continuous process improvement. Even though it is a well established agile practice, running effective retrospective meetings is challenging. There have been a lot of identified problems that commonly occur during these meetings. To address them, Przyby≈Çek \& Kotecka [20] successfully revitalized retrospective meetings by adopting collaborative games, which represent a powerful tool in improving interactions among team members. In this paper, we report on a replication of their study in Bluebay Poland and IHS Markit Gda≈Ñsk. The received feedback confirms the original findings and indicates that game-based retrospectives improve team members‚Äô creativity, involvement, and communication as well as produce better results than the standard retrospectives. This paper is an extended version of our previous work [25].},
	language = {en},
	booktitle = {Advances in {Agile} and {User}-{Centred} {Software} {Engineering}},
	publisher = {Springer International Publishing},
	author = {Ng, Yen Ying and Skrodzki, Jƒôdrzej and Wawryk, Maciej},
	editor = {Przyby≈Çek, Adam and Morales-Trujillo, Miguel Eh√©catl},
	year = {2020},
	pages = {133--141},
}

