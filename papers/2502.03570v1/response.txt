\section{Background and Related Work}
\label{sec_background}

In this section, we present a background on retro meetings, we clarify what project data entails, and we conclude by discussing related work on the use of data during retros.


\subsection{Retrospective Meetings: Structure, Tools, and Activities}
\label{sec_background_retro}

In Agile practices used in industry, such as Scrum [1],  retros play a crucial role in fostering a culture of ongoing improvement and collaboration by allowing teams to openly discuss both what went well and what needs adjustment, usually conducted at the end of every sprint (i.e., a fixed timeframe during which a Scrum team focuses on completing a defined amount of work).

Retros are typically structured around a five-step agenda that guides the team through reflecting on their recent work and planning improvements [2]: (1) \textit{Setting the Stage}, which involves establishing the purpose and creating an open environment for discussions; (2) \textit{Gathering Data}, where the team collects insights and facts from the recent sprint iteration to build a shared understanding; (3) \textit{Generating Insights}, where the collected data is analyzed to identify patterns, issues, and opportunities; (4) \textit{Deciding What to Do}, during which the team formulates actionable plans and improvement strategies; and (5) \textit{Closing}, which aims to summarize the outcomes and reinforce commitments. 

To support the retro process, various tools and activities are used to facilitate productive discussions. Common digital tools such as Miro [3] and Agile platforms such as Jira [4] provide visual boards, templates, and analytics that help organize and review team insights. Additionally, interactive activities, as suggested in Retromat [5], are frequently employed to encourage active participation. Ultimately, a successful retro relies heavily on team members’ active expression, underpinned by honesty, psychological safety\footnote{Previous studies outside the retro scope, also indicate psychological safety in the workplace as the most critical factor for team success [6].}, openness, and a commitment to improvement [7].


\subsection{\rebuttal{Project Data and Frameworks}}
\label{sec_background_data}

Broadly, data can be categorized into ``hard'' data and ``soft'' data [8]. Hard data includes quantitative metrics \rebuttal{about the project} such as code commits, test results, bug counts, review data, and deployment frequencies—tangible indicators that provide an objective view of the development process. On the other hand, soft data encompasses qualitative inputs like team sentiment, feedback from developers, and collaboration experiences, which offer a subjective but valuable perspective on team dynamics.

Among trending frameworks for using these types of data are SPACE [9], that evaluates team productivity and satisfaction across multiple dimensions, and DORA metrics [10] that focuses on four key metrics to gauge software delivery performance (\textit{change lead time}, \textit{deployment frequency}, \textit{mean time to restore}, and \textit{change failure rate}). 
Despite their growing popularity and the recognized importance of data-driven approaches in Software Engineering [11] and Agile methodologies [12], effectively integrating these frameworks and metrics into retros remains an opportunity for many Agile teams, suggesting the need for deeper exploration into the problem understanding of data-driven practices in retros. 
\rebuttal{In the following subsection, we provide references that explore the use of hard data and data-driven approaches in retrospectives.}

\subsection{\rebuttal{Use of Project Data during Retrospective Meetings}}
\label{sec_background_rw}

Erdoğan et al. [13] explored how statistical analysis can improve the effectiveness of sprint retros. They noted that ``gathering correct data requires trust, respect, collaboration, and motivation within the team,'' emphasizing the importance of team dynamics in adopting data-driven approaches. Although statistical analysis has a positive impact on process improvement and team velocity, challenges to adoption remain. These include defining which analyses are most relevant for retro insights and determining practical methods for implementing these analyses in team settings.

Later, other studies from Matthies et al. [14] explored incorporating insights from mining software repositories (e.g., GitHub) into retro agendas. 
In a 2021 study [15], they reviewed Retromat [5] activities, specifically examining the \textit{Gathering Data} phase [5] and the use of project data. Their analysis found that 86\% of Retromat's data-gathering activities lack explicit connections to project data, relying mainly on participant perceptions. 
To address this, they proposed modifications to five additional activities to better integrate project data, supporting more evidence-based decision-making in retros.

Although Matthies et al. (above) were among the first to discuss using project data in retros, they did not address the challenges of adoption, which is done by Bein [16], in a related study to ours. The author conducted interviews with seven agile practitioners and identified a lack of guidelines and theories for integrating data analysis in retros, both in industry and academic research.
Most of their interviewees recognize the potential benefits of using project data in retros. However, they also highlighted challenges, such as deciding which project artifacts to use, formulating relevant questions, and implementing analyses (similarly to what [17] pointed out). Their concerns also included the high effort required and fears that data might be misused for surveillance or assigning blame.

The research summarized above provides preliminary insights on some of the benefits and challenges of using data in retros. We need to confirm and deepen these insights, and learn how to address the barriers and challenges of using \rebuttal{objective project data} in Agile team retros.