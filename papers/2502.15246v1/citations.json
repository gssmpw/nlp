[
  {
    "index": 0,
    "papers": [
      {
        "key": "transit",
        "author": "Udupa, Abhishek and Raghavan, Arun and Deshmukh, Jyotirmoy V. and Mador-Haim, Sela and Martin, Milo M.K. and Alur, Rajeev",
        "title": "TRANSIT: specifying protocols with concolic snippets"
      }
    ]
  },
  {
    "index": 1,
    "papers": [
      {
        "key": "escher",
        "author": "Albarghouthi, Aws and Gulwani, Sumit and Kincaid, Zachary",
        "title": "Recursive program synthesis"
      }
    ]
  },
  {
    "index": 2,
    "papers": [
      {
        "key": "loopfree",
        "author": "Gulwani, Sumit and Jha, Susmit and Tiwari, Ashish and Venkatesan, Ramarathnam",
        "title": "Synthesis of loop-free programs"
      }
    ]
  },
  {
    "index": 3,
    "papers": [
      {
        "key": "sypet",
        "author": "Feng, Yu and Martins, Ruben and Wang, Yuepeng and Dillig, Isil and Reps, Thomas W.",
        "title": "Component-based synthesis for complex APIs"
      }
    ]
  },
  {
    "index": 4,
    "papers": [
      {
        "key": "snippy",
        "author": "Ferdowsifard, Kasra and Ordookhanians, Allen and Peleg, Hila and Lerner, Sorin and Polikarpova, Nadia",
        "title": "Small-Step Live Programming by Example"
      }
    ]
  },
  {
    "index": 5,
    "papers": [
      {
        "key": "codehint",
        "author": "Galenson, Joel and Reames, Philip and Bodik, Rastislav and Hartmann, Bj\\\"{o}rn and Sen, Koushik",
        "title": "CodeHint: dynamic and interactive synthesis of code snippets"
      }
    ]
  },
  {
    "index": 6,
    "papers": [
      {
        "key": "tfcoder",
        "author": "Shi, Kensen and Bieber, David and Singh, Rishabh",
        "title": "TF-Coder: Program Synthesis for Tensor Manipulations"
      }
    ]
  },
  {
    "index": 7,
    "papers": [
      {
        "key": "autopandas",
        "author": "Bavishi, Rohan and Lemieux, Caroline and Fox, Roy and Sen, Koushik and Stoica, Ion",
        "title": "AutoPandas: neural-backed generators for program synthesis"
      }
    ]
  },
  {
    "index": 8,
    "papers": [
      {
        "key": "wrex",
        "author": "Drosos, Ian and Barik, Titus and Guo, Philip J. and DeLine, Robert and Gulwani, Sumit",
        "title": "Wrex: A Unified Programming-by-Example Interaction for Synthesizing Readable Code for Data Scientists"
      }
    ]
  },
  {
    "index": 9,
    "papers": [
      {
        "key": "Edsynth",
        "author": "Yang, Zijiang and Hua, Jinru and Wang, Kaiyuan and Khurshid, Sarfraz",
        "title": "EdSynth: Synthesizing API Sequences with Conditionals and Loops"
      }
    ]
  },
  {
    "index": 10,
    "papers": [
      {
        "key": "frangel",
        "author": "Shi, Kensen and Steinhardt, Jacob and Liang, Percy",
        "title": "FrAngel: component-based synthesis with control structures"
      }
    ]
  },
  {
    "index": 11,
    "papers": [
      {
        "key": "loopy",
        "author": "Ferdowsifard, Kasra and Barke, Shraddha and Peleg, Hila and Lerner, Sorin and Polikarpova, Nadia",
        "title": "LooPy: interactive program synthesis with control structures"
      }
    ]
  },
  {
    "index": 12,
    "papers": [
      {
        "key": "jain2022jigsaw",
        "author": "Jain, Naman and Vaidyanath, Skanda and Iyer, Arun and Natarajan, Nagarajan and Parthasarathy, Suresh and Rajamani, Sriram and Sharma, Rahul",
        "title": "Jigsaw: Large language models meet program synthesis"
      }
    ]
  },
  {
    "index": 13,
    "papers": [
      {
        "key": "xia2024fuzz4all",
        "author": "Xia, Chunqiu Steven and Paltenghi, Matteo and Le Tian, Jia and Pradel, Michael and Zhang, Lingming",
        "title": "Fuzz4all: Universal fuzzing with large language models"
      },
      {
        "key": "jiang2024generating",
        "author": "Jiang, Shan and Zhu, Chenguang and Khurshid, Sarfraz",
        "title": "Generating executable oracles to check conformance of client code to requirements of JDK Javadocs using LLMs"
      }
    ]
  },
  {
    "index": 14,
    "papers": [
      {
        "key": "jain2022jigsaw",
        "author": "Jain, Naman and Vaidyanath, Skanda and Iyer, Arun and Natarajan, Nagarajan and Parthasarathy, Suresh and Rajamani, Sriram and Sharma, Rahul",
        "title": "Jigsaw: Large language models meet program synthesis"
      },
      {
        "key": "ugare2024improving",
        "author": "Ugare, Shubham and Suresh, Tarun and Kang, Hangoo and Misailovic, Sasa and Singh, Gagandeep",
        "title": "Improving llm code generation with grammar augmentation"
      },
      {
        "key": "spiess2024quality",
        "author": "Spiess, Claudio and Gros, David and Pai, Kunal Suresh and Pradel, Michael and Rabin, Md Rafiqul Islam and Jha, Susmit and Devanbu, Prem and Ahmed, Toufique",
        "title": "Quality and Trust in LLM-generated Code"
      },
      {
        "key": "wang2023large",
        "author": "Wang, Xinyi and Zhu, Wanrong and Wang, William Yang",
        "title": "Large language models are implicitly topic models: Explaining and finding good demonstrations for in-context learning"
      }
    ]
  },
  {
    "index": 15,
    "papers": [
      {
        "key": "reuseableAPI",
        "author": "Mai, Yubo and Gao, Zhipeng and Hu, Xing and Bao, Lingfeng and Liu, Yu and Sun, JianLing",
        "title": "Are Human Rules Necessary? Generating Reusable APIs with CoT Reasoning and In-Context Learning"
      }
    ]
  }
]