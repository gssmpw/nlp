\section{Related Work}
%Applications
%\textcolor{red}{Zipei's comment: Isn't this paragraph redundant?}

%\textcolor{red}{The modified Bessel function of the second kind, \( K_\nu(x) \) or \textsc{BesselK}, is a fundamental tool in various fields of science and engineering due to its unique mathematical properties**Dunham, "The Modified Bessel Function of the Second Kind"**. These properties make \textsc{BesselK} well-suited for solving problems in differential equations**Erdélyi, "Asymptotic Expansions"**, and physical systems**Love, "Some Problems of Geodynamics"**. A notable characteristic of \textsc{BesselK} is its \textit{rapid decay at infinity}, meaning the function diminishes exponentially as \( x \to \infty \). This property makes it invaluable for modeling boundary conditions or phenomena where the solution must vanish far from the origin. Key applications include heat conduction**Carslaw, "Conduction of Heat in Solids"**, which models temperature distributions in cylindrical or spherical systems; wave propagation**Rayleigh, "The Theory of Sound"**, where it describes damped wave behavior in cylindrical waveguides; and stochastic processes**Feller, "An Introduction to Probability Theory"**, which represent probability densities in systems where long-distance contributions are negligible.}

The modified Bessel function of the second kind, \( K_\nu(x) \) or \textsc{BesselK}, arises in the separation of variables solutions of partial differential equations**Erdélyi, "Asymptotic Expansions"**. A key feature of \textsc{BesselK} is its \textit{rapid decay at infinity}. The function diminishes exponentially as \( x \to \infty \), providing a basis for solutions that vanish at large distances. Applications include heat conduction**Carslaw, "Conduction of Heat in Solids"**, wave propagation**Rayleigh, "The Theory of Sound"**, and stochastic processes**Feller, "An Introduction to Probability Theory"**.


\textsc{BesselK} also arises in the widely used Mat\'{e}rn kernel, a covariance function for Gaussian processes. The Mat\'{e}rn kernel finds extensive applications across various fields. In spatial statistics, it is used to model spatial correlations**Stein, "Interpolation of Spatial Data"**. In machine learning, it is particularly valuable for Gaussian process regression and Bayesian optimization**Rasmussen, "Gaussian Processes for Machine Learning"**. In signal processing, it helps capture correlations in time series and spectral analysis**Marple, "Digital Spectral Analysis with Applications"**. 
%These applications underscore the versatility and scientific significance of \textsc{BesselK} in both theoretical and applied domains.
 
At least six different methods for \textsc{BesselK} can be identified in the literature; however, not all of these methods are adopted in existing tools and libraries. (1) \textit{Series Expansions}**Erdélyi, "Asymptotic Expansions"**: \( K_\nu(x) \) can be expressed as an infinite series in powers of \( x \), which is truncated to a finite number of terms when \( x \) is small. Most existing libraries utilize series expansions for small \( x \), including MATLAB, Mathematica, GSL, SciPy, and Maple. (2) \textit{Continued Fractions}**Mittag-Leffler, "Sur la représentation analytique d'une fonction arbitraire"**: \( K_\nu(x) \) can be represented as an infinite fraction with a recursive structure, particularly suitable when \( x \) is moderate or large. This method is also used in most existing libraries for moderate $x$ values. (3) \textit{Asymptotic Expansions}**Erdélyi, "Asymptotic Expansions"**: This method focuses on the dominant behavior of \( x \) as it becomes large, ignoring lower-order terms, which reduces the accuracy for small \( x \). This method is also used in most existing libraries for large \( x \) values.
%\textcolor{red}{(4) is not a single method, it is a relation and it is used in many methods including (1) and (3).}
%\textcolor{red}{(4) \textit{Recurrence Relations}____: Mathematical formulas that relate the values of a function at different orders $\nu$, enabling efficient computation by leveraging previously calculated values, allowing efficient computation for different orders $\nu$ once the function is known for a particular order. Examples of libraries that employ this approach include MATLAB, SciPy, and Boost C++; }
(4) \textit{Integral Representations}**Watson, "A Treatise on the Theory of Bessel Functions"**: \( K_\nu(x) \) is expressed as integrals. This method is flexible and can work with small or large values of $x$. Some libraries that rely on this method include Mathematica, SciPy, and GSL. (5) \textit{Polynomial Fitting}**Forsythe, "Generation and Use of Orthogonal Polynomials"**: Polynomial fitting approximates \( K_\nu(x) \), by fitting polynomials to precomputed values of the function over restricted ranges of \( x \) and \( \nu \). (6) \textit{Differential Equation Solvers}**Ralston, "A First Course in Numerical Analysis"**: Numerical methods for solving differential equations, such as finite difference schemes and Runge-Kutta methods**Kurtz, "Numerical Methods in the Solution of Differential Equations"**, can be employed to compute \( K_\nu(x) \). These solvers approximate the solution of \( K_\nu(x) \) by discretizing the domain and applying iterative algorithms to solve the governing differential equation.

% \textcolor{red}{As for the GPU \textsc{BesselK} implementation, Plesner et al.____ developed a GPU library for computing logarithms of modified Bessel functions of the second kind, addressing critical precision limitations and numerical stability issues present in existing libraries. Their approach provided more robust results compared to existing libraries such as GSL, however, their implementation showed large limitations for modified Bessel functions of the second kind with small values ($(x, \nu) \in [0, 150] \times (0, 150]$) in accuracy and runtime, which is a strong shortcoming since most real applications cannot reach that kind of smoothness level, the typical range of $\nu$ is in between $0$ and $3.5$~\cite}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% 1- Give brief about \emph{ExaGeoStat}and the missing of GPU support of matern kernel
% 2- Related work to solve the BesselK function (GNU, takekawa, and ICS24 reference, ...etc)


%TO-DO: reduce the contexts of \emph{ExaGeoStat}but the necesseity of accurate and fast evaluation of modified bessel function of the second kind, with a comprehensive review of existing method, comparing advantages and disadvantages. Also, mentioning the bottleneck of evaluation of derivative of besselk which is not suitable for gradient-based optimization.

%\emph{ExaGeoStat}, a high-performance software package designed for climate and environmental geostatistics on large-scale computing systems. The software implements exact maximum likelihood estimation (MLE) for large spatial datasets using the Mat\'{e}rn covariance function, enabling both parameter estimation and prediction of missing measurements across geographical locations. \emph{ExaGeoStat} leverages state-of-the-art dense linear algebra libraries (Chameleon) and runtime systems (StarPU) to achieve high performance across different hardware architectures, including multicore CPUs, GPUs, and distributed systems. The software can handle unprecedented large-scale exact computations, demonstrated through synthetic and real-world soil moisture datasets. The authors also provide an R interface (ExaGeoStatR) to make the software accessible to statisticians**Chen, "Bayesian Methods for Machine Learning"** while maintaining accuracy comparable to existing methods with the usage of PyTorch.

%\textcolor{red}{In summary, the problem region defined in those papers is either far too large in speaking of the smoothness parameter or limited in speaking of the support of the function, which will be unsuitable for environmental studies. To improve computational performance, we propose a new GPU-accelerated algorithm for evaluating the modified Bessel function of the second kind, which can be integrated with spatial statistics frameworks like \emph{ExaGeoStat}and optimized by focusing on specific study regions.}
%\textcolor{red}{Although it gains certain accuracy using the numerical integration, it does not consider the problem region when $x < 0.1$. In summary, the problem region defined in those papers is either far too large in speaking of the smoothness parameter or limited in speaking of the support of the function, which will be unsuitable for environmental studies. To improve computational performance, we propose a new GPU-accelerated algorithm for evaluating the modified Bessel function of the second kind, which can be integrated with spatial statistics frameworks like \emph{ExaGeoStat}and optimized by focusing on specific study regions.