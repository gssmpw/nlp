\section{Related work}
\label{sec:related}
Bentley, "K-D Trees: A File Access Method"
Further improvements were made by Bentley, Friedman and Finkel, "Analysis of Algorithms for Searching an Ordered Table"__Friedman, "An Algorithm for Finding the k-th Largest Element in a Multiset" and many others. Bregman, "The Relations Between the Metric Diameters of Metric Spaces and the Maximal Diameter of Their Subsets"

\ifapprox
    Many computational geometry techniques have been extended to operate with Bregman divergences instead of a metric. In the context of nearest neighbour search, Cayton, "Approximate Nearest Neighbors: Towards Removing Assumptions" blazed the trail by extending__Cayton, "Approximate Nearest Neighbors: Efficient K-D Trees and Prototype Software for KL and IS Divergences" ball-trees and implementing prototype software for the KL and IS divergences. He also proved theoretical results towards extending Kd-trees__Cayton, "Approximate Nearest Neighbors: Efficient K-D Trees and Prototype Software for KL and IS Divergences", which we strengthen as well as provide algorithms and an efficient implementation. In turn, Nielsen, Piro, and Barlaud, "Bregman Ball-Trees" extended Vantage point trees__Nielsen, Piro, and Barlaud, "Bregman Ball-Trees". The same authors further improved Bregman ball-trees__Nielsen, Piro, and Barlaud, "Bregman Ball-Trees". R-trees and VA-files were extended by Zhang and collaborators, "VA-Files for Efficient Metric Space Indexing"__Zhang and collaborators, "R*-tree: A Dynamic Indexing Method for Spatial Database Systems". Many approximate search methods have been adapted to the Bregman setting. We discuss related works and present experimental comparisons in Appendix~\ref{sec:approxDisc}.
\else
    Many computational geometry techniques have been extended to operate with Bregman divergences instead of a metric. In the context of nearest neighbour search, Cayton, "Approximate Nearest Neighbors: Towards Removing Assumptions" blazed the trail by extending__Cayton, "Approximate Nearest Neighbors: Efficient K-D Trees and Prototype Software for KL and IS Divergences" ball-trees and implementing prototype software for the KL and IS divergences. He also proved theoretical results towards extending Kd-trees__Cayton, "Approximate Nearest Neighbors: Efficient K-D Trees and Prototype Software for KL and IS Divergences", which we strengthen as well as provide algorithms and an efficient implementation. In turn, Nielsen, Piro, and Barlaud, "Bregman Ball-Trees" extended Vantage point trees__Nielsen, Piro, and Barlaud, "Bregman Ball-Trees". The same authors further improved Bregman ball-trees__Nielsen, Piro, and Barlaud, "Bregman Ball-Trees". R-trees and VA-files were extended by Zhang and collaborators, "VA-Files for Efficient Metric Space Indexing"__Zhang and collaborators, "R*-tree: A Dynamic Indexing Method for Spatial Database Systems". Abdullah, Moeller, and Venkatasubramanian, "Tree of Rings" combined with a quad-tree decomposition have been proven to work sublinearly for finding approximate nearest neighbours. In 2013, Boytsov and Naidan, "Bregman VP-Trees: Efficient Indexing for Approximate Nearest Neighbor Search" developed their own Bregman VP-trees extension__Boytsov and Naidan, "Fast Nearest Neighbor Search in Metric Spaces with Bregman Divergences". Naidan later incorporated his VP-trees and Cayton's ball-trees into the Non-Metric Space Library (NMSLIB)__Boytsov and Naidan, "Bregman VP-Trees: Efficient Indexing for Approximate Nearest Neighbor Search". This library also includes other approximate Bregman similarity searches including small world graphs__Haghiri-Fard, "Small World Graphs". The hierarchical navigable small world graph has been a popular choice for similarity searches in vector databases__Koudas and Srivastava, "Approximatne Querying of Large Datasets" and perform well in benchmarks for metrics__Eppstein et al., "Nearest Neighbor Clustering Using Kernel Density Estimation". However, its implementation in NMSLIB is currently experimental for Bregman divergences__Boytsov and Naidan, "Bregman VP-Trees: Efficient Indexing for Approximate Nearest Neighbor Search".
    Recently Abdelkader, Arya, da Fonseca and Mount proposed an approach to proximity search in non-metric settings, which includes Bregman divergences__Abdelkader et al., "Bregman Divergence Based Proximity Searching".
\fi

More broadly, Banerjee and collaborators extended $k$-means clustering__Banerjee et al., "Clustering on the Sphere Using Belief Propagation" to arbitrary Bregman divergences -- with the surprising twist that the existing algorithm works without changes. Coresets have also been extended to the Bregman setting by Ackermann and Bl{\"o}mer, "Coresets for Clustering with Space-Filling Curves". Nielsen, Boissonnat, and Nock developed Bregman Voronoi diagrams and Delaunay triangulations__Nielsen et al., "Bregman Voronoi Diagrams and Delaunay Triangulations". Edelsbrunner and Wagner extended topological data analysis methods to the Bregman case__Edelsbrunner and Wagner, "Topological Persistence Analysis".

% This should be here. The software I mention below also includes the below things.
%On a slightly different note, we mention some developments related to geometries on the standard simplex coming from the computational geometry community. One example is the work of Nielsen and Shao, considering Hilbert geometries on the simplex__Nielsen and Shao, "Hilbert Geometries and Non-Linear Embeddings". Kyng, Phillips and Venkatasubramanian showed Johnson--Lindenstrauss-type results on the simplex__Kyng et al., "Approximating Extremal Volume of Polytopes".

In the Euclidean case, robust software is available for all of these techniques.
One popular package in the Euclidean case is the ANN library by Mount and Arya__Mount and Arya, "ANN: A Library for Approximate Nearest Neighbor Search". Our current implementation is inspired by this library. % which we will compare with the Bregman ball-tree implementation by Cayton__Cayton, "Approximate Nearest Neighbors: Efficient K-D Trees and Prototype Software for KL and IS Divergences" and heuristic methods in NMSLIB__.