\section{Related Work}
This study is closely related to the fields of Text-to-SQL and NoSQL Databases, as briefly surveyed below.
\subsection{Text-to-SQL}
Early research on Text-to-SQL primarily focused on meticulously designed rule-based methods, such as those in **Zettlemoyer et al., "Open-Domain Learning of Literal Semantic Parsing"** , these methods used predefined rules or semantic parsers to translate NLQs into SQL but were inflexible and inadequate for handling increasingly complex database structures.
%
With the rise of deep learning, the focus of Text-to-SQL research has gradually shifted towards methods that utilize deep neural networks, such as attention mechanisms **Vinyals et al., "Grammar Variational Autoencoder"**  and graph-based encoding strategies **Yin et al., "Graph-to-Sequence Model for Task-Oriented Dialog"**. Alternatively, some approaches treat Text-to-SQL as a sequence-to-sequence problem by using encoder-decoder structured Pre-trained Language Models (PLMs) to generate SQL queries **Devlin et al., "BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding"**.

In recent years, large language models (LLMs), which have demonstrated remarkable success across various domains, have also garnered increasing attention in the Text-to-SQL field. Current literature primarily focuses on two approaches with LLMs: prompt engineering and pretraining/fine-tuning. Prompt engineering methods typically involve using specific reasoning workflows which can be categorized into several reasoning modes, including Chain-of-Thought (CoT) **Steinhardt et al., "MINILAYERS: Efficient Transformers for Sequence-Structured Tasks"**  and its variants , Least-to-Most , and Decomposition . To evaluate Text-to-SQL model performance in practical applications, several large-scale benchmark datasets have been developed and released, including WikiSQL , Spider , KaggleDBQA , BIRD , Bull etc.

\subsection{NoSQL Database}
 %SQL, as the standard query language for relational databases, is essential for data management and retrieval. However, 


Traditional SQL databases face limitations with large-scale, unstructured, or semi-structured data in the internet and big data era, prompting the rise of NoSQL databases, which provide flexibility, scalability, and high performance in web applications and real-time data analysis **Shah et al., "Scalable Cloud-Native NoSQL Databases"**.
%
In the field of databases and NLP, current research primarily focuses on several key areas of NoSQL databases,including achieving scalability in data storage systems within large-scale user environments , ensuring consistency in NoSQL databases , addressing multi-tenant NoSQL data storage issues in cloud computing environments, particularly in scenarios involving resource and data sharing , and realizing scalability, elasticity, and autonomy in database management systems (DBMS) within cloud computing environments .

Despite the extensive research on NoSQL across various domains, its accessibility remains a challenge, especially for non-expert users. Although Text-to-NoSQL tasks have been proposed to address this issue, existing NoSQL generation primarily supports English and overlooks the needs of non-English users.
To tackle this issue, we introduce the Multilingual Text-to-NoSQL task, which is based on existing Text-to-NoSQL research and not only aims to reduce the barrier for non-expert users to utilize NoSQL databases by automatically converting NLQs into NoSQL queries but also addresses the gap in existing Text-to-NoSQL tasks that mainly support English while neglecting non-English users' needs. In this task, we also introduce MultiTEND, the largest multilingual benchmark for natural language to NoSQL query generation.

\newpage