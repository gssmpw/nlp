@inproceedings{KokologiannakisMV24,
  author       = {Michalis Kokologiannakis and
                  Rupak Majumdar and
                  Viktor Vafeiadis},
  editor       = {Bernd Finkbeiner and
                  Laura Kov{\'{a}}cs},
  title        = {Enhancing GenMC's Usability and Performance},
  booktitle    = {Tools and Algorithms for the Construction and Analysis of Systems
                  - 30th International Conference, {TACAS} 2024, Held as Part of the
                  European Joint Conferences on Theory and Practice of Software, {ETAPS}
                  2024, Luxembourg City, Luxembourg, April 6-11, 2024, Proceedings,
                  Part {II}},
  series       = {Lecture Notes in Computer Science},
  volume       = {14571},
  pages        = {66--84},
  publisher    = {Springer},
  year         = {2024},
  OPTurl          = {https://doi.org/10.1007/978-3-031-57249-4\_4},
  doi          = {10.1007/978-3-031-57249-4\_4},
  timestamp    = {Sat, 08 Jun 2024 13:13:56 +0200},
  biburl       = {https://dblp.org/rec/conf/tacas/KokologiannakisMV24.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{QinCYSZ20,
  author       = {Boqin Qin and
                  Yilun Chen and
                  Zeming Yu and
                  Linhai Song and
                  Yiying Zhang},
  editor       = {Alastair F. Donaldson and
                  Emina Torlak},
  title        = {Understanding memory and thread safety practices and issues in real-world
                  Rust programs},
  booktitle    = {Proceedings of the 41st {ACM} {SIGPLAN} International Conference on
                  Programming Language Design and Implementation, {PLDI} 2020, London,
                  UK, June 15-20, 2020},
  pages        = {763--779},
  publisher    = {{ACM}},
  year         = {2020},
  OPTurl          = {https://doi.org/10.1145/3385412.3386036},
  doi          = {10.1145/3385412.3386036},
  timestamp    = {Sun, 19 Jan 2025 13:10:49 +0100},
  biburl       = {https://dblp.org/rec/conf/pldi/QinCYSZ20.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{AstrauskasMP0S20,
  author       = {Vytautas Astrauskas and
                  Christoph Matheja and
                  Federico Poli and
                  Peter M{\"{u}}ller and
                  Alexander J. Summers},
  title        = {How do programmers use unsafe rust?},
  journal      = {Proc. {ACM} Program. Lang.},
  volume       = {4},
  number       = {{OOPSLA}},
  pages        = {136:1--136:27},
  year         = {2020},
  OPTurl          = {https://doi.org/10.1145/3428204},
  doi          = {10.1145/3428204},
  timestamp    = {Sat, 30 Sep 2023 10:23:23 +0200},
  biburl       = {https://dblp.org/rec/journals/pacmpl/AstrauskasMP0S20.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{EvansCS20,
  author       = {Ana Nora Evans and
                  Bradford Campbell and
                  Mary Lou Soffa},
  editor       = {Gregg Rothermel and
                  Doo{-}Hwan Bae},
  title        = {Is rust used safely by software developers?},
  booktitle    = {{ICSE} '20: 42nd International Conference on Software Engineering,
                  Seoul, South Korea, 27 June - 19 July, 2020},
  pages        = {246--257},
  publisher    = {{ACM}},
  year         = {2020},
  OPTurl          = {https://doi.org/10.1145/3377811.3380413},
  doi          = {10.1145/3377811.3380413},
  timestamp    = {Fri, 04 Jun 2021 14:37:02 +0200},
  biburl       = {https://dblp.org/rec/conf/icse/EvansCS20.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}



@article{NorrisD16,
  author       = {Brian Norris and
                  Brian Demsky},
  title        = {A Practical Approach for Model Checking {C/C++11} Code},
  journal      = {{ACM} Trans. Program. Lang. Syst.},
  volume       = {38},
  number       = {3},
  pages        = {10:1--10:51},
  year         = {2016},
  OPTurl          = {https://doi.org/10.1145/2806886},
  doi          = {10.1145/2806886},
  timestamp    = {Thu, 14 Oct 2021 09:12:21 +0200},
  biburl       = {https://dblp.org/rec/journals/toplas/NorrisD16.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{JKD18,
  author       = {Ralf Jung and
                  Jacques{-}Henri Jourdan and
                  Robbert Krebbers and
                  Derek Dreyer},
  title        = {RustBelt: securing the foundations of the rust programming language},
  journal      = {Proc. {ACM} Program. Lang.},
  volume       = {2},
  number       = {{POPL}},
  pages        = {66:1--66:34},
  year         = {2018},
  OPTurl          = {https://doi.org/10.1145/3158154},
  doi          = {10.1145/3158154},
  timestamp    = {Sat, 30 Sep 2023 10:23:23 +0200},
  biburl       = {https://dblp.org/rec/journals/pacmpl/0002JKD18.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{BurckhardtKMN10,
  author       = {Sebastian Burckhardt and
                  Pravesh Kothari and
                  Madanlal Musuvathi and
                  Santosh Nagarakatte},
  editor       = {James C. Hoe and
                  Vikram S. Adve},
  title        = {A randomized scheduler with probabilistic guarantees of finding bugs},
  booktitle    = {Proceedings of the 15th International Conference on Architectural
                  Support for Programming Languages and Operating Systems, {ASPLOS}
                  2010, Pittsburgh, Pennsylvania, USA, March 13-17, 2010},
  pages        = {167--178},
  publisher    = {{ACM}},
  year         = {2010},
  OPTurl          = {https://doi.org/10.1145/1736020.1736040},
  doi          = {10.1145/1736020.1736040},
  timestamp    = {Wed, 07 Jul 2021 13:23:08 +0200},
  biburl       = {https://dblp.org/rec/conf/asplos/BurckhardtKMN10.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}



@inproceedings{AbdullaAJS14,
  author       = {Parosh Aziz Abdulla and
                  Stavros Aronis and
                  Bengt Jonsson and
                  Konstantinos Sagonas},
  editor       = {Suresh Jagannathan and
                  Peter Sewell},
  title        = {Optimal dynamic partial order reduction},
  booktitle    = {The 41st Annual {ACM} {SIGPLAN-SIGACT} Symposium on Principles of
                  Programming Languages, {POPL} '14, San Diego, CA, USA, January 20-21,
                  2014},
  pages        = {373--384},
  publisher    = {{ACM}},
  year         = {2014},
  OPTurl          = {https://doi.org/10.1145/2535838.2535845},
  doi          = {10.1145/2535838.2535845},
  timestamp    = {Tue, 31 Aug 2021 12:07:11 +0200},
  biburl       = {https://dblp.org/rec/conf/popl/AbdullaAJS14.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{AbdullaAAJLS15,
  author       = {Parosh Aziz Abdulla and
                  Stavros Aronis and
                  Mohamed Faouzi Atig and
                  Bengt Jonsson and
                  Carl Leonardsson and
                  Konstantinos Sagonas},
  editor       = {Christel Baier and
                  Cesare Tinelli},
  title        = {Stateless Model Checking for {TSO} and {PSO}},
  booktitle    = {Tools and Algorithms for the Construction and Analysis of Systems
                  - 21st International Conference, {TACAS} 2015, Held as Part of the
                  European Joint Conferences on Theory and Practice of Software, {ETAPS}
                  2015, London, UK, April 11-18, 2015. Proceedings},
  series       = {Lecture Notes in Computer Science},
  volume       = {9035},
  pages        = {353--367},
  publisher    = {Springer},
  year         = {2015},
  OPTurl          = {https://doi.org/10.1007/978-3-662-46681-0\_28},
  doi          = {10.1007/978-3-662-46681-0\_28},
  timestamp    = {Sat, 30 Sep 2023 09:57:43 +0200},
  biburl       = {https://dblp.org/rec/conf/tacas/AbdullaAAJLS15.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{FlanaganG05,
  author       = {Cormac Flanagan and
                  Patrice Godefroid},
  editor       = {Jens Palsberg and
                  Mart{\'{\i}}n Abadi},
  title        = {Dynamic partial-order reduction for model checking software},
  booktitle    = {Proceedings of the 32nd {ACM} {SIGPLAN-SIGACT} Symposium on Principles
                  of Programming Languages, {POPL} 2005, Long Beach, California, USA,
                  January 12-14, 2005},
  pages        = {110--121},
  publisher    = {{ACM}},
  year         = {2005},
  OPTurl          = {https://doi.org/10.1145/1040305.1040315},
  doi          = {10.1145/1040305.1040315},
  timestamp    = {Sat, 31 Jul 2021 17:22:14 +0200},
  biburl       = {https://dblp.org/rec/conf/popl/FlanaganG05.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Kokologiannakis21,
  author       = {Michalis Kokologiannakis and
                  Viktor Vafeiadis},
  title        = {GenMC: {A} Model Checker for Weak Memory Models},
  booktitle    = {{CAV} {(1)}},
  series       = {Lecture Notes in Computer Science},
  volume       = {12759},
  pages        = {427--440},
  publisher    = {Springer},
  year         = {2021}
}

@article{yu2019fearlessconcurrencyunderstandingconcurrent,
  author       = {Zeming Yu and
                  Linhai Song and
                  Yiying Zhang},
  title        = {Fearless Concurrency? Understanding Concurrent Programming Safety
                  in Real-World Rust Software},
  journal      = {CoRR},
  volume       = {abs/1902.01906},
  year         = {2019},
  url          = {http://arxiv.org/abs/1902.01906},
  eprinttype    = {arXiv},
  eprint       = {1902.01906},
  timestamp    = {Tue, 20 Dec 2022 17:33:08 +0100},
  biburl       = {https://dblp.org/rec/journals/corr/abs-1902-01906.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}


@article{taming_undefined_behaviour,
author = {Lee, Juneyoung and Kim, Yoonseung and Song, Youngju and Hur, Chung-Kil and Das, Sanjoy and Majnemer, David and Regehr, John and Lopes, Nuno P.},
title = {Taming undefined behavior in LLVM},
year = {2017},
issue_date = {June 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {6},
issn = {0362-1340},
OPTurl = {https://doi.org/10.1145/3140587.3062343},
doi = {10.1145/3140587.3062343},
abstract = {A central concern for an optimizing compiler is the design of its intermediate representation (IR) for code. The IR should make it easy to perform transformations, and should also afford efficient and precise static analysis. In this paper we study an aspect of IR design that has received little attention: the role of undefined behavior. The IR for every optimizing compiler we have looked at, including GCC, LLVM, Intel's, and Microsoft's, supports one or more forms of undefined behavior (UB), not only to reflect the semantics of UB-heavy programming languages such as C and C++, but also to model inherently unsafe low-level operations such as memory stores and to avoid over-constraining IR semantics to the point that desirable transformations become illegal. The current semantics of LLVM's IR fails to justify some cases of loop unswitching, global value numbering, and other important "textbook" optimizations, causing long-standing bugs. We present solutions to the problems we have identified in LLVM's IR and show that most optimizations currently in LLVM remain sound, and that some desirable new transformations become permissible. Our solutions do not degrade compile time or performance of generated code.},
journal = {SIGPLAN Not.},
month = jun,
pages = {633–647},
numpages = {15},
keywords = {undefined behavior, intermediate representations, compilers}
}

@article{lidbury_donaldson_TSAN,
author = {Lidbury, Christopher and Donaldson, Alastair F.},
title = {Dynamic race detection for C++11},
year = {2017},
issue_date = {January 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {1},
issn = {0362-1340},
OPTurl = {https://doi.org/10.1145/3093333.3009857},
doi = {10.1145/3093333.3009857},
journal = {SIGPLAN Not.},
month = {jan},
pages = {443–457},
numpages = {15},
keywords = {C++11, concurrency, data races, memory models}
}

@inproceedings{SatoMKT24,
  author       = {Shigeyuki Sato and
                  Taiyo Mizuhashi and
                  Genki Kimura and
                  Kenjiro Taura},
  editor       = {Oleg Kiselyov},
  title        = {Efficiently Adapting Stateless Model Checking for {C11/C++11} to Mixed-Size
                  Accesses},
  booktitle    = {Programming Languages and Systems - 22nd Asian Symposium, {APLAS}
                  2024, Kyoto, Japan, October 22-24, 2024, Proceedings},
  series       = {Lecture Notes in Computer Science},
  volume       = {15194},
  pages        = {346--364},
  publisher    = {Springer},
  year         = {2024},
  OPTurl          = {https://doi.org/10.1007/978-981-97-8943-6\_17},
  doi          = {10.1007/978-981-97-8943-6\_17},
  timestamp    = {Mon, 09 Dec 2024 22:46:06 +0100},
  biburl       = {https://dblp.org/rec/conf/aplas/SatoMKT24.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{kokolgiannakis_mixed_size,
author = {Marmanis, Iason and Kokologiannakis, Michalis and Vafeiadis, Viktor},
year = {2025},
month = {01},
pages = {2232-2252},
title = {Model Checking C/C++ with Mixed-Size Accesses},
volume = {9},
journal = {Proceedings of the ACM on Programming Languages},
doi = {10.1145/3704911}
}



@inproceedings{CRUST_TomanPT15,
  author       = {John Toman and
                  Stuart Pernsteiner and
                  Emina Torlak},
  editor       = {Myra B. Cohen and
                  Lars Grunske and
                  Michael Whalen},
  title        = {Crust: {A} Bounded Verifier for Rust {(N)}},
  booktitle    = {30th {IEEE/ACM} International Conference on Automated Software Engineering,
                  {ASE} 2015, Lincoln, NE, USA, November 9-13, 2015},
  pages        = {75--80},
  publisher    = {{IEEE} Computer Society},
  year         = {2015},
  OPTurl          = {https://doi.org/10.1109/ASE.2015.77},
  doi          = {10.1109/ASE.2015.77},
  timestamp    = {Fri, 24 Mar 2023 00:02:37 +0100},
  biburl       = {https://dblp.org/rec/conf/kbse/TomanPT15.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}
@article{QinCLZWSZ24,
  author       = {Boqin Qin and
                  Yilun Chen and
                  Haopeng Liu and
                  Hua Zhang and
                  Qiaoyan Wen and
                  Linhai Song and
                  Yiying Zhang},
  title        = {Understanding and Detecting Real-World Safety Issues in Rust},
  journal      = {{IEEE} Trans. Software Eng.},
  volume       = {50},
  number       = {6},
  pages        = {1306--1324},
  year         = {2024},
  OPTurl          = {https://doi.org/10.1109/TSE.2024.3380393},
  doi          = {10.1109/TSE.2024.3380393},
  timestamp    = {Fri, 20 Sep 2024 15:38:09 +0200},
  biburl       = {https://dblp.org/rec/journals/tse/QinCLZWSZ24.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org},
}


@inproceedings{LiWSL22_FFI_checker,
  author       = {Zhuohua Li and
                  Jincheng Wang and
                  Mingshen Sun and
                  John C. S. Lui},
  editor       = {Vijayalakshmi Atluri and
                  Roberto Di Pietro and
                  Christian Damsgaard Jensen and
                  Weizhi Meng},
  title        = {Detecting Cross-language Memory Management Issues in Rust},
  booktitle    = {Computer Security - {ESORICS} 2022 - 27th European Symposium on Research
                  in Computer Security, Copenhagen, Denmark, September 26-30, 2022,
                  Proceedings, Part {III}},
  series       = {Lecture Notes in Computer Science},
  volume       = {13556},
  pages        = {680--700},
  publisher    = {Springer},
  year         = {2022},
  OPTurl          = {https://doi.org/10.1007/978-3-031-17143-7\_33},
  doi          = {10.1007/978-3-031-17143-7\_33},
  timestamp    = {Tue, 21 Mar 2023 20:58:00 +0100},
  biburl       = {https://dblp.org/rec/conf/esorics/LiWSL22.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org},
}


@inproceedings{Li_2024,
  author       = {Hongyu Li and
                  Liwei Guo and
                  Yexuan Yang and
                  Shangguang Wang and
                  Mengwei Xu},
  editor       = {Saurabh Bagchi and
                  Yiying Zhang},
  title        = {An Empirical Study of Rust-for-Linux: The Success, Dissatisfaction,
                  and Compromise},
  booktitle    = {Proceedings of the 2024 {USENIX} Annual Technical Conference, {USENIX}
                  {ATC} 2024, Santa Clara, CA, USA, July 10-12, 2024},
  pages        = {425--443},
  publisher    = {{USENIX} Association},
  year         = {2024},
  url          = {https://www.usenix.org/conference/atc24/presentation/li-hongyu},
  timestamp    = {Tue, 16 Jul 2024 22:11:07 +0200},
  biburl       = {https://dblp.org/rec/conf/usenix/LiGYWX24.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org},
}

@article{mixed_size_concurrency,
author = {Flur, Shaked and Sarkar, Susmit and Pulte, Christopher and Nienhuis, Kyndylan and Maranget, Luc and Gray, Kathryn E. and Sezgin, Ali and Batty, Mark and Sewell, Peter},
title = {Mixed-size concurrency: ARM, POWER, C/C++11, and SC},
year = {2017},
issue_date = {January 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {1},
issn = {0362-1340},
OPTurl = {https://doi.org/10.1145/3093333.3009839},
doi = {10.1145/3093333.3009839},
abstract = {Previous work on the semantics of relaxed shared-memory concurrency has only considered the case in which each load reads the data of exactly one store. In practice, however, multiprocessors support mixed-size accesses, and these are used by systems software and (to some degree) exposed at the C/C++ language level. A semantic foundation for software, therefore, has to address them.  We investigate the mixed-size behaviour of ARMv8 and IBM POWER architectures and implementations: by experiment, by developing semantic models, by testing the correspondence between these, and by discussion with ARM and IBM staff. This turns out to be surprisingly subtle, and on the way we have to revisit the fundamental concepts of coherence and sequential consistency, which change in this setting. In particular, we show that adding a memory barrier between each instruction does not restore sequential consistency. We go on to extend the C/C++11 model to support non-atomic mixed-size memory accesses.  This is a necessary step towards semantics for real-world shared-memory concurrent code, beyond litmus tests.},
journal = {SIGPLAN Not.},
month = jan,
pages = {429–442},
numpages = {14},
keywords = {semantics, mixed-size, Relaxed Memory Models, ISA},
}

@article{SPORE_2024_Kokologiannakis,
  author       = {Michalis Kokologiannakis and
                  Iason Marmanis and
                  Viktor Vafeiadis},
  title        = {{SPORE:} Combining Symmetry and Partial Order Reduction},
  journal      = {Proc. {ACM} Program. Lang.},
  volume       = {8},
  number       = {{PLDI}},
  pages        = {1781--1803},
  year         = {2024},
  OPTurl          = {https://doi.org/10.1145/3656449},
  doi          = {10.1145/3656449},
  timestamp    = {Fri, 02 Aug 2024 21:41:17 +0200},
  biburl       = {https://dblp.org/rec/journals/pacmpl/KokologiannakisMV24.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}



@article{lock_handling_Kokologiannakis19,
  author       = {Michalis Kokologiannakis and
                  Azalea Raad and
                  Viktor Vafeiadis},
  title        = {Effective lock handling in stateless model checking},
  journal      = {Proc. {ACM} Program. Lang.},
  volume       = {3},
  number       = {{OOPSLA}},
  pages        = {173:1--173:26},
  year         = {2019},
  OPTurl          = {https://doi.org/10.1145/3360599},
  doi          = {10.1145/3360599},
  timestamp    = {Sun, 19 Jan 2025 14:48:00 +0100},
  biburl       = {https://dblp.org/rec/journals/pacmpl/Kokologiannakis19.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{barrier_aware_model_checking_Kokologiannakis21,
  author       = {Michalis Kokologiannakis and
                  Viktor Vafeiadis},
  editor       = {Karima Echihabi and
                  Roland Meyer},
  title        = {{BAM:} Efficient Model Checking for Barriers},
  booktitle    = {Networked Systems - 9th International Conference, {NETYS} 2021, Virtual
                  Event, May 19-21, 2021, Proceedings},
  series       = {Lecture Notes in Computer Science},
  volume       = {12754},
  pages        = {223--239},
  publisher    = {Springer},
  year         = {2021},
  OPTurl          = {https://doi.org/10.1007/978-3-030-91014-3\_16},
  doi          = {10.1007/978-3-030-91014-3\_16},
  timestamp    = {Wed, 15 Dec 2021 10:32:44 +0100},
  biburl       = {https://dblp.org/rec/conf/netys/Kokologiannakis21.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}


@Misc{rustmc,
  OPTkey = 	 {},
  author = 	 {{The Authors}},
  title = 	 {RustMC},
  note = {url: \url{https://github.com/Ollie-Pearce/rustmc}},
}

@Misc{awshuttle,
  OPTkey = 	 {},
  author = 	 {AWS},
  title = 	 {Shuttle, a library for testing concurrent Rust code},
  note = {url: \url{https://github.com/awslabs/shuttle} (Accessed: 2024-1-30)},
}

@Misc{loom,
  OPTkey = 	 {},
  author = 	 {Tokio},
  title = 	 {Loom, Concurrency permutation testing tool for Rust},
  note = {url: \url{https://github.com/tokio-rs/loom} (Accessed: 2024-1-30)},
}

@Misc{miri,
  OPTkey = 	 {},
  author = 	 {{The Rust Team}},
  title = 	 {Miri, An interpreter for Rust's mid-level intermediate representation},
  note = {url: \url{https://github.com/rust-lang/miri} (Accessed: 2024-1-30)},
}
@misc{rustonomicon,
title = {Data Races and Race Conditions},
author = {The Rustonomicon},
note = {url: \url{https://doc.rust-lang.org/nomicon/races.html} (Accessed: 2024-1-30)},
}

@misc{rust_panic_documentation,
name = {To panic! or Not to panic!},
note = {url: \url{https://doc.rust-lang.org/book/ch09-03-to-panic-or-not-to-panic.html} (Accessed: 2024-1-30)},
author = {Steve Klabnik, Carol Nichols},
}

@misc{rust_book_raw_pointers,
title = {Raw Pointers},
note={\url{https://doc.rust-lang.org/book/ch19-01-unsafe-rust.html?highlight=raw%20pointer#dereferencing-a-raw-pointer} (Accessed: 2024-1-31)},
author = {Steve Klabnik, Carol Nichols},
}

@misc{Lockbud,
note = {url: \url{https://github.com/BurtonQin/lockbud} (Accessed: 2024-1-30)},
name = {lockbud
Statically detect memory, concurrency bugs and possible panic locations for Rust.},
author = {Boqin Qin}
}

@misc{LLVM_reference_manual_undefined_values,
OPTkey = 	 {},
title = {Undefined Values},
author = {LLVM},
note = {url: \url{https://llvm.org/docs/LangRef.html#undefined-values} (Accessed: 2024-1-30)},
}

@misc{LLVM_UB_MANUAL,
OPTkey = 	 {},
note = {url: \url{https://llvm.org/docs/UndefinedBehavior.html} (Accessed: 2024-1-30)},
author = {LLVM},
title = {LLVM IR Undefined Behavior (UB) Manual},
}


@misc{LLVM_LOAD_SEMANTICS,
OPTkey = 	 {},
note = {url: \url{https://llvm.org/docs/LangRef.html#load-instruction} (Accessed: 2024-1-30)},
author = {LLVM},
title = {‘load’ Instruction},
}
@misc{llvm_link,
OPTkey = 	 {},
author = {LLVM},
title = {llvm-link - LLVM bitcode linker},
note = {url: \url{https://llvm.org/docs/CommandGuide/llvm-link.html} (Accessed: 2024-1-30)},
}

@misc{ipsccp,
OPTkey = 	 {},
title = {ipsccp: Interprocedural Sparse Conditional Constant Propagation},
author = {LLVM},
note = {url: \url{https://llvm.org/docs/Passes.html#ipsccp-interprocedural-sparse-conditional-constant-propagation} (Accessed 2024-1-30)},
}

@misc{memcpyopt,
OPTkey = {},
title = {memcpyopt: MemCpy Optimization},
author = {LLVM},
note = {url: \url{https://llvm.org/docs/Passes.html#memcpyopt-memcpy-optimization} (Accessed: 2024-1-30)}
}



@misc{git_intern,
  title        = {Issue \#20: Intern<T>: Data race allowed on T},
  author       = {David Roundy and GitHub Contributors},
  year         = {2021},
  note = {url: \url{https://github.com/droundy/internment/issues/20} (Accessed: 2024-1-30)},
}

@misc{rust_reference_interior_mutability,
    title = {Interior Mutability},
    author = {The Rust Reference},
    note={url: \url{https://doc.rust-lang.org/reference/interior-mutability.html} (Accessed: 2024-1-30)}}

@misc{internment_crate,
title = "Internment",
note = {url: \url{https://github.com/droundy/internment} (Accessed: 2024-1-30)},
author = {David Roundy}
}

@misc{rand_crate,
title = "Rand",
note = {url: \url{https://github.com/rust-random/rand} (Accessed: 2024-1-30)},
author = {Diggory Hardy, rust-random maintainers}
}

@misc{rand_fix_commit,
title = "Fix race condition of atomics",
note = {url: \url{https://github.com/rust-random/rand/commit/e0e8263c25dc291f818cd20c034912de5ae05189} (Accessed: 2024-1-30)},
year = {2015},
author = {klutzy}
}



@misc{LLVM_struct_types_for_field_offsets_pr,
title = {rustc\_codegen\_ssa: don't use LLVM struct types for field offsets.},
note ={url: \url{https://github.com/rust-lang/rust/pull/98615} (Accessed: 2024-1-30)},
year = {2022},
author = {Eduard-Mihai Burtescu},
}

@misc{LLVM_struct_types_for_alloca_pr,
title = {Stop using LLVM struct types for alloca},
note={url: \url{https://github.com/rust-lang/rust/pull/122053} (Accessed: 2024-1-30)},
year = {2024},
author = {erikdesjardins}
}

