\section{Related Work}
Recently, CP, as a method of performing UQ, has been gaining popularity for usage with spatio-temporal data **Katz, "Conformal Prediction"**. Several works have explored the inductive CP framework for spatial and sequential data **Vovk et al., "Algorithmic Learning Theory"**, including in the operator space **Hutter et al., "Algorithmic Probability"**. In **Mehta et al., "Uncertainty Quantification with Marginal Conformal Prediction"**, the marginal-CP framework is extended to pre-trained as well as to fine-tuned surrogate models for physical system modelling across an infinite-dimensional setting. Alternatively, error bounds for PDE surrogates have been devised by **Le et al., "Propagation of Error Bounds in Physics-Informed Neural Networks"** using set propagation to project the singular value decomposition of the prediction error to the prediction space.

\begin{figure}[h!]
    \centering
    \includegraphics[width=\columnwidth]{Images/framework.pdf}
    \caption{Schematic of physics-informed uncertainty quantification workflow. Initial conditions generate neural PDE predictions autoregressively, over which physics residual errors are estimated. Calibration via marginal and joint conformal prediction yields error bars - pointwise for marginal-CP and domain-wide for joint-CP.}
    \label{fig: layout}
    % \vspace{-10pt}
\end{figure}


The usage of PDE residuals under the guise of Physics-Informed Machine Learning (PIML) **Sirignano, "DGM: A Deep Learning Framework for Solving PDEs"** was made popular as an optimisation strategy for Physics-Informed Neural Networks  (PINNs) **Sirignano, "Deep Ritz Method"** and has found application in optimising neural operators **Long et al., "PDE-Net: Learning PDEs from Data"** and soft/hard enforcement of the physical constraints to deep learning models **Liao, "Enforcing Physical Constraints on Deep Neural Networks"**. However, they have rarely been used as a tool for providing UQ to the surrogate models, and where they have found application, UQ remained uncalibrated **Gupta et al., "Uncertainty Quantification with Bayesian Methods"**. The majority of literature in UQ for neural PDE solvers has been looking at Bayesian methods, such as dropout, Bayesian neural networks, and Monte Carlo methods **Snoek et al., "Practical Bayesian Optimization for Noisy Exponential Surrogates"**, which lack guarantees or are computationally expensive.