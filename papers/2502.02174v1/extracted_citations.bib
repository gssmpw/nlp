@inproceedings{DeBoer2019,
	title = {{DecidArch} {V2}: {An} {Improved} {Game} to {Teach} {Architecture} {Design} {Decision} {Making}},
	doi = {10.1109/ICSA-C.2019.00034},
	abstract = {We report on the use of our DecidArch game to teach software architecture design decision making in two consecutive years. We compare the support of three learning goals for the first version of the game with the second, revised version. Results show how the game has clearly improved. For the remaining issues. we suggest final improvements.},
	booktitle = {Proceedings - 2019 {IEEE} {International} {Conference} on {Software} {Architecture} - {Companion}, {ICSA}-{C} 2019},
	author = {De Boer, Remco C. and Lago, Patricia and Verdecchia, Roberto and Kruchten, Philippe},
	year = {2019},
	note = {ISBN: 9781728118765
Publisher: IEEE},
	keywords = {★, software architecture, decision-making, game, Cognition, Stakeholders, Games, decision making, Software architecture, Decision making, Databases, Computer architecture},
	pages = {153--157},
	file = {Full Text PDF:C\:\\Users\\admin\\Zotero\\storage\\JLQVVJMF\\de Boer et al. - 2019 - DecidArch V2 An Improved Game to Teach Architecture Design Decision Making.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\admin\\Zotero\\storage\\GCNY3AG2\\8712358.html:text/html;PDF:C\:\\Users\\admin\\Zotero\\storage\\WP3KKCJU\\De Boer et al. - 2019 - DecidArch V2 An Improved Game to Teach Architecture Design Decision Making.pdf:application/pdf},
}

@inproceedings{Ganesh2014,
	title = {Board game as a tool to teach software engineering concept - {Technical} debt},
	doi = {10.1109/T4E.2014.28},
	abstract = {The existing method of teaching software engineering subjects is severely limited by scope, time and exposure to real world settings. As a result of which the significance of Software Development Processes (SDP) is not very well appreciated by students. Technical debt is the debt that the project incurs by missing any process/activity in the SDP. The idea of this paper is to impart the concept of technical debt in a real world setting to students through the board game "Hard Choices". The board game Hard Choices developed by SEI, at Carnegie Mellon University is available under creative commons license. Additionally, this paper evaluates the effectiveness of this board game to communicate the concept of technical debt. During the course of the experiment we observed that students: (i) attached importance to SDP, (ii) understood the consequence of skipping a step in SDP. The above observations stem from the comparison of scores of pre and post test which show that after the conduct of the board game the scores obtained in post-test were significantly higher at 95\% confidence levels (t-test paired two sample for means). Additionally a Likert questionnaire analysis also revealed that the students perceived the instruction methodology of using board games to be lucid and engaging.},
	booktitle = {Proceedings - {IEEE} 6th {International} {Conference} on {Technology} for {Education}, {T4E} 2014},
	author = {Ganesh, Lakshmi},
	year = {2014},
	note = {ISBN: 9781479964895
Publisher: IEEE},
	keywords = {Software Engineering, CommunicationTopic, TDGame, game-based learning, Board Game, Hard Choices, SDP, Educational institutions, Games, TD technical debt, Software, Software engineering, Technical Debt, Computer architecture, Bridges},
	pages = {44--47},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\admin\\Zotero\\storage\\Q9J99ICH\\7009534.html:text/html;PDF:C\:\\Users\\admin\\Zotero\\storage\\7PU5FT5D\\Ganesh - 2014 - Board game as a tool to teach software engineering concept - Technical debt.pdf:application/pdf},
}

@misc{TDGame1,
title = {{Technical Debt Game}},
url = {https://www.tha.de/en/Computer-Science/THA-ias/Technical-Debt-Game.html},
urldate = {2024-11-15}
}

@misc{TDGame2,
title = {{Technical Debt Game -- for non-technical people}},
url = {https://ri-level.de/technical-debt-game/},
urldate = {2024-11-15}
}

@inproceedings{baker_problems_2003,
	title = {Problems and {Programmers}: an educational software engineering card game},
	shorttitle = {Problems and {Programmers}},
	doi = {10.1109/ICSE.2003.1201245},
	abstract = {Problems and Programmers is an educational card game that we have developed to help teach software engineering. It is based on the observation that students, in a typical software engineering course, gain little practical experience in issues regarding the software process. The underlying problem is time: any course faces the practical constraint of only being able to involve students in at most a few small software development projects. Problems and Programmers overcomes this limitation by providing a simulation of the software process. In playing the game, students become aware of not only general lessons, such as the fact that they must continuously make tradeoffs among multiple potential next steps, but also specific issues such as the fact that inspections improve the quality of code but delay its delivery time. We describe game play of Problems and Programmers, discuss its underlying design, and report on the results of a small experiment in which twenty-eight students played the game.},
	urldate = {2024-11-10},
	booktitle = {25th {International} {Conference} on {Software} {Engineering}, 2003. {Proceedings}.},
	author = {Baker, A. and Navarro, E.O. and van der Hoek, A.},
	month = may,
	year = {2003},
	note = {ISSN: 0270-5257},
	keywords = {Computational modeling, Computer science, Computer simulation, Delay effects, Educational programs, Employment, Inspection, Programming profession, Software engineering, Software testing},
	pages = {614--619},
	file = {Full Text PDF:C\:\\Users\\admin\\Zotero\\storage\\TTRRGG6M\\Baker et al. - 2003 - Problems and Programmers an educational software engineering card game.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\admin\\Zotero\\storage\\8CM4Q3ZP\\1201245.html:text/html},
}

@book{bass_software_2021,
	edition = {4},
	title = {Software {Architecture} in {Practice}: {Software} {Architect} {Practice}},
	isbn = {978-0-13-294278-2},
	shorttitle = {Software {Architecture} in {Practice}},
	abstract = {The award-winning and highly influential   Software Architecture in Practice, Third Edition,   has been substantially revised to reflect the latest developments in the field. In a real-world setting, the book once again introduces the concepts and best practices of software architecture—how a software system is structured and how that system’s elements are meant to interact. Distinct from the details of implementation, algorithm, and data representation, an architecture holds the key to achieving system quality, is a reusable asset that can be applied to subsequent systems, and is crucial to a software organization’s business strategy.   The authors have structured this edition around the concept of architecture influence cycles. Each cycle shows how architecture influences, and is influenced by, a particular context in which architecture plays a critical role. Contexts include technical environment, the life cycle of a project, an organization’s business profile, and the architect’s professional practices. The authors also have greatly expanded their treatment of quality attributes, which remain central to their architecture philosophy—with an entire chapter devoted to each attribute—and broadened their treatment of architectural patterns.   If you design, develop, or manage large software systems (or plan to do so), you will find this book to be a valuable resource for getting up to speed on the state of the art.   Totally new material covers    Contexts of software architecture: technical, project, business, and professional   Architecture competence: what this means both for individuals and organizations   The origins of business goals and how this affects architecture   Architecturally significant requirements, and how to determine them   Architecture in the life cycle, including generate-and-test as a design philosophy; architecture conformance during implementation; architecture and testing; and architecture and agile development   Architecture and current technologies, such as the cloud, social networks, and end-user devices},
	language = {en},
	publisher = {Addison-Wesley},
	author = {Bass, Len and Clements, Paul and Kazman, Rick},
	year = {2021},
	keywords = {Computers / Software Development \& Engineering / General},
}

@inproceedings{cervantes_smart_2016,
	address = {New York, NY, USA},
	series = {{ICSE} '16},
	title = {Smart decisions: an architectural design game},
	isbn = {978-1-4503-4205-6},
	shorttitle = {Smart decisions},
	url = {https://dl.acm.org/doi/10.1145/2889160.2889184},
	doi = {10.1145/2889160.2889184},
	abstract = {Architecture design is notoriously difficult to teach and to learn. Most competent architects in industry have deep knowledge won from long years of experience. But if we want architecture design to be methodical and repeatable, we need better methods for teaching it. Simply waiting for an aspiring architect to accumulate 10 or 20 years of experience is not acceptable if we believe that software engineering is a true engineering discipline. In this paper we describe our experiences with the development of a game that aids in teaching architecture design, specifically design employing the Attribute-Driven Design method. We discuss our approach to creating the game, and the "design concepts catalog" that provides the knowledge base for the game. Finally, we report on our experiences with deploying the game, and the (enthusiastic) assessments and feedback that we have received from industrial and academic participants.},
	urldate = {2025-01-30},
	booktitle = {Proceedings of the 38th {International} {Conference} on {Software} {Engineering} {Companion}},
	publisher = {Association for Computing Machinery},
	author = {Cervantes, Humberto and Haziyev, Serge and Hrytsay, Olha and Kazman, Rick},
	month = may,
	year = {2016},
	pages = {327--335},
	file = {Full Text PDF:C\:\\Users\\admin\\Zotero\\storage\\M8LCTLA4\\Cervantes et al. - 2016 - Smart decisions an architectural design game.pdf:application/pdf},
}

@inproceedings{fernandes_playscrum_2010,
	title = {{PlayScrum} - {A} {Card} {Game} to {Learn} the {Scrum} {Agile} {Method}},
	doi = {10.1109/VS-GAMES.2010.24},
	abstract = {To motivate and engage students and, consequently, improve the quality of learning, some researchers suggest new ways of teaching, including the use of serious games in the classroom. This paper describes PlayScrum, a new card game devised to allow university-level students to learn Scrum, an agile software development method. We present the card game, its rules, and how it supports the main concepts of the Scrum method. We also discuss how PlayScrum was validated, based on questionnaires filled in by master students who have played it.},
	urldate = {2024-11-10},
	booktitle = {2010 {Second} {International} {Conference} on {Games} and {Virtual} {Worlds} for {Serious} {Applications}},
	author = {Fernandes, João M. and Sousa, Sónia M.},
	month = mar,
	year = {2010},
	keywords = {Application software, card game, Education, learning, Process design, Programming profession, Project management, Robustness, Scrum, software engineering, Software engineering, Software quality, Software systems, Telecommunications},
	pages = {52--59},
	file = {Full Text PDF:C\:\\Users\\admin\\Zotero\\storage\\S7SAG9JQ\\Fernandes und Sousa - 2010 - PlayScrum - A Card Game to Learn the Scrum Agile Method.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\admin\\Zotero\\storage\\ESK8APMC\\5460150.html:text/html},
}

@inproceedings{heikkila_teaching_2016,
	address = {New York, NY, USA},
	series = {{ICSE} '16},
	title = {Teaching university students {Kanban} with a collaborative board game},
	isbn = {978-1-4503-4205-6},
	doi = {10.1145/2889160.2889201},
	abstract = {Kanban is a workflow management method especially suitable for managing continuous software engineering work. We attempted to teach Kanban and lean thinking in a software project management course in Aalto University with a collaborative Kanban board game. Our goal was to measure if the learning goals of the class were reached and to study the student's perceptions of the game. Data was collected from two subsequent classes in 2014 and 2015. Quantitative data was collected with questionnaires and analysed descriptively and statistically. Qualitative data was collected from 57 learning diaries. The students perceived they had learned substantially from the game. They also evaluated the game very positively. However, the qualitative results and the measured learning indicated that the learning goals were only partially reached. The enjoyable game experience did not fully translate into effective learning.},
	urldate = {2024-11-10},
	booktitle = {Proceedings of the 38th {International} {Conference} on {Software} {Engineering} {Companion}},
	publisher = {Association for Computing Machinery},
	author = {Heikkilä, Ville T. and Paasivaara, Maria and Lassenius, Casper},
	month = may,
	year = {2016},
	pages = {471--480},
	file = {Full Text PDF:C\:\\Users\\admin\\Zotero\\storage\\J7BH6DAZ\\Heikkilä et al. - 2016 - Teaching university students Kanban with a collaborative board game.pdf:application/pdf},
}

