[
  {
    "index": 0,
    "papers": [
      {
        "key": "devlin2017semcode",
        "author": "Jacob Devlin and\nJonathan Uesato and\nRishabh Singh and\nPushmeet Kohli",
        "title": "Semantic Code Repair using Neuro-Symbolic Transformation Networks"
      },
      {
        "key": "bhatia2016synfix",
        "author": "Sahil Bhatia and\nRishabh Singh",
        "title": "Automated Correction for Syntax Errors in Programming Assignments using Recurrent Neural Networks"
      },
      {
        "key": "chen2019sequencer",
        "author": "Zimin Chen and\nSteve Kommrusch and\nMichele Tufano and\nLouis{-}No{\\\"{e}}l Pouchet and\nDenys Poshyvanyk and\nMartin Monperrus",
        "title": "SequenceR: Sequence-to-Sequence Learning for End-to-End Program Repair"
      },
      {
        "key": "feng-etal-2020-codebert",
        "author": "Feng, Zhangyin  and\nGuo, Daya  and\nTang, Duyu  and\nDuan, Nan  and\nFeng, Xiaocheng  and\nGong, Ming  and\nShou, Linjun  and\nQin, Bing  and\nLiu, Ting  and\nJiang, Daxin  and\nZhou, Ming",
        "title": "{C}ode{BERT}: A Pre-Trained Model for Programming and Natural Languages"
      },
      {
        "key": "berabi2021tfix",
        "author": "Berabi, Berkay and He, Jingxuan and Raychev, Veselin and Vechev, Martin",
        "title": "TFix: Learning to Fix Coding Errors with a Text-to-Text Transformer"
      },
      {
        "key": "codit",
        "author": "Chakraborty, Saikat and Ding, Yangruibo and Allamanis, Miltiadis and Ray, Baishakhi",
        "title": "CODIT: Code Editing With Tree-Based Neural Models"
      },
      {
        "key": "circle",
        "author": "Yuan, Wei and Zhang, Quanjun and He, Tieke and Fang, Chunrong and Hung, Nguyen Quoc Viet and Hao, Xiaodong and Yin, Hongzhi",
        "title": "CIRCLE: continual repair across programming languages"
      }
    ]
  },
  {
    "index": 1,
    "papers": [
      {
        "key": "Hu2022nsedit",
        "author": "Unknown",
        "title": "Unknown"
      },
      {
        "key": "cure",
        "author": "Jiang, Nan and Lutellier, Thibaud and Tan, Lin",
        "title": "CURE: Code-Aware Neural Machine Translation for Automatic Program Repair"
      },
      {
        "key": "xia2022alpharepair",
        "author": "Xia, Chunqiu Steven and Zhang, Lingming",
        "title": "Less training, more repairing please: revisiting automated program repair via zero-shot learning"
      },
      {
        "key": "dinella2020hoppity",
        "author": "Elizabeth Dinella and Hanjun Dai and Ziyang Li and Mayur Naik and Le Song and Ke Wang",
        "title": "Hoppity: Learning graph transformations to ddetect and fix bugs in programs"
      }
    ]
  },
  {
    "index": 2,
    "papers": [
      {
        "key": "yasunaga2021pmlr",
        "author": "Yasunaga, Michihiro and Liang, Percy",
        "title": "Break-It-Fix-It: Unsupervised Learning for Program Repair"
      }
    ]
  },
  {
    "index": 3,
    "papers": [
      {
        "key": "chen2021evaluating",
        "author": "Chen, Mark and Tworek, Jerry and Jun, Heewoo and Yuan, Qiming and Pinto, Henrique Ponde de Oliveira and Kaplan, Jared and Edwards, Harri and Burda, Yuri and Joseph, Nicholas and Brockman, Greg and others",
        "title": "Evaluating Large Language Models Trained on Code"
      },
      {
        "key": "nijkamp2023codegen",
        "author": "Nijkamp, Erik and Pang, Bo and Hayashi, Hiroaki and Tu, Lifu and Wang, Huan and Zhou, Yingbo and Savarese, Silvio and Xiong, Caiming",
        "title": "CodeGen: An Open Large Language Model for Code with Multi-Turn Program Synthesis"
      },
      {
        "key": "chowdhery2024palmcoder",
        "author": "Chowdhery, Aakanksha and Narang, Sharan and Devlin, Jacob and Bosma, Maarten and Mishra, Gaurav and Roberts, Adam and Barham, Paul and Chung, Hyung Won and Sutton, Charles and Gehrmann, Sebastian and Schuh, Parker and Shi, Kensen and Tsvyashchenko, Sashank and Maynez, Joshua and Rao, Abhishek and Barnes, Parker and Tay, Yi and Shazeer, Noam and Prabhakaran, Vinodkumar and Reif, Emily and Du, Nan and Hutchinson, Ben and Pope, Reiner and Bradbury, James and Austin, Jacob and Isard, Michael and Gur-Ari, Guy and Yin, Pengcheng and Duke, Toju and Levskaya, Anselm and Ghemawat, Sanjay and Dev, Sunipa and Michalewski, Henryk and Garcia, Xavier and Misra, Vedant and Robinson, Kevin and Fedus, Liam and Zhou, Denny and Ippolito, Daphne and Luan, David and Lim, Hyeontaek and Zoph, Barret and Spiridonov, Alexander and Sepassi, Ryan and Dohan, David and Agrawal, Shivani and Omernick, Mark and Dai, Andrew M. and Pillai, Thanumalayan Sankaranarayana and Pellat, Marie and Lewkowycz, Aitor and Moreira, Erica and Child, Rewon and Polozov, Oleksandr and Lee, Katherine and Zhou, Zongwei and Wang, Xuezhi and Saeta, Brennan and Diaz, Mark and Firat, Orhan and Catasta, Michele and Wei, Jason and Meier-Hellstern, Kathy and Eck, Douglas and Dean, Jeff and Petrov, Slav and Fiedel, Noah",
        "title": "PaLM: scaling language modeling with pathways"
      },
      {
        "key": "li2022alphacode",
        "author": "Li, Yujia and Choi, David and Chung, Junyoung and Kushman, Nate and Schrittwieser, Julian and Leblond, R\u00e9mi and Eccles, Tom and Keeling, James and Gimeno, Felix and Dal Lago, Agustin and Hubert, Thomas and Choy, Peter and de Masson d\u2019Autume, Cyprien and Babuschkin, Igor and Chen, Xinyun and Huang, Po-Sen and Welbl, Johannes and Gowal, Sven and Cherepanov, Alexey and Molloy, James and Mankowitz, Daniel J. and Sutherland Robson, Esme and Kohli, Pushmeet and de Freitas, Nando and Kavukcuoglu, Koray and Vinyals, Oriol",
        "title": "Competition-level code generation with AlphaCode"
      },
      {
        "key": "fried2023incoder",
        "author": "Fried, Daniel and Aghajanyan, Armen and Lin, Jessy and Wang, Sida and Wallace, Eric and Shi, Freda and Zhong, Ruiqi and Yih, Wen-tau and Zettlemoyer, Luke and Lewis, Mike",
        "title": "InCoder: A generative model for code infilling and synthesis"
      },
      {
        "key": "li2023starcoder",
        "author": "Raymond Li and Loubna Ben Allal and Yangtian Zi and Niklas Muennighoff and Denis Kocetkov and Chenghao Mou and Marc Marone and Christopher Akiki and Jia Li and Jenny Chim and Qian Liu and Evgenii Zheltonozhskii and Terry Yue Zhuo and Thomas Wang and Olivier Dehaene and Mishig Davaadorj and Joel Lamy-Poirier and Jo\u00e3o Monteiro and Oleh Shliazhko and Nicolas Gontier and Nicholas Meade and Armel Zebaze and Ming-Ho Yee and Logesh Kumar Umapathi and Jian Zhu and Benjamin Lipkin and Muhtasham Oblokulov and Zhiruo Wang and Rudra Murthy and Jason Stillerman and Siva Sankalp Patel and Dmitry Abulkhanov and Marco Zocca and Manan Dey and Zhihan Zhang and Nour Fahmy and Urvashi Bhattacharyya and Wenhao Yu and Swayam Singh and Sasha Luccioni and Paulo Villegas and Maxim Kunakov and Fedor Zhdanov and Manuel Romero and Tony Lee and Nadav Timor and Jennifer Ding and Claire Schlesinger and Hailey Schoelkopf and Jan Ebert and Tri Dao and Mayank Mishra and Alex Gu and Jennifer Robinson and Carolyn Jane Anderson and Brendan Dolan-Gavitt and Danish Contractor and Siva Reddy and Daniel Fried and Dzmitry Bahdanau and Yacine Jernite and Carlos Mu\u00f1oz Ferrandis and Sean Hughes and Thomas Wolf and Arjun Guha and Leandro von Werra and Harm de Vries",
        "title": "StarCoder: may the source be with you!"
      }
    ]
  },
  {
    "index": 4,
    "papers": [
      {
        "key": "olausson2024self",
        "author": "Olausson, Theo X. and Inala, Jeevana Priya and Wang, Chenglong and Gao, Jianfeng and Solar-Lezama, Armando",
        "title": "Is Self-Repair a Silver Bullet for Code Generation?"
      },
      {
        "key": "chen2023teaching",
        "author": "Chen, Xinyun and Lin, Maxwell and Sch{\\\"a}rli, Nathanael and Zhou, Denny",
        "title": "Teaching Large Language Models to Self-Debug"
      }
    ]
  },
  {
    "index": 5,
    "papers": [
      {
        "key": "zhao2024repair",
        "author": "Zhao, Yuze  and\nHuang, Zhenya  and\nMa, Yixiao  and\nLi, Rui  and\nZhang, Kai  and\nJiang, Hao  and\nLiu, Qi  and\nZhu, Linbo  and\nSu, Yu",
        "title": "{R}e{P}air: Automated Program Repair with Process-based Feedback"
      }
    ]
  },
  {
    "index": 6,
    "papers": [
      {
        "key": "shypula2024codeedits",
        "author": "Alexander Shypula and Aman Madaan and Yimeng Zeng and Uri Alon and Jacob Gardner and Milad Hashemi and Graham Neubig and Parthasarathy Ranganathan and Osbert Bastani and Amir Yazdanbakhsh",
        "title": "Learning Performance-Improving Code Edits"
      }
    ]
  },
  {
    "index": 7,
    "papers": [
      {
        "key": "brown2020icl",
        "author": "Tom B. Brown and\nBenjamin Mann and\nNick Ryder and\nMelanie Subbiah and\nJared Kaplan and\nPrafulla Dhariwal and\nArvind Neelakantan and\nPranav Shyam and\nGirish Sastry and\nAmanda Askell and\nSandhini Agarwal and\nAriel Herbert{-}Voss and\nGretchen Krueger and\nTom Henighan and\nRewon Child and\nAditya Ramesh and\nDaniel M. Ziegler and\nJeffrey Wu and\nClemens Winter and\nChristopher Hesse and\nMark Chen and\nEric Sigler and\nMateusz Litwin and\nScott Gray and\nBenjamin Chess and\nJack Clark and\nChristopher Berner and\nSam McCandlish and\nAlec Radford and\nIlya Sutskever and\nDario Amodei",
        "title": "Language Models are Few-Shot Learners"
      }
    ]
  },
  {
    "index": 8,
    "papers": [
      {
        "key": "oswald2022iclgrad",
        "author": "Von Oswald, Johannes and Niklasson, Eyvind and Randazzo, Ettore and Sacramento, Jo\\~{a}o and Mordvintsev, Alexander and Zhmoginov, Andrey and Vladymyrov, Max",
        "title": "Transformers learn in-context by gradient descent"
      },
      {
        "key": "akyurek2023ICLlinear",
        "author": "Ekin Aky{\\\"u}rek and Dale Schuurmans and Jacob Andreas and Tengyu Ma and Denny Zhou",
        "title": "What learning algorithm is in-context learning? Investigations with linear models"
      }
    ]
  },
  {
    "index": 9,
    "papers": [
      {
        "key": "le2022coderl",
        "author": "Le, Hung and Wang, Yue and Gotmare, Akhilesh Deepak and Savarese, Silvio and Hoi, Steven Chu Hong",
        "title": "CodeRL: Mastering Code Generation through Pretrained Models and Deep Reinforcement Learning"
      }
    ]
  },
  {
    "index": 10,
    "papers": [
      {
        "key": "Gou2024critic",
        "author": "Unknown",
        "title": "Unknown"
      }
    ]
  },
  {
    "index": 11,
    "papers": [
      {
        "key": "wang2024intervenor",
        "author": "Wang, Hanbin and Liu, Zhenghao and Wang, Shuo and Cui, Ganqu and Ding, Ning and Liu, Zhiyuan and Yu, Ge",
        "title": "INTERVENOR: Prompt the Coding Ability of Large Language Models with the Interactive Chain of Repairing."
      }
    ]
  },
  {
    "index": 12,
    "papers": [
      {
        "key": "xin2024thinkrepair",
        "author": "Yin, Xin and Ni, Chao and Wang, Shaohua and Li, Zhenhao and Zeng, Limin and Yang, Xiaohu",
        "title": "ThinkRepair: Self-Directed Automated Program Repair"
      }
    ]
  },
  {
    "index": 13,
    "papers": [
      {
        "key": "agarwal2024manyshot",
        "author": "Rishabh Agarwal and Avi Singh and Lei M. Zhang and Bernd Bohnet and Luis Rosias and Stephanie Chan and Biao Zhang and Ankesh Anand and Zaheer Abbas and Azade Nova and John D. Co-Reyes and Eric Chu and Feryal Behbahani and Aleksandra Faust and Hugo Larochelle",
        "title": "Many-Shot In-Context Learning"
      }
    ]
  },
  {
    "index": 14,
    "papers": [
      {
        "key": "olausson2024self",
        "author": "Olausson, Theo X. and Inala, Jeevana Priya and Wang, Chenglong and Gao, Jianfeng and Solar-Lezama, Armando",
        "title": "Is Self-Repair a Silver Bullet for Code Generation?"
      }
    ]
  },
  {
    "index": 15,
    "papers": [
      {
        "key": "welleck2023selfcorrect",
        "author": "Sean Welleck and Ximing Lu and Peter West and Faeze Brahman and Tianxiao Shen and Daniel Khashabi and Yejin Choi",
        "title": "Generating Sequences by Learning to Self-Correct"
      }
    ]
  },
  {
    "index": 16,
    "papers": [
      {
        "key": "yuan2017arja",
        "author": "Yuan Yuan and W. Banzhaf",
        "title": "ARJA: Automated Repair of Java Programs via Multi-Objective Genetic Programming"
      }
    ]
  },
  {
    "index": 17,
    "papers": [
      {
        "key": "paredes2023funsearch",
        "author": "Bernardino Romera-Paredes and Mohammadamin Barekatain and Alexander Novikov and Matej Balog and M Pawan Kumar and Emilien Dupont and Francisco J. R. Ruiz and Jordan S. Ellenberg and Pengming Wang and Omar Fawzi and Pushmeet Kohli and Alhussein Fawzi and Josh Grochow and Andrea Lodi and Jean-Baptiste Mouret and Talia Ringer and Tao Yu",
        "title": "Mathematical discoveries from program search with large language models"
      }
    ]
  },
  {
    "index": 18,
    "papers": [
      {
        "key": "shirafuji2023fewshot",
        "author": "Shirafuji, Atsushi and Oda, Yusuke and Suzuki, Jun and Morishita, Makoto and Watanobe, Yutaka",
        "title": "Refactoring Programs Using Large Language Models with Few-Shot Examples"
      }
    ]
  }
]