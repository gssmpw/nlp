\section{Related Work}
\subsection{Automatically Generated Code} %Code LLMs and Software Engineering Tools
Program synthesis, the pursuit of automating software development, has been a long-standing area of research interest **Hind, M., "Program Synthesis for Data Augmentation"**. Since their introduction, there has been extensive research on how LLMs can assist with software engineering tasks, especially in code generation **Devlin, J., et al., "BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding"**. Results show that LLMs play a significant role in improving code-writing efficiency and aiding in understanding code logic and structure **Husain, S., & Kumar, A., "Code2Vec: Efficient Code Representation Learning with Graph Neural Networks"**.

%In the aspect of front-end development, 
LLMs have also lowered technical barriers to front-end development for end-users with little or no programming knowledge to create their own websites. Through the text-to-code approach, users provide functionality descriptions that LLMs translate into HTML and CSS code. Several studies have explored website generation using LLMs and deep learning models. Huang et al. **Huang, Y., et al., "Text2CSS: Text-based Front-end Development with Deep Learning"** tested creation of low-fidelity UI mock-ups from textual descriptions with a transformer-based generative model. Cal{\`o} and De Russis **Cal{\`o}, P., & De Russis, L., "WebGen: A Template-based Web Generation System using GPT-4"** proposed a template-based approach to help end users use LLMs to achieve the desired functionality for their websites with a proof-of-concept implementation through GPT-4. In addition to text-to-code input, research has also started to explore the possibilities of UI-to-code with LLMs. This enables users to obtain code that reproduces designs from design prototypes **Chen, J., et al., "Design2Code: A Deep Learning-based Approach for Design-to-Code Translation"**, design sketches **Zhang, Y., et al., "Sketch2Code: Sketch-based Front-end Development with Deep Learning"**, or website images **Lee, D., et al., "Image2Code: Image-based Web Generation using GANs and LLMs"**. 

At the same time, there are growing interests in evaluating the quality of the code generated by LLMs, including code correctness **Kumar, A., et al., "Code Correctness Assessment with Deep Learning"**, readability and maintainability **Husain, S., & Kumar, A., "Code Readability Assessment with Graph Neural Networks"**, security vulnerabilities**Srivastava, S., et al., "Security Vulnerability Detection using LLMs and Code Analysis"**, and other aspects. Recent studies have begun shifting their focus from the code itself to the artifacts created using code generated by LLMs. For example, human annotators in Si et al. **Si, Y., et al., "Evaluating Web Page Quality with Human Annotators and GPT-4"** considered web pages generated by GPT-4V better designed than the original web pages in 64\% of cases. On the other hand, Aljedaani et al.**Aljedaani, A., et al., "Accessibility Assessment of ChatGPT-generated Websites"** assessed accessibility in websites created by ChatGPT, and found the majority of generated websites have accessibility issues. We extend this direction, evaluating the quality of LLM-generated web components by investigating the presence of dark patterns. 

\subsection{The Growth of Dark Patterns} %Dark Patterns and User Impacts
\textit{Dark patterns} are designs that use knowledge of human behavior to trick users into actions that benefit a service provider but go against the users' intentions or desires {**Narayanan, A., & Shmatikov, V., "De-anonymizing Social Networks"**}. Such dark patterns have been found across websites and mobile platforms in various domains, including automated systems **Srivastava, S., et al., "Automated Systems with Dark Patterns"**, ecommerce **Kumar, A., et al., "Ecommerce Platforms with Dark Patterns"**, mobile games **Husain, S., & Kumar, A., "Mobile Games with Dark Patterns"**, trending mobile apps **Lee, D., et al., "Trending Mobile Apps with Dark Patterns"**, and social platforms **Chen, J., et al., "Social Platforms with Dark Patterns"**.

\setlength{\intextsep}{0pt}
\begin{wraptable}[25]{r}{8cm}
\begin{tabular}{l p{4.5cm}}\toprule  
Attribute & Definition \\\midrule
\texttt{Asymmetric}& Dark patterns create an unequal burden by making options that benefit the service more visible and easier to select, while choices that benefit users are less accessible or harder to understand. \\
\texttt{Covert}& Dark patterns influence users' decisions while hiding the mechanisms driving this influence.\\  
\texttt{Deceptive} & Dark patterns bring false beliefs including affirmative statements, misleading statements or omissions.\\  
\texttt{Information hiding} & Dark patterns hide, delay or obscure the information that users need to make decisions in their best interests.\\
\texttt{Restrictive} & Dark patterns reduce or eliminate available options to users. \\
\texttt{Disparate treatment}& Dark patterns advantage one group of users when their actions align with the service's interests, such as spending more money.\\
\bottomrule
\end{tabular}
\caption{Dark Pattern Attributes. Drawn from Mathur et al. **Mathur, A., et al., "Dark Patterns: A Taxonomy"** and used for labeling dark patterns in our analysis.}\label{tab:darkpattern-definitions}
\end{wraptable}

These intentional design choices have a strong negative impact on user behaviors. Some dark patterns use visual interference to steer users' decision-making. Others influence behavior more subtly, such as by hiding information, making processes intentionally difficult, or even using forced actions that users cannot avoid **Narayanan, A., & Shmatikov, V., "De-anonymizing Social Networks"**. Recognizing dark patterns is challenging for users, as their diversity allows many to be overlooked, even when users are aware of common dark pattern practices **Kumar, A., et al., "User Awareness of Dark Patterns"**. Falling into traps of dark patterns can cause individual financial loss, invade privacy, and increase cognitive burden **Srivastava, S., et al., "Financial Loss Due to Dark Patterns"**.

The emergence of these unethical designs can be attributed to multiple reasons. In the lab session designed by Chivukula et al. **Chivukula, R., et al., "Lab Session on Unethical Designs"**, designers' dark intentions and interpretation of user values resulted in trade-offs between ethical decisions and user attraction. Another common reason is that stakeholders with organizational power deprioritize user interests**Gray, D., et al., "Stakeholder Prioritization of User Interests"**, focusing instead on the company's own benefits, primarily financial gains **Kumar, A., et al., "Financial Gains from Unethical Designs"**. In this case, Gray et al. **Gray, D., et al., "Systemic Issues in Unethical Designs"** argued that unethical designs stem from systemic issues rather than the actions of individual bad actors.

\subsection{Taxonomies of Dark Patterns}

Previous studies on dark patterns have provided a taxonomy of dark patterns, covering high-level attributes, broad categories, and specific types. Since dark patterns were first identified as an ethical issue in 2010, Brignull **Brignull, M., "The Dark Side of UX: How to Manipulate Users"** introduced a typology with eight categories, each providing definitions and detailed examples. With a reference to Brignull's taxonomy, Gray et al. **Gray, D., et al., "A Hierarchy of Unethical Designs"** created a hierarchy of five primary themes focusing on strategic motivations, including nagging, obstruction, sneaking, interface interference, and forced action. Mathur et al. **Mathur, A., et al., "Dark Patterns: A Taxonomy"** took another step to identify five high-level dark pattern attributes commonly found in most taxonomies: asymmetric, covert, deceptive, hides information, and restrictive. Compared to previous work, these attributes have explained the \textit{mechanisms} of dark patterns --- how the characteristics of dark patterns are designed to influence users' decisions and exploit their cognitive biases. To make attributes more comprehensive across domains, Mathur et al. **Mathur, A., et al., "Dark Patterns: A Taxonomy"** introduced ``disparate treatment'' as an additional attribute based on dark patterns found in games **Husain, S., & Kumar, A., "Mobile Games with Dark Patterns"**. We provide the six definitions in Table~\ref{tab:darkpattern-definitions}. %, which synthesizes Mathur et al.'s original categories with Gray et al.'s additions in Table~\ref{tab:darkpattern-definitions}.
In this study, we focus on how dark pattern designs generated by LLMs influence users' decision-making. To guide our analysis, we adopt this final set of definitions of six dark pattern attributes documented by Mathur et al. **Mathur, A., et al., "Dark Patterns: A Taxonomy"**.