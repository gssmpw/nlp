\section{Related Works}
\label{sec:formatting}
%-------------------------------------------------------------------------
\subsection{Billet Number Recognition }

Current research on billet number recognition can be broadly divided into two categories: traditional image processing methods and deep learning-based approaches.

In traditional image processing methods, Zhang et al. **Zhang, "A Billet Number Recognition System"** designed a billet number recognition system by investigating the image characteristics of billet numbers. They proposed a binarization algorithm that combined the Otsu method and Niblack thresholding to mitigate the effects of lighting on billet number recognition. The connected domain method was employed for image segmentation, followed by neural network-based character recognition. While this binarization method effectively reduces the impact of uneven lighting, it fails to completely separate the background from the foreground and struggles to handle connected characters. Zhou et al. **Zhou, "An Improved Template Matching Algorithm"** proposed an improved template matching algorithm for billet character recognition. Although template matching—a traditional character recognition method—performs well when characters are intact and exhibit no significant deformation, its accuracy declines significantly in the presence of such disturbances. To address issues like connected characters, Dong et al. **Dong, "A Multi-Level Projection Segmentation Algorithm"** introduced a multi-level projection segmentation algorithm and employed a recursive segmentation approach to locate billet number regions. However, this method demands precise imaging performance, requiring the target to remain in a specific position within the image. Wu et al. **Wu, "An Automatic Billet Number Recognition Algorithm"**  developed an automatic billet number recognition algorithm based on support vector machines to meet the automation requirements of steel mills. While this method achieves high classification accuracy, its performance heavily relies on the selection of character features. 

With the advancements in deep learning, OCR technology has matured and become an active research topic in areas such as license plate recognition, image retrieval **Koo et al., "Convolutional Neural Network for Steel Plate Identification Numbers"**, and industrial automation. Koo et al. **Koo et al., "Deep Learning-based Billet Number Recognition"** trained convolutional neural network (CNN) models to directly detect or recognize steel plate identification numbers. Zhao et al. **Zhao, "Recognition Classification Model for Billet Numbers"** developed a recognition classification model based on character encoding rules and recognition confidence, categorizing the results into correct, suspicious, and erroneous classes. Suspicious and erroneous results were manually verified. Although this method improved accuracy, it did not fully automate the process. Sun et al. **Sun, "Handwritten Billet Number Recognition Network"** built a handwritten billet number recognition network using YOLO.\  Building on this, Wang et al. **Wang, "Method Combining YOLOv5 with ESRGAN"** proposed a method combining YOLOv5 with ESRGAN, reconstructing low-resolution input images into high-resolution output images for subsequent recognition. Ge et al. **Ge, "Linear Dot-Matrix Character Recognition Method"** used a line-scan camera to continuously capture steel plate images and proposed a linear dot-matrix character recognition method for plate surfaces, achieving recognition of high-frequency dot-matrix characters on steel plates. Xu et al. **Xu, "Recognition Network based on Flow Alignment and Attention Mechanisms"** introduced a recognition network based on flow alignment and attention mechanisms, incorporating a hybrid dilation convolution block to expand the receptive field. This enhanced the network's ability to effectively capture scale features. Additionally, they constructed flow features and distortion maps to enable upsampling, addressing information loss during feature fusion.

Although these methods achieved promising results, they primarily focused on improving the accuracy of character image recognition, without addressing performance degradation caused by factors such as the complex environments in steel mills, online recognition of moving billets, and varying billet image distributions.

 



%-------------------------------------------------------------------------
\subsection{Test-Time Adaptation}

Our work involves test-time adaptation (TTA) or test-time training (TTT) to enhance the generalizability of models.

Test-time training (TTT) adapts models during the testing phase by introducing a self-supervised auxiliary task. For example, Wang et al. **Wang, "Self-Consistency for Test-Time Training"** proposed self-consistency, while Sun et al. **Sun, "Rotation Prediction as Auxiliary Tasks"** introduced rotation prediction as auxiliary tasks. The choice of auxiliary tasks significantly impacts the model's adaptability, and they must be trained in the same way during the model’s training phase.

On the other hand, test-time adaptation (TTA) aims to adapt models during the testing phase without requiring access to training data or modifications to the training process. For instance, DUA **DUA**, utilizes a small portion of test data and its augmentations to adapt BatchNorm statistics. TENT **TENT** employs entropy minimization to fine-tune the BatchNorm layers during testing. Niu et al. proposed SAR **Niu et al., "SAR: Self-Adaptive Regularization"**, which excludes high-gradient samples to promote weight flattening. Lee et al. developed PL **Lee, "PL: Pseudo-Labeling"**, which uses reliable pseudo-labels to fine-tune parameters. SHOT **SHOT** combines entropy minimization with pseudo-labeling techniques.


%------------------------------------------------------------------------