\section{Related Work}
\label{sec:relatedwork}
A number of approaches were proposed for detecting BGP hijacks.
Karlin et al. **Karlin, "Pretty Good BGP (PGBGP)"**, introduced Pretty Good BGP (PGBGP), which uses a window of historical BGP updates to quarantine suspicious announcements and delay their adoption. However, this approach can incur significant resource overhead due to the need to manage large volumes of historical data. Additionally, the quarantine mechanism can delay the acceptance of legitimate announcements with benign conflicts.
Schlamp et al. **Schlamp, "Inferred Legitimate Business Relationships Between Hijacking and Victim ASes Using IRR Databases"**, inferred legitimate business relationships between the hijacking and victim ASes using IRR databases, but encountered potential challenges due to the possibility of outdated or conflicting information within the databases. Tools such as iSPY **iSPY** and Argus **Argus**, detect prefix hijacks by relying on the concept that polluted ASes fail to reach the victim's network. However, they require real-time probing by the deploying network, which may impose non-negligible computational or communication overhead.
Other studies, such as **"Path Manipulation in BGP: A Survey and a New Approach for Validation"**, rely on features like AS path length, the number of BGP updates, the longevity of prefix advertisements, and hijack duration. However, AS path length can vary during BGP propagation, and features related to the number, longevity, or duration of BGP announcements may affect the identification of hijacks in their early stages. Consequently, these features may not be suitable for prompt detection.

As a de facto measure to prevent BGP hijacking, the deployment of RPKI started in 2009, and in 2010, Randy Bush had a series of presentations to promote the new standard candidates **Bush**. At that point, there was just a test-hosted RPKI system by RIPE, with no practical implementation of delegated certificate authorities and publication points. In 2011, the production-ready hosted RPKI by RIPE was established, and Deutsche Telekom created ROAs for their prefixes, which de-facto jump-started the RPKI in RIPE region **Bush**. Many networks quickly created ROAs for their prefixes, and as of February 2023, there were 140K ROAs, covering approximately 39.3\% of IPv4 prefixes announced in the default-free zone (DFZ)\footnote{The DFZ has a full global BGP routing table.}, with about 8\% being invalid due to errors in ROAs. In contrast to ROAs, the enforcement of ROV progresses much slower. The most recent measurement **"BGPSEC: A Framework for Authentication and Authorization of BGP Routes"** shows that only 27\% of the ASes enforce ROV filtering. The main factor hindering the adoption of ROV is the fear of losing traffic due to erroneous ROAs **". A Study on the Effectiveness of RPKI-Based Route Origin Validation in Preventing Prefix Hijacks"**. Also, a follow-up study **"The Impact of Erroneous ROAs on BGPsec-based Route Origin Validation"** shows that the number of invalid ROAs does not decrease with time but remains between 8\% and 10\%.

Previous studies identified vulnerabilities, errors and misconfigurations in RPKI **"Identifying and Mitigating Vulnerabilities in RPKI-based Route Origin Validation"**. A recent proposal showed how to utilize Byzantine consensus to enhance the resilience of RPKI against vulnerabilities and errors **"A Byzantine-Resilient Approach for Secure Routing in BGP"**.

\ignore{
Efforts to encourage broader adoption of RPKI have focused on addressing ROA misconfiguration issues. DISCO **Karlin, "Automating ROA Publishing with DISCO"**, automates ROA publishing.
It can only prevent human errors in ROA issuance but not handle benign conflicts resulting from complex routing policies such as traffic engineering or MOAS.
SROV **Teletar, "Using a Heuristic Approach for Route Origin Validation"**, uses a heuristic approach based on route duration to analyze errors in ROAs. However, this approach may cause BGP convergence delays, such as monitoring new BGP announcements for several weeks, and could potentially weaken ROV's ability to prevent hijacks due to high false negative rates.
}
%Unlike **Karlin, "Automating ROA Publishing with DISCO"**, our method uses ML technologies and features representing the relationship between conflicting origins, enabling the accurate identification of benign conflicts while maintaining the effectiveness of ROV in preventing hijacks.



 %Our research focuses on distinguishing invalid routes resulting from benign errors in ROAs from those caused by malicious activities. We propose a new approach that combines machine learning with RPKI-based route origin validation to improve the security and reliability of BGP routing.
%ASIRIA: this method relies on the information in IRR to detect route leaks. However, the internet routing policies are generally complex and dynamic. Once network operators do not instantly or regularly update the IRR information, this will result in misidentification, causing legitimate traffic to be dropped.
 %The work **Lutu, "Detecting Route Leaks with BGP Visibility Scanner"**: this method relies on an intuitive assumption that route leaks may cause routing loops in the BGP path . They identify route leaks by detecting routing loops. However, this method is prone to false positives. For example, routing loops may also be caused by traffic engineering. Our evaluation results show that such benign routing loops are very common in reality.
 %The study **Teletar, "A Theoretical Framework for Detecting Route Leaks"**: this work proposes a theoretical framework consisting of three techniques, which are based on either control-plane or data-plane, for detecting route leaks. However, this work exclusively show the effectiveness in the simulations. The practicality in the real-world remains unknown.Â 
 %Peerlock/Peerlock-lite **"Implementation and Evaluation of Peerlock for Route Leak Prevention"**, relies on Peerlock rules configured between the protector AS and the protected AS. It requires that the protector AS filters BGP updates from an unauthorized propagators or routes whose AS path contains a Tier-1 AS. However, the lack of an automated and secure configuration protocol makes it vulnerable to misconfiguration of Peerlock rules.
}