# Software Verification
@article{yang2024autoverus,
  title={Autoverus: Automated proof generation for rust code},
  author={Yang, Chenyuan and Li, Xuheng and Misu, Md Rakib Hossain and Yao, Jianan and Cui, Weidong and Gong, Yeyun and Hawblitzel, Chris and Lahiri, Shuvendu and Lorch, Jacob R and Lu, Shuai and others},
  journal={arXiv preprint arXiv:2409.13082},
  year={2024}
}

@article{aggarwal2024alphaverus,
  title={AlphaVerus: Bootstrapping formally verified code generation through self-improving translation and treefinement},
  author={Aggarwal, Pranjal and Parno, Bryan and Welleck, Sean},
  journal={arXiv preprint arXiv:2412.06176},
  year={2024}
}

@article{lattuada2023verus,
  title={Verus: Verifying rust programs using linear ghost types},
  author={Lattuada, Andrea and Hance, Travis and Cho, Chanhee and Brun, Matthias and Subasinghe, Isitha and Zhou, Yi and Howell, Jon and Parno, Bryan and Hawblitzel, Chris},
  journal={Proceedings of the ACM on Programming Languages},
  volume={7},
  number={OOPSLA1},
  pages={286--315},
  year={2023},
  publisher={ACM New York, NY, USA}
}

@inproceedings{lattuada2024verusExp,
  title={Verus: A practical foundation for systems verification},
  author={Lattuada, Andrea and Hance, Travis and Bosamiya, Jay and Brun, Matthias and Cho, Chanhee and LeBlanc, Hayley and Srinivasan, Pranav and Achermann, Reto and Chajed, Tej and Hawblitzel, Chris and others},
  booktitle={Proceedings of the ACM SIGOPS 30th Symposium on Operating Systems Principles},
  pages={438--454},
  year={2024}
}

@inproceedings{zhou2024verismo,
  title={$\{$VeriSMo$\}$: A verified security module for confidential $\{$VMs$\}$},
  author={Zhou, Ziqiao and Chen, Weiteng and Gong, Sishuai and Hawblitzel, Chris and Cui, Weidong and others},
  booktitle={18th USENIX Symposium on Operating Systems Design and Implementation (OSDI 24)},
  pages={599--614},
  year={2024}
}


@inproceedings{sun2024anvil,
  title={Anvil: Verifying liveness of cluster management controllers},
  author={Sun, Xudong and Ma, Wenjie and Gu, Jiawei Tyler and Ma, Zicheng and Chajed, Tej and Howell, Jon and Lattuada, Andrea and Padon, Oded and Suresh, Lalith and Szekeres, Adriana and others},
  booktitle={18th USENIX Symposium on Operating Systems Design and Implementation (OSDI 24)},
  pages={649--666},
  year={2024}
}


@article{klein2014sel4,
  title={Comprehensive formal verification of an OS microkernel},
  author={Klein, Gerwin and Andronick, June and Elphinstone, Kevin and Murray, Toby and Sewell, Thomas and Kolanski, Rafal and Heiser, Gernot},
  journal={ACM Transactions on Computer Systems (TOCS)},
  volume={32},
  number={1},
  pages={1--70},
  year={2014},
  publisher={ACM New York, NY, USA}
}


@inproceedings{sun2024clover,
  title={Clover: Clo sed-Loop Ver ifiable Code Generation},
  author={Sun, Chuyue and Sheng, Ying and Padon, Oded and Barrett, Clark},
  booktitle={International Symposium on AI Verification},
  pages={134--155},
  year={2024},
  organization={Springer}
}



@article{misu2024MbppDfy,
  title={Towards ai-assisted synthesis of verified dafny methods},
  author={Misu, Md Rakib Hossain and Lopes, Cristina V and Ma, Iris and Noble, James},
  journal={Proceedings of the ACM on Software Engineering},
  volume={1},
  number={FSE},
  pages={812--835},
  year={2024},
  publisher={ACM New York, NY, USA}
}


@article{loughridge2024dafnyBench,
  title={DafnyBench: A Benchmark for Formal Software Verification},
  author={Loughridge, Chloe and Sun, Qinyi and Ahrenbach, Seth and Cassano, Federico and Sun, Chuyue and Sheng, Ying and Mudide, Anish and Misu, Md Rakib Hossain and Amin, Nada and Tegmark, Max},
  journal={arXiv preprint arXiv:2406.08467},
  year={2024}
}


@article{zhang2024selene,
  title={Selene: Pioneering Automated Proof in Software Verification},
  author={Zhang, Lichen and Lu, Shuai and Duan, Nan},
  journal={arXiv preprint arXiv:2401.07663},
  year={2024}
}


@article{kamath2023loopy,
  title={Finding inductive loop invariants using large language models},
  author={Kamath, Adharsh and Senthilnathan, Aditya and Chakraborty, Saikat and Deligiannis, Pantazis and Lahiri, Shuvendu K and Lal, Akash and Rastogi, Aseem and Roy, Subhajit and Sharma, Rahul},
  journal={arXiv preprint arXiv:2311.07948},
  year={2023}
}


@article{chen2024evolveVerus,
  title={Automated Proof Generation for Rust Code via Self-Evolution},
  author={Chen, Tianyu and Lu, Shuai and Lu, Shan and Gong, Yeyun and Yang, Chenyuan and Li, Xuheng and Misu, Md Rakib Hossain and Yu, Hao and Duan, Nan and Cheng, Peng and others},
  journal={arXiv preprint arXiv:2410.15756},
  year={2024}
}

@article{chakraborty2024FStar,
  title={Towards Neural Synthesis for SMT-Assisted Proof-Oriented Programming},
  author={Chakraborty, Saikat and Ebner, Gabriel and Bhat, Siddharth and Fakhoury, Sarah and Fatima, Sakina and Lahiri, Shuvendu and Swamy, Nikhil},
  journal={arXiv preprint arXiv:2405.01787},
  year={2024}
}

# Theorem Proving
@article{li2024survey,
  title={A Survey on Deep Learning for Theorem Proving},
  author={Li, Zhaoyu and Sun, Jialiang and Murphy, Logan and Su, Qidong and Li, Zenan and Zhang, Xian and Yang, Kaiyu and Si, Xujie},
  journal={arXiv preprint arXiv:2404.09939},
  year={2024}
}


@article{wu2024lean,
  title={Lean-github: Compiling github lean repositories for a versatile lean prover},
  author={Wu, Zijian and Wang, Jiayu and Lin, Dahua and Chen, Kai},
  journal={arXiv preprint arXiv:2407.17227},
  year={2024}
}

@article{yang2023leandojo,
  title={Leandojo: Theorem proving with retrieval-augmented language models},
  author={Yang, Kaiyu and Swope, Aidan and Gu, Alex and Chalamala, Rahul and Song, Peiyang and Yu, Shixing and Godil, Saad and Prenger, Ryan J and Anandkumar, Animashree},
  journal={Advances in Neural Information Processing Systems},
  volume={36},
  year={2024}
}

@inproceedings{li2023veriScale,
  title={Spoq: Scaling $\{$Machine-Checkable$\}$ Systems Verification in Coq},
  author={Li, Xupeng and Li, Xuheng and Qiang, Wei and Gu, Ronghui and Nieh, Jason},
  booktitle={17th USENIX Symposium on Operating Systems Design and Implementation (OSDI 23)},
  pages={851--869},
  year={2023}
}



@article{NEURIPS2020_6b493230,
  title={Retrieval-augmented generation for knowledge-intensive nlp tasks},
  author={Lewis, Patrick and Perez, Ethan and Piktus, Aleksandra and Petroni, Fabio and Karpukhin, Vladimir and Goyal, Naman and K{\"u}ttler, Heinrich and Lewis, Mike and Yih, Wen-tau and Rockt{\"a}schel, Tim and others},
  journal={Advances in Neural Information Processing Systems},
  volume={33},
  pages={9459--9474},
  year={2020}
}


@inproceedings{
asai2024selfrag,
title={Self-{RAG}: Learning to Retrieve, Generate, and Critique through Self-Reflection},
author={Akari Asai and Zeqiu Wu and Yizhong Wang and Avirup Sil and Hannaneh Hajishirzi},
booktitle={The Twelfth International Conference on Learning Representations},
year={2024},
url={https://openreview.net/forum?id=hSyW5go0v8}
}

# Retrieval/Generation Methods
@misc{jiang2024codingsurvey,
      title={A Survey on Large Language Models for Code Generation}, 
      author={Juyong Jiang and Fan Wang and Jiasi Shen and Sungju Kim and Sunghun Kim},
      year={2024},
      eprint={2406.00515},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2406.00515}, 
}

@misc{openai_gpt4o,
  author       = "{OpenAI}",
  title        = "{Hello GPT-4O}",
  year         = "2024",
  url          = "https://openai.com/index/hello-gpt-4o/",
  note         = "[Accessed: 2024-11-07]"
}

@misc{llamaindex,
  author       = {LlamaIndex},
  title        = {LlamaIndex: Build Knowledge Assistants over your Enterprise Data},
  howpublished = {\url{https://www.llamaindex.ai/}},
  note         = {Accessed: 2024-11-07}
}

@misc{faiss,
  author       = "{Facebook AI Research}",
  title        = "{FAISS: A library for efficient similarity search and clustering of dense vectors}",
  year         = "2024",
  url          = "https://github.com/facebookresearch/faiss",
  note         = "[Accessed: 2024-11-07]"
}

@article{faisspaper,
  title={Billion-scale similarity search with GPUs},
  author={Johnson, Jeff and Douze, Matthijs and J{\'e}gou, Herv{\'e}},
  journal={IEEE Transactions on Big Data},
  volume={7},
  number={3},
  pages={535--547},
  year={2019},
  publisher={IEEE}
}

@misc{faissguide,
  author       = "{Facebook AI Research}",
  title        = "{FAISS: A library for efficient similarity search and clustering of dense vectors}",
  year         = "2024",
  url          = "https://github.com/facebookresearch/faiss/wiki/Guidelines-to-choose-an-index",
  note         = "[Accessed: 2024-12-06]"
}


@article{brown2020fewshot,
  title={Language models are few-shot learners},
  author={Brown, Tom and Mann, Benjamin and Ryder, Nick and Subbiah, Melanie and Kaplan, Jared D and Dhariwal, Prafulla and Neelakantan, Arvind and Shyam, Pranav and Sastry, Girish and Askell, Amanda and others},
  journal={Advances in neural information processing systems},
  volume={33},
  pages={1877--1901},
  year={2020}
}

@inproceedings{shrivastava2023repoPrompt,
author = {Shrivastava, Disha and Larochelle, Hugo and Tarlow, Daniel},
title = {Repository-level prompt generation for large language models of code},
year = {2023},
publisher = {JMLR.org},
abstract = {With the success of large language models (LLMs) of code and their use as code assistants (e.g. Codex (Chen et al., 2021) used in GitHub Copilot), techniques for introducing domain-specific knowledge in the prompt design process become important. In this work, we propose a framework called Repo-Level Prompt Generator that learns to generate example-specific prompts using prompt proposals. The prompt proposals take context from the entire repository, thereby incorporating both the structure of the repository and the context from other relevant files (e.g. imports, parent class files). Our technique doesn't require any access to the weights of the LLM, making it applicable in cases where we only have black-box access to the LLM. We conduct experiments on the task of single-line code auto-completion using code repositories taken from Google Code archives. We demonstrate that an oracle constructed from our prompt proposals gives a relative improvement of 36\% over Codex, showing the quality of these proposals. Further, we show that when we train a model to predict a prompt proposal, we can achieve significant performance gains over Codex and other baselines. We release our code, data, and trained checkpoints at https://github.com/shrivastavadisha/repo_level_prompt_generation.},
booktitle = {Proceedings of the 40th International Conference on Machine Learning},
articleno = {1314},
numpages = {23},
location = {Honolulu, Hawaii, USA},
series = {ICML'23}
}

@inproceedings{wen2024enchanting,
  title={Enchanting program specification synthesis by large language models using static analysis and program verification},
  author={Wen, Cheng and Cao, Jialun and Su, Jie and Xu, Zhiwu and Qin, Shengchao and He, Mengda and Li, Haokun and Cheung, Shing-Chi and Tian, Cong},
  booktitle={International Conference on Computer Aided Verification},
  pages={302--328},
  year={2024},
  organization={Springer}
}

@inproceedings{cho2024framework,
  title={A Framework for Debugging Automated Program Verification Proofs via Proof Actions},
  author={Cho, Chanhee and Zhou, Yi and Bosamiya, Jay and Parno, Bryan},
  booktitle={International Conference on Computer Aided Verification},
  pages={348--361},
  year={2024},
  organization={Springer}
}


@inproceedings{de2008z3,
  title={Z3: An efficient SMT solver},
  author={De Moura, Leonardo and Bj{\o}rner, Nikolaj},
  booktitle={International conference on Tools and Algorithms for the Construction and Analysis of Systems},
  pages={337--340},
  year={2008},
  organization={Springer}
}



@inproceedings{si2020code2inv,
  title={Code2inv: A deep learning framework for program verification},
  author={Si, Xujie and Naik, Aaditya and Dai, Hanjun and Naik, Mayur and Song, Le},
  booktitle={Computer Aided Verification: 32nd International Conference, CAV 2020, Los Angeles, CA, USA, July 21--24, 2020, Proceedings, Part II 32},
  pages={151--164},
  year={2020},
  organization={Springer}
}




@inproceedings{liu2022learning,
  title={Learning contract invariants using reinforcement learning},
  author={Liu, Junrui and Chen, Yanju and Tan, Bryan and Dillig, Isil and Feng, Yu},
  booktitle={Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering},
  pages={1--11},
  year={2022}
}



@inproceedings{janssen2024can,
  title={Can ChatGPT support software verification?},
  author={Jan{\ss}en, Christian and Richter, Cedric and Wehrheim, Heike},
  booktitle={International Conference on Fundamental Approaches to Software Engineering},
  pages={266--279},
  year={2024},
  organization={Springer}
}


@inproceedings{wang2022learning,
  title={Learning to synthesize relational invariants},
  author={Wang, Jingbo and Wang, Chao},
  booktitle={Proceedings of the 37th IEEE/ACM International Conference on Automated Software Engineering},
  pages={1--12},
  year={2022}
}


@inproceedings{li2024guiding,
  title={Guiding enumerative program synthesis with large language models},
  author={Li, Yixuan and Parsert, Julian and Polgreen, Elizabeth},
  booktitle={International Conference on Computer Aided Verification},
  pages={280--301},
  year={2024},
  organization={Springer}
}


@article{kirchner2015frama,
  title={Frama-C: A software analysis perspective},
  author={Kirchner, Florent and Kosmatov, Nikolai and Prevosto, Virgile and Signoles, Julien and Yakobowski, Boris},
  journal={Formal aspects of computing},
  volume={27},
  number={3},
  pages={573--609},
  year={2015},
  publisher={Springer}
}


@inproceedings{leino2010dafny,
  title={Dafny: An automatic program verifier for functional correctness},
  author={Leino, K Rustan M},
  booktitle={International conference on logic for programming artificial intelligence and reasoning},
  pages={348--370},
  year={2010},
  organization={Springer}
}


@article{liao20243,
  title={A 3-CodGen: A Repository-Level Code Generation Framework for Code Reuse with Local-Aware, Global-Aware, and Third-Party-Library-Aware},
  author={Liao, Dianshu and Pan, Shidong and Sun, Xiaoyu and Ren, Xiaoxue and Huang, Qing and Xing, Zhenchang and Jin, Huan and Li, Qinying},
  journal={IEEE Transactions on Software Engineering},
  year={2024},
  publisher={IEEE}
}

@misc{openai2024embedding,
  title = {New embedding models and API updates},
  author = {{OpenAI}},
  year = {2024},
  url = {https://openai.com/index/new-embedding-models-and-api-updates/},
  note = {Accessed: 2025-01-31}
}
