% This file was created with Citavi 6.19.2.1

@misc{Abdennebi.2021,
 abstract = {There is a plethora of data structures, algorithms, and frameworks dealing with major data-stream problems like estimating the frequency of items, answering set membership, association and multiplicity queries, and several other statistics that can be extracted from voluminous data streams. In this survey, we are focusing on exploring randomized data structures called Bloom Filters. This data structure answers whether an item exists or not in a data stream with a false positive probability fpp. In this survey, many variants of the Bloom filter will be covered by showing the strengths of each structure and its drawbacks i.e. some Bloom filters deal with insertion and deletions and others don't, some variants use the memory efficiently but increase the fpp where others pay the trade-off in the reversed way. Furthermore, in each Bloom filter structure, the false positive probability will be highlighted alongside the most important technical details showing the improvement it is presenting, while the main aim of this work is to provide an overall comparison between the variants of the Bloom filter structure according to the application domain that it fits in.},
 author = {Abdennebi, Anes and Kaya, Kamer},
 year = {2021},
 title = {{A Bloom Filter Survey: Variants for Different Domain Applications}},
 keywords = {Data Structures and Algorithms (cs.DS);Databases (cs.DB);E.2;FOS: Computer and information sciences},
 publisher = {arXiv},
 doi = {10.48550/arXiv.2106.12189}
}


@book{Abramowitz.2013,
 year = {2013},
 title = {{Handbook of mathematical functions: With formulas, graphs, and mathematical tables}},
 url = {https://www.cs.bham.ac.uk/~aps/research/projects/as/},
 address = {New York, NY},
 edition = {9. Dover print.; [Nachdr. der Ausg. von 1972]},
 publisher = {{Dover Publ}},
 isbn = {0486612724},
 series = {{Dover books on mathematics}},
 editor = {Abramowitz, Milton and Stegun, Irene A.}
}


@article{Almeida.2007,
 author = {Almeida, Paulo S{\'e}rgio and Baquero, Carlos and Pregui{\c{c}}a, Nuno and Hutchison, David},
 year = {2007},
 title = {{Scalable Bloom Filters}},
 pages = {255--261},
 volume = {101},
 number = {6},
 issn = {00200190},
 journal = {{Information Processing Letters}},
 doi = {10.1016/j.ipl.2006.10.007}
}


@misc{Appleby.2008,
 abstract = {Automatically exported from code.google.com/p/smhasher - aappleby/smhasher},
 author = {Appleby, Austin},
 year = {2008},
 title = {{aappleby/smhasher: MurmurHash: GitHub Repository}},
 url = {https://github.com/aappleby/smhasher},
 urldate = {08.11.2024}
}


@article{Bender.2012,
 author = {Bender, Michael A. and Farach-Colton, Martin and Johnson, Rob and Kraner, Russell and Kuszmaul, Bradley C. and Medjedovic, Dzejla and Montes, Pablo and Shetty, Pradeep and Spillane, Richard P. and Zadok, Erez},
 year = {2012},
 title = {{Don't thrash: How to Cache your Hash on Flash}},
 pages = {1627--1637},
 volume = {5},
 number = {11},
 issn = {2150-8097},
 journal = {{Proceedings of the VLDB Endowment}},
 doi = {10.14778/2350229.2350275}
}


@article{Bloom.1970,
 author = {Bloom, Burton H.},
 year = {1970},
 title = {{Space/time trade-offs in hash coding with allowable errors}},
 pages = {422--426},
 volume = {13},
 number = {7},
 issn = {0001-0782},
 journal = {{Communications of the ACM}},
 doi = {10.1145/362686.362692}
}


@incollection{Bonomi.2006,
 author = {Bonomi, Flavio and Mitzenmacher, Michael and Panigrahy, Rina and Singh, Sushil and Varghese, George},
 title = {{An Improved Construction for Counting Bloom Filters}},
 pages = {684--695},
 volume = {4168},
 publisher = {{Springer Berlin Heidelberg}},
 isbn = {978-3-540-38876-0},
 series = {{Lecture Notes in Computer Science}},
 editor = {Azar, Yossi and Erlebach, Thomas},
 booktitle = {{Algorithms {u2013} ESA 2006}},
 year = {2006},
 address = {Berlin, Heidelberg},
 doi = {10.1007/11841036\_61}
}


@article{Bose.2008,
 author = {Bose, Prosenjit and Guo, Hua and Kranakis, Evangelos and Maheshwari, Anil and Morin, Pat and Morrison, Jason and Smid, Michiel and Tang, Yihui},
 year = {2008},
 title = {{On the false-positive rate of Bloom filters}},
 pages = {210--213},
 volume = {108},
 number = {4},
 issn = {00200190},
 journal = {{Information Processing Letters}},
 doi = {10.1016/j.ipl.2008.05.018}
}


@article{Broder.2004,
 author = {Broder, Andrei and Mitzenmacher, Michael},
 year = {2004},
 title = {{Network Applications of Bloom Filters: A Survey}},
 pages = {485--509},
 volume = {1},
 number = {4},
 issn = {1542-7951},
 journal = {{Internet Mathematics}},
 doi = {10.1080/15427951.2004.10129096}
}


@inproceedings{Bruck.2006,
 author = {Bruck, Jehoshua and Gao, Jie and Jiang, Anxiao},
 title = {{Weighted Bloom Filter}},
 pages = {2304--2308},
 publisher = {{John Wiley}},
 isbn = {9781424405053},
 booktitle = {{2006 IEEE International Symposium on Information Theory}},
 year = {2006},
 address = {[Place of publication not identified]},
 doi = {10.1109/ISIT.2006.261978}
}


@article{Calderoni.2015,
 author = {Calderoni, Luca and Palmieri, Paolo and Maio, Dario},
 year = {2015},
 title = {{Location privacy without mutual trust: The spatial Bloom filter}},
 pages = {4--16},
 volume = {68},
 issn = {01403664},
 journal = {{Computer Communications}},
 doi = {10.1016/j.comcom.2015.06.011}
}


@misc{Carrea.03.03.2016,
 abstract = {The Bloom filter (BF) is a space efficient randomized data structure particularly suitable to represent a set supporting approximate membership queries. BFs have been extensively used in many applications especially in networking due to their simplicity and flexibility. The performances of BFs mainly depends on query overhead, space requirements and false positives. The aim of this paper is to focus on false positives. Inspired by the recent application of the BF in a novel multicast forwarding fabric for information centric networks, this paper proposes the yes-no BF, a new way of representing a set, based on the BF, but with significantly lower false positives and no false negatives. Although it requires slightly more processing at the stage of its formation, it offers the same processing requirements for membership queries as the BF. After introducing the yes-no BF, we show through simulations, that it has better false positive performance than the BF.},
 author = {Carrea, Laura and Vernitski, Alexei and Reed, Martin},
 date = {03.03.2016},
 title = {{Yes-no Bloom filter: A way of representing sets with fewer false  positives}},
 url = {http://arxiv.org/pdf/1603.01060}
}


@misc{Carrea.2016,
 abstract = {The Bloom filter (BF) is a space efficient randomized data structure particularly suitable to represent a set supporting approximate membership queries. BFs have been extensively used in many applications especially in networking due to their simplicity and flexibility. The performances of BFs mainly depends on query overhead, space requirements and false positives. The aim of this paper is to focus on false positives. Inspired by the recent application of the BF in a novel multicast forwarding fabric for information centric networks, this paper proposes the yes-no BF, a new way of representing a set, based on the BF, but with significantly lower false positives and no false negatives. Although it requires slightly more processing at the stage of its formation, it offers the same processing requirements for membership queries as the BF. After introducing the yes-no BF, we show through simulations, that it has better false positive performance than the BF. The Bloom filter (BF) is a space efficient randomized data structure particularly suitable to represent a set supporting approximate membership queries. BFs have been extensively used in many applications especially in networking due to their simplicity and flexibility. The performances of BFs mainly depends on query overhead, space requirements and false positives. The aim of this paper is to focus on false positives. Inspired by the recent application of the BF in a novel multicast forwarding fabric for information centric networks, this paper proposes the yes-no BF, a new way of representing a set, based on the BF, but with significantly lower false positives and no false negatives. Although it requires slightly more processing at the stage of its formation, it offers the same processing requirements for membership queries as the BF. After introducing the yes-no BF, we show through simulations, that it has better false positive performance than the BF. // The Bloom filter (BF) is a space efficient randomized data structure particularly suitable to represent a set supporting approximate membership queries. BFs have been extensively used in many applications especially in networking due to their simplicity and flexibility. The performances of BFs mainly depends on query overhead, space requirements and false positives. The aim of this paper is to focus on false positives. Inspired by the recent application of the BF in a novel multicast forwarding fabric for information centric networks, this paper proposes the yes-no BF, a new way of representing a set, based on the BF, but with significantly lower false positives and no false negatives. Although it requires slightly more processing at the stage of its formation, it offers the same processing requirements for membership queries as the BF. After introducing the yes-no BF, we show through simulations, that it has better false positive performance than the BF.},
 author = {Carrea, Laura and Vernitski, Alexei and Reed, Martin},
 year = {2016},
 title = {{Yes-no Bloom filter: A way of representing sets with fewer false positives}},
 keywords = {Data Structures and Algorithms (cs.DS);FOS: Computer and information sciences;Networking and Internet Architecture (cs.NI)},
 publisher = {arXiv},
 doi = {10.48550/arXiv.1603.01060}
}


@inproceedings{Chang.2004,
 author = {Chang, F. and {Wu-chang Feng} and {Kang Li}},
 title = {{Approximate caches for packet classification}},
 pages = {2196--2207},
 publisher = {IEEE},
 booktitle = {{IEEE INFOCOM 2004}},
 year = {2004},
 doi = {10.1109/infcom.2004.1354643}
}


@inproceedings{Chang.2019,
 author = {Chang, Da-Chung and Chen, Chien and Thanavel, Mahadevan},
 title = {{Dynamic reordering bloom filter}},
 pages = {288--291},
 booktitle = {{2017 19th Asia-Pacific Network Operations and Management Symposium (APNOMS)}},
 year = {2019},
 doi = {10.1109/APNOMS.2017.8094131}
}


@inproceedings{Chazelle.2004,
 author = {Chazelle, Bernard and Kilian, Joe and Rubinfeld, Ronitt and Tal, Ayellet},
 title = {{The Bloomier Filter: An Efficient Data Structure for Static Support Lookup Tables}},
 pages = {30--39},
 publisher = {{Association for Computing Machinery [and] Society for Industrial and Applied Mathematics}},
 isbn = {978-0-89871-558-3},
 booktitle = {{Proceedings of the Fifteenth Annual ACM-SIAM Symposium on Discrete Algorithms}},
 year = {2004},
 address = {New York and Great Britain}
}


@inproceedings{Chen.2012,
 author = {Chen, Rui and Acs, Gergely and Castelluccia, Claude},
 title = {{Differentially private sequential data publication via variable-length n-grams}},
 pages = {638--649},
 publisher = {ACM},
 isbn = {9781450316514},
 series = {{ACM Conferences}},
 editor = {Yu, Ting},
 booktitle = {{Proceedings of the 2012 ACM conference on Computer and communications security}},
 year = {2012},
 address = {New York, NY},
 doi = {10.1145/2382196.2382263}
}


@inproceedings{Cohen.2003,
 author = {Cohen, Saar and Matias, Yossi},
 title = {{Spectral bloom filters}},
 pages = {241--252},
 isbn = {978-1-58113-634-0},
 editor = {Halevy, Alon Y. and Ives, Zachary G. and Doan, AnHai},
 booktitle = {{SIGMOD '03: Proceedings of the 2003 ACM SIGMOD international conference on Management of data // Proceedings of the ACM SIGMOD international conference on management of data}},
 year = {2003},
 doi = {10.1145/872757.872787}
}


@article{Cormode.2005,
 author = {Cormode, Graham and Muthukrishnan, S.},
 year = {2005},
 title = {{An improved data stream summary: the count-min sketch and its applications}},
 pages = {58--75},
 volume = {55},
 number = {1},
 issn = {01966774},
 journal = {{Journal of Algorithms}},
 doi = {10.1016/j.jalgor.2003.12.001}
}


@inproceedings{Crainiceanu.2013,
 author = {Crainiceanu, Adina},
 title = {{Bloofi: a hierarchical Bloom filter index with applications to distributed data provenance}},
 pages = {1--8},
 publisher = {ACM},
 isbn = {978-1-4503-2108-2},
 editor = {Darmont, J{\'e}r{\^o}me},
 booktitle = {{Proceedings of the 2nd International Workshop on Cloud Intelligence (Cloud-I 2013) : August 26, 2013, @VLDB 2013, Riva del Garda, Italy}},
 year = {2013},
 doi = {10.1145/2501928.2501931}
}


@article{Crainiceanu.2015,
 author = {Crainiceanu, Adina and Lemire, Daniel},
 year = {2015},
 title = {{Bloofi: Multidimensional Bloom filters}},
 pages = {311--324},
 volume = {54},
 issn = {03064379},
 journal = {{Information Systems}},
 doi = {10.1016/j.is.2015.01.002}
}


@inproceedings{Dai.2016,
 author = {Dai, Haipeng and Zhong, Yuankun and Liu, Alex X. and Wang, Wei and Li, Meng},
 title = {{Noisy Bloom Filters for Multi-Set Membership Testing}},
 pages = {139--151},
 publisher = {ACM},
 isbn = {978-1-4503-4266-7},
 editor = {Alouf, Sara},
 booktitle = {{Proceedings of the 2016 ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Science}},
 year = {2016},
 doi = {10.1145/2896377.2901451}
}


@inproceedings{Dai.2020,
 author = {Dai, Zhenwei and Shrivastava, Anshumali},
 title = {{Adaptive Learned Bloom Filter (Ada-BF): Efficient Utilization of the Classifier with Application to Real-Time Information Filtering on the Web}},
 url = {https://proceedings.neurips.cc/paper_files/paper/2020/file/86b94dae7c6517ec1ac767fd2c136580-Paper.pdf},
 pages = {11700--11710},
 volume = {33},
 publisher = {{Curran Associates, Inc}},
 editor = {Larochelle, H. and Ranzato, M. and Hadsell, R. and Balcan, M. F. and Lin, H.},
 booktitle = {{Advances in Neural Information Processing Systems}},
 year = {2020}
}


@article{DeCandia.2007,
 author = {DeCandia, Giuseppe and Hastorun, Deniz and Jampani, Madan and Kakulapati, Gunavardhan and Lakshman, Avinash and Pilchin, Alex and Sivasubramanian, Swaminathan and Vosshall, Peter and Vogels, Werner},
 year = {2007},
 title = {{Dynamo: amazon's highly available key-value store}},
 pages = {205--220},
 volume = {41},
 number = {6},
 issn = {0163-5980},
 journal = {{ACM SIGOPS Operating Systems Review}},
 doi = {10.1145/1323293.1294281}
}


@inproceedings{Donnet.2006,
 author = {Donnet, Benoit and Baynat, Bruno and Friedman, Timur},
 title = {{Retouched bloom filters}},
 pages = {1},
 publisher = {{ACM Digital Library}},
 isbn = {978-1-59593-456-7},
 booktitle = {{Proceedings of the 2006 ACM CoNEXT conference}},
 year = {2006},
 doi = {10.1145/1368436.1368454}
}


@article{Einziger.2017,
 author = {Einziger, Gil and Friedman, Roy},
 year = {2017},
 title = {{TinySet---An Access Efficient Self Adjusting Bloom Filter Construction}},
 pages = {2295--2307},
 volume = {25},
 number = {4},
 issn = {10636692},
 journal = {{IEEE/ACM Transactions on Networking}},
 doi = {10.1109/TNET.2017.2685530}
}


@article{Estebanez.2014,
 author = {Est{\'e}banez, C{\'e}sar and Saez, Yago and Recio, Gustavo and Isasi, Pedro},
 year = {2014},
 title = {{Performance of the most common non-cryptographic hash functions}},
 pages = {681--698},
 volume = {44},
 number = {6},
 issn = {00380644},
 journal = {{Software: Practice and Experience}},
 doi = {10.1002/spe.2179}
}


@article{Fan.1998,
 author = {Fan, Li and Cao, Pei and Almeida, Jussara and Broder, Andrei Z.},
 year = {1998},
 title = {{Summary cache}},
 pages = {254--265},
 volume = {28},
 number = {4},
 issn = {0146-4833},
 journal = {{ACM SIGCOMM Computer Communication Review}},
 doi = {10.1145/285243.285287}
}


@incollection{Fan.2014,
 author = {Fan, Bin and Andersen, Dave G. and Kaminsky, Michael and Mitzenmacher, Michael D.},
 title = {{Cuckoo Filter}},
 pages = {75--88},
 publisher = {ACM},
 isbn = {978-1-4503-3279-8},
 booktitle = {{CoNEXT '14 : proceedings of the 2014 Conference on Emerging Networking Experiments and Technologies : December 2-5, 2014, Sydney, Australia}},
 year = {2014},
 address = {New York, NY, United States},
 doi = {10.1145/2674005.2674994}
}


@inproceedings{Ficara.2008,
 author = {Ficara, D. and Giordano, S. and Procissi, G. and Vitucci, F.},
 title = {{MultiLayer Compressed Counting Bloom Filters}},
 pages = {311--315},
 publisher = {{IEEE Computer Society}},
 isbn = {978-1-4244-2025-4},
 booktitle = {{INFOCOM 2008. The 27th Conference on Computer Communications. IEEE}},
 year = {2008},
 address = {Los Alamitos},
 doi = {10.1109/INFOCOM.2008.71}
}


@misc{Goodrich.2011,
 abstract = {We present a version of the Bloom filter data structure that supports not only the insertion, deletion, and lookup of key-value pairs, but also allows a complete listing of its contents with high probability, as long the number of key-value pairs is below a designed threshold. Our structure allows the number of key-value pairs to greatly exceed this threshold during normal operation. Exceeding the threshold simply temporarily prevents content listing and reduces the probability of a successful lookup. If later entries are deleted to return the structure below the threshold, everything again functions appropriately. We also show that simple variations of our structure are robust to certain standard errors, such as the deletion of a key without a corresponding insertion or the insertion of two distinct values for a key. The properties of our structure make it suitable for several applications, including database and networking applications that we highlight.

contains 4 figures, showing experimental performance},
 author = {Goodrich, Michael T. and Mitzenmacher, Michael},
 year = {2011},
 title = {{Invertible Bloom Lookup Tables}},
 keywords = {Data Structures and Algorithms (cs.DS);Databases (cs.DB);FOS: Computer and information sciences},
 publisher = {arXiv},
 doi = {10.48550/arXiv.1101.2245}
}


@misc{Goswami.2016,
 abstract = {A Bloom filter is a widely used data-structure for representing a set $S$ and answering queries of the form {\textquotedbl}Is $x$ in $S$?{\textquotedbl}. By allowing some false positive answers (saying {\textquotedbl}yes{\textquotedbl} when the answer is in fact `no') Bloom filters use space significantly below what is required for storing $S$. In the distance sensitive setting we work with a set $S$ of (Hamming) vectors and seek a data structure that offers a similar trade-off, but answers queries of the form {\textquotedbl}Is $x$ close to an element of $S$?{\textquotedbl} (in Hamming distance). Previous work on distance sensitive Bloom filters have accepted false positive and false negative answers. Absence of false negatives is of critical importance in many applications of Bloom filters, so it is natural to ask if this can be also achieved in the distance sensitive setting. Our main contributions are upper and lower bounds (that are tight in several cases) for space usage in the distance sensitive setting where false negatives are not allowed.

Published in SODA 2017},
 author = {Goswami, Mayank and Pagh, Rasmus and Silvestri, Francesco and Sivertsen, Johan},
 year = {2016},
 title = {{Distance Sensitive Bloom Filters Without False Negatives}},
 keywords = {Data Structures and Algorithms (cs.DS);FOS: Computer and information sciences},
 publisher = {arXiv},
 doi = {10.48550/arXiv.1607.05451}
}


@article{Guo.2010,
 author = {Guo, Deke and Wu, Jie and Chen, Honghui and Yuan, Ye and Luo, Xueshan},
 year = {2010},
 title = {{The Dynamic Bloom Filters}},
 pages = {120--133},
 volume = {22},
 number = {1},
 issn = {1041-4347},
 journal = {{IEEE Transactions on Knowledge and Data Engineering}},
 doi = {10.1109/TKDE.2009.57}
}


@inproceedings{Gupta.2017,
 author = {Gupta, Divya and Batra, Shalini},
 title = {{A short survey on bloom filter and its variants}},
 pages = {1086--1092},
 booktitle = {{2017 International Conference on Computing, Communication and Automation (ICCCA)}},
 year = {2017},
 doi = {10.1109/CCAA.2017.8229957}
}


@misc{Gupta.2019,
 abstract = {Multiple Set Membership Testing (MSMT) is a well-known problem in a variety of search and query applications. Given a dataset of K different sets and a query q, it aims to find all of the sets containing the query. Trivially, an MSMT instance can be reduced to K membership testing instances, each with the same q, leading to O(K) query time with a simple array of Bloom Filters. We propose a data-structure called RAMBO (Repeated And Merged BloOm Filter) that achieves O(\sqrt{K} log K) query time in expectation with an additional worst-case memory cost factor of O(log K) beyond the array of Bloom Filters. Due to this, RAMBO is a very fast and accurate data-structure. Apart from being embarrassingly parallel, supporting cheap updates for streaming inputs, zero false-negative rate, and low false-positive rate, RAMBO beats the state-of-the-art approaches for genome indexing methods: COBS (Compact bit-sliced signature index), Sequence Bloom Trees (a Bloofi based implementation), HowDeSBT, SSBT, and document indexing methods like BitFunnel. The proposed data-structure is simply a count-min sketch type arrangement of a membership testing utility (Bloom Filter in our case). It indexes k-grams and provides an approximate membership testing based search utility. The simplicity of the algorithm and embarrassingly parallel architecture allows us to index a 170 TB genome dataset in a mere 14 hours on a cluster of 100 nodes while competing methods require weeks.

14 pages, 5 figures},
 author = {Gupta, Gaurav and Yan, Minghao and Coleman, Benjamin and Elworth, R. A. Leo and Medini, Tharun and Treangen, Todd and Shrivastava, Anshumali},
 year = {2019},
 title = {{RAMBO: Repeated And Merged BloOm Filter for Ultra-fast Multiple Set Membership Testing (MSMT) on Large-Scale Data}},
 keywords = {Data Structures and Algorithms (cs.DS);FOS: Computer and information sciences;Information Retrieval (cs.IR)},
 publisher = {arXiv},
 doi = {10.48550/arXiv.1910.02611}
}


@inproceedings{Hao.2007,
 author = {Hao, Fang and Kodialam, Murali and Lakshman, T. V.},
 title = {{Building high accuracy bloom filters using partitioned hashing}},
 pages = {277--288},
 publisher = {{ACM Digital Library}},
 isbn = {978-1-59593-639-4},
 booktitle = {{Proceedings of the 2007 ACM SIGMETRICS International Conference on Measurement and Modeling of Computer Systems}},
 year = {2007},
 doi = {10.1145/1254882.1254916}
}


@inproceedings{Hao.2008,
 author = {Hao, F. and Kodialam, M. and Lakshman, T. V.},
 title = {{Incremental Bloom Filters}},
 pages = {1067--1075},
 publisher = {{IEEE Computer Society}},
 isbn = {978-1-4244-2025-4},
 booktitle = {{INFOCOM 2008. The 27th Conference on Computer Communications. IEEE}},
 year = {2008},
 address = {Los Alamitos},
 doi = {10.1109/INFOCOM.2008.161}
}


@inproceedings{Hao.2009,
 author = {Hao, F. and Kodialam, M. and Lakshman, T. V. and Song, H.},
 title = {{Fast Multiset Membership Testing Using Combinatorial Bloom Filters}},
 pages = {513--521},
 booktitle = {{IEEE INFOCOM 2009}},
 year = {2009},
 doi = {10.1109/INFCOM.2009.5061957}
}


@inproceedings{Hua.2008,
 author = {Hua, Nan and Zhao, Haiquan and Lin, Bill and Xu, Jun},
 title = {{Rank-indexed hashing: A compact construction of Bloom filters and variants}},
 pages = {73--82},
 publisher = {{IEEE / Institute of Electrical and Electronics Engineers Incorporated}},
 isbn = {978-1-4244-2506-8},
 booktitle = {{IEEE International Conference on Network Protocols, 2008. ICNP 2008}},
 year = {2008},
 doi = {10.1109/ICNP.2008.4697026}
}


@incollection{Kirsch.2006,
 author = {Kirsch, Adam and Mitzenmacher, Michael},
 title = {{Less Hashing, Same Performance: Building a Better Bloom Filter}},
 pages = {456--467},
 volume = {4168},
 publisher = {{Springer Berlin Heidelberg}},
 isbn = {978-3-540-38876-0},
 series = {{Lecture Notes in Computer Science}},
 editor = {Azar, Yossi and Erlebach, Thomas},
 booktitle = {{Algorithms {u2013} ESA 2006}},
 year = {2006},
 address = {Berlin, Heidelberg},
 doi = {10.1007/11841036\_42}
}


@article{Kleyko.2020,
 author = {Kleyko, Denis and Rahimi, Abbas and Gayler, Ross W. and Osipov, Evgeny},
 year = {2020},
 title = {{Autoscaling Bloom filter: controlling trade-off between true and false positives}},
 pages = {3675--3684},
 volume = {32},
 number = {8},
 issn = {0941-0643},
 journal = {{Neural Computing and Applications}},
 doi = {10.1007/s00521-019-04397-1}
}


@misc{Laufer.2005,
 author = {Laufer, Rafael and {Braconnot Velloso}, Pedro and Carlos, Otto and {M. B. Duarte, Otto Carlos}},
 year = {2005},
 title = {{Generalized bloom filters}}
}


@inproceedings{Lee.2019,
 author = {Lee, Jungwon and Lim, Hyesook},
 title = {{A circled Bloom filter for the membership identification of multiple sets}},
 pages = {1--3},
 booktitle = {{2019 International Conference on Electronics, Information, and Communication (ICEIC)}},
 year = {2019},
 doi = {10.23919/ELINFOCOM.2019.8706480}
}


@article{Li.2013,
 author = {Li, Wei and Huang, Kun and Zhang, Dafang and Qin, Zheng},
 year = {2013},
 title = {{Accurate Counting Bloom Filters for Large-Scale Data Processing}},
 pages = {1--11},
 volume = {2013},
 issn = {1024-123X},
 journal = {{Mathematical Problems in Engineering}},
 doi = {10.1155/2013/516298}
}


@article{Lim.2015,
 author = {Lim, Hyesook and Lee, Jungwon and Yim, Changhoon},
 year = {2015},
 title = {{Complement Bloom Filter for Identifying True Positiveness of a Bloom Filter}},
 pages = {1905--1908},
 volume = {19},
 number = {11},
 issn = {1089-7798},
 journal = {{IEEE Communications Letters}},
 doi = {10.1109/LCOMM.2015.2478462}
}


@inproceedings{Lu.2012,
 author = {Lu, Guanlin and Nam, Young Jin and Du, David H. C.},
 title = {{BloomStore: Bloom-Filter based memory-efficient key-value store for indexing of data deduplication on flash}},
 pages = {1--11},
 publisher = {IEEE},
 isbn = {978-1-4673-1747-4},
 booktitle = {{2012 IEEE 28th Symposium on Mass Storage Systems and Technologies (MSST 2012)}},
 year = {2012},
 address = {Piscataway, NJ},
 doi = {10.1109/MSST.2012.6232390}
}


@inproceedings{Lu.2015,
 author = {Lu, Jianyuan and Yang, Tong and Wang, Yi and Dai, Huichen and Jin, Linxiao and Song, Haoyu and Liu, Bin},
 title = {{One-hashing bloom filter}},
 pages = {289--298},
 publisher = {IEEE},
 isbn = {9781467371131},
 editor = {IWQoS},
 booktitle = {{2015 IEEE 23rd International Symposium on Quality of Service (IWQoS)}},
 year = {2015},
 address = {[Piscataway, NJ]},
 doi = {10.1109/IWQoS.2015.7404748}
}


@article{Lumetta.2007,
 author = {Lumetta, Steve and Mitzenmacher, Michael},
 year = {2007},
 title = {{Using the Power of Two Choices to Improve Bloom Filters}},
 pages = {17--33},
 volume = {4},
 number = {1},
 issn = {1542-7951},
 journal = {{Internet Mathematics}},
 doi = {10.1080/15427951.2007.10129136}
}


@article{Mehringer.2023,
 abstract = {We present a novel data structure for searching sequences in large databases: the Hierarchical Interleaved Bloom Filter (HIBF). It is extremely fast and space efficient, yet so general that it could serve as the underlying engine for many applications. We show that the HIBF is superior in build time, index size, and search time while achieving a comparable or better accuracy compared to other state-of-the-art tools. The HIBF builds an index up to 211 times faster, using up to 14 times less space, and can answer approximate membership queries faster by a factor of up to 129.},
 author = {Mehringer, Svenja and Seiler, Enrico and Droop, Felix and Darvish, Mitra and Rahn, Ren{\'e} and Vingron, Martin and Reinert, Knut},
 year = {2023},
 title = {{Hierarchical Interleaved Bloom Filter: enabling ultrafast, approximate sequence queries}},
 pages = {131},
 volume = {24},
 number = {1},
 journal = {{Genome biology}},
 doi = {10.1186/s13059-023-02971-4}
}


@article{Mitzenmacher.2016,
 author = {Mitzenmacher, Michael and Reviriego, Pedro and Pontarelli, Salvatore},
 year = {2016},
 title = {{OMASS: One Memory Access Set Separation}},
 pages = {1940--1943},
 volume = {28},
 number = {7},
 issn = {1041-4347},
 journal = {{IEEE Transactions on Knowledge and Data Engineering}},
 doi = {10.1109/TKDE.2016.2535286}
}


@inproceedings{Mitzenmacher.2018,
 author = {Mitzenmacher, Michael},
 title = {{A Model for Learned Bloom Filters and Optimizing by Sandwiching}},
 url = {https://proceedings.neurips.cc/paper_files/paper/2018/file/0f49c89d1e7298bb9930789c8ed59d48-Paper.pdf},
 volume = {31},
 publisher = {{Curran Associates, Inc}},
 editor = {S., Bengio and H., Wallach and H., Larochelle and K., Grauman and N., Cesa-Bianchi and R., Garnett},
 booktitle = {{Advances in Neural Information Processing Systems}},
 year = {2018}
}


@article{Nayak.2019,
 author = {Nayak, Sabuzima and Patgiri, Ripon},
 year = {2019},
 title = {{A Review on Role of Bloom Filter on DNA Assembly}},
 pages = {66939--66954},
 volume = {7},
 journal = {{IEEE Access}},
 doi = {10.1109/ACCESS.2019.2910180}
}


@inproceedings{Pagh.2005,
 abstract = {This paper considers space-efficient data structures for storing an approximation S' to a set S such that S $\subseteq$ S' and any element not in S belongs to S' with probability at most $\in$. The Bloom filter data structure, solving this problem, has found widespread use. Our main result is a new RAM data structure that improves Bloom filters in several ways:• The time for looking up an element in S' is O(1), independent of $\in$.• The space usage is within a lower order term of the lower bound.• The data structure uses explicit hash function families.• The data structure supports insertions and deletions on S in amortized expected constant time.The main technical ingredient is a succinct representation of dynamic multisets. We also consider three recent generalizations of Bloom filters.},
 author = {Pagh, Anna and Pagh, Rasmus and Rao, S. Srinivasa},
 title = {{An Optimal Bloom Filter Replacement}},
 pages = {823--829},
 publisher = {{Society for Industrial and Applied Mathematics}},
 isbn = {0898715857},
 series = {{SODA '05}},
 booktitle = {{Proceedings of the Sixteenth Annual ACM-SIAM Symposium on Discrete Algorithms}},
 year = {2005},
 address = {USA}
}


@incollection{Palmieri.2015,
 author = {Palmieri, Paolo and Calderoni, Luca and Maio, Dario},
 title = {{Spatial Bloom Filters: Enabling Privacy in Location-Aware Applications}},
 pages = {16--36},
 volume = {8957},
 publisher = {Springer},
 isbn = {978-3-319-16744-2},
 series = {{SpringerLink B{\"u}cher}},
 editor = {Yung, Moti and Zhou, Jianying and Lin, Dongdai},
 booktitle = {{Information Security and Cryptology}},
 year = {2015},
 address = {Cham},
 doi = {10.1007/978-3-319-16745-9{\textunderscore }2}
}


@inproceedings{Pandey.2017,
 author = {Pandey, Prashant and Bender, Michael A. and Johnson, Rob and Patro, Rob},
 title = {{A General-Purpose Counting Filter}},
 pages = {775--787},
 publisher = {ACM},
 isbn = {978-1-4503-4197-4},
 editor = {Chirkova, Rada},
 booktitle = {{Proceedings of the 2017 ACM International Conference on Management of Data}},
 year = {2017},
 doi = {10.1145/3035918.3035963}
}


@article{Patgiri.2018,
 author = {Patgiri, Ripon and Nayak, Sabuzima and Kumar, Samir},
 year = {2018},
 title = {{Role of Bloom Filter in Big Data Research: A Survey}},
 volume = {9},
 number = {11},
 issn = {2158107X},
 journal = {{International Journal of Advanced Computer Science and Applications}},
 doi = {10.14569/IJACSA.2018.091193}
}


@inproceedings{Peng.2018,
 author = {Peng, Yanqing and Guo, Jinwei and Li, Feifei and Qian, Weining and Zhou, Aoying},
 title = {{Persistent Bloom Filter}},
 pages = {1037--1052},
 publisher = {{Association for Computing Machinery}},
 isbn = {978-1-4503-4703-7},
 editor = {Jermaine, Christopher},
 booktitle = {{Sigmod/pods '18}},
 year = {2018},
 address = {New York},
 doi = {10.1145/3183713.3183737}
}


@article{Putze.2009,
 author = {Putze, Felix and Sanders, Peter and Singler, Johannes},
 year = {2009},
 title = {{Cache-, hash-, and space-efficient bloom filters}},
 volume = {14},
 issn = {1084-6654},
 journal = {{ACM Journal of Experimental Algorithmics}},
 doi = {10.1145/1498698.1594230}
}


@article{Reed.1954,
 author = {Reed, I.},
 year = {1954},
 title = {{A class of multiple-error-correcting codes and the decoding scheme}},
 pages = {38--49},
 volume = {4},
 number = {4},
 issn = {2168-2690},
 journal = {{Transactions of the IRE Professional Group on Information Theory}},
 doi = {10.1109/tit.1954.1057465}
}


@inproceedings{Shomaji.2019,
 author = {Shomaji, Sumaiya and Ganji, Fatemeh and Woodard, Damon and Forte, Domenic},
 title = {{Hierarchical Bloom Filter Framework for Security, Space-efficiency, and Rapid Query Handling in Biometric Systems}},
 pages = {1--8},
 publisher = {IEEE},
 isbn = {978-1-7281-1522-1},
 booktitle = {{2019 IEEE 10th International Conference on Biometrics Theory, Applications and Systems (BTAS)}},
 year = {2019},
 address = {Piscataway, NJ},
 doi = {10.1109/BTAS46853.2019.9185977}
}


@inproceedings{Walther.2024,
 author = {Walther, Paul},
 title = {{Advancements of Randomized Data Structures for Geospatial Data}},
 url = {https://ceur-ws.org/Vol-3651/PhDW-1.pdf},
 editor = {Palpanas, Themis and Jagadish, H V},
 booktitle = {{Proceedings of the Workshops of the EDBT/ICDT 2024 Joint Conference co-located with the EDBT/ICDT 2024 Joint Conference}},
 year = {2024}
}


@inproceedings{Werner.2015,
 author = {Werner, Martin},
 title = {{BACR: Set Similarities with Lower Bounds and Application to Spatial Trajectories}},
 pages = {1--10},
 publisher = {ACM},
 isbn = {978-1-4503-3967-4},
 editor = {Ali, Mohamed},
 booktitle = {{Proceedings of the 23rd SIGSPATIAL International Conference on Advances in Geographic Information Systems}},
 year = {2015},
 doi = {10.1145/2820783.2820802}
}


@incollection{Werner.2015b,
 author = {Werner, Martin and Sch{\"o}nfeld, Mirco},
 title = {{The Gaussian Bloom Filter}},
 pages = {191--206},
 volume = {9049},
 publisher = {Springer},
 isbn = {978-3-319-18119-6},
 series = {{Lecture notes in computer science Information systems and applications, incl. Internet/web, and HCI}},
 editor = {Shahabi, Cyrus and Zhou, Xiaofang and Cheema, Muhammad Aamir and Renz, Matthias},
 booktitle = {{Database systems for advanced applications}},
 year = {2015},
 address = {Cham},
 doi = {10.1007/978-3-319-18120-2\_12}
}


@inproceedings{Werner.2019,
 abstract = {In the last decade, more and more spatial data has been acquired on a global scale due to satellite missions, social media, and coordinated governmental activities. This observational data suffers from huge storage footprints and makes global analysis challenging. Therefore, many information products have been designed in which observations are turned into global maps showing features such as land cover or land use, often with only a few discrete values and sparse spatial coverage like only within cities.Traditional coding of such data as a raster image becomes challenging due to the sizes of the datasets and spatially non-local access patterns, for example, when labeling social media streams.This paper proposes GloBiMap, a randomized data structure, based on Bloom filters, for modeling low-cardinality sparse raster images of excessive sizes in a configurable amount of memory with pure random access operations avoiding costly intermediate decompression. In addition, the data structure is designed to correct the inevitable errors of the randomized layer in order to have a fully exact representation.We show the feasibility of the approach on several real-world data sets including the Global Urban Footprint in which each pixel denotes whether a particular location contains a building at a resolution of roughly 10cm globally as well as on a global Twitter sample of more than 220 million precisely geolocated tweets.},
 author = {Werner, Martin},
 title = {{GloBiMaps - A Probabilistic Data Structure for In-Memory Processing of Global Raster Datasets}},
 keywords = {Compression;Data Sparsity;Data Structures;Geographic Information Systems;Image Representation;Randomized},
 pages = {3--12},
 publisher = {{Association for Computing Machinery}},
 isbn = {9781450369091},
 series = {{SIGSPATIAL '19}},
 booktitle = {{Proceedings of the 27th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems}},
 year = {2019},
 address = {New York, NY, USA},
 doi = {10.1145/3347146.3359086}
}


@article{Werner.2021,
 author = {Werner, Martin},
 year = {2021},
 title = {{GloBiMapsAI: An AI-Enhanced Probabilistic Data Structure for Global Raster Datasets}},
 pages = {1--24},
 volume = {7},
 number = {4},
 issn = {2374-0353},
 journal = {{ACM Transactions on Spatial Algorithms and Systems}},
 doi = {10.1145/3453184}
}


@article{Wichura.1988,
 author = {Wichura, Michael J.},
 year = {1988},
 title = {{Algorithm AS 241: The Percentage Points of the Normal Distribution}},
 pages = {477},
 volume = {37},
 number = {3},
 issn = {00359254},
 journal = {{Applied Statistics}},
 doi = {10.2307/2347330}
}


@article{Wing.2019,
 author = {Wing, Jeannette M.},
 year = {2019},
 title = {{The Data Life Cycle}},
 pages = {1--6},
 volume = {1},
 number = {1},
 journal = {{Issue 1}},
 doi = {10.1162/99608f92.e26845b4}
}


@inproceedings{Zou.2022,
 author = {Zou, Beiji and Zeng, Meng and Zhu, Chengzhang and Xiao, Ling and Chen, Zhi},
 title = {{A Learned Prefix Bloom Filter for Spatial Data}},
 pages = {336--350},
 volume = {13426},
 publisher = {Springer},
 isbn = {978-3-031-12422-8},
 series = {{Lecture Notes in Computer Science}},
 editor = {Strauss, Christine and Cuzzocrea, Alfredo and Kotsis, Gabriele and Tjoa, A. Min and Khalil, Ismail},
 booktitle = {{Database and expert systems applications}},
 year = {2022},
 address = {Cham, Switzerland},
 doi = {10.1007/978-3-031-12423-5{\textunderscore }26}
}


