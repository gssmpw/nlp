\section{Related work}
Current QP algorithms tailored for efficiently solving MPC include first-order, active set, and interior point methods **Wang, "A Survey on Optimization Methods for Model Predictive Control"**. The iteration complexity analysis of first-order methods is provided in **Wu, "Optimization Complexity Analysis for Linear Model Predictive Control Problems"** for linear MPC problems, but their iteration complexity result is dependent on the QP problem data such as the Hessian matrix. Their \textit{data-dependent} iteration complexity result cannot guarantee the time-invariant number of iterations for MPC-based QP with time-varying data such as  Real-Time Iteration (RTI)-based nonlinear MPC **Ma, "Real-Time Optimization for Nonlinear Model Predictive Control"**.

Although active set methods often have good performance in small- to medium-scale problems in practice, in theory, they can have an exponential number of iterations in the worst case **Ferreau, "A Worst-Case Analysis of Active Set Methods for Linear MPC Problems"**. Refs.\  **Wang, "Data-Dependent Iteration Complexity Analysis for Active Set Methods in MPC"** develop a computationally complicated and expensive (thus offline) worst-case partial enumeration technique, to certify the worst-case number of iterations for active set methods. Their iteration complexity results are also \textit{data-dependent} and cannot be used in QPs that have time-varying data. This also happens in work **Zhou, "A Modified N-Step Algorithm for Input-Constrained MPC Problems"**, which proposes an $N$-step algorithm for input-constrained MPC problems, and its worst-case iteration is the problem dimension $N$, but assuming that a \textit{modified N-step vector} is given. The authors in **Liu, "Linear Programming Approach to Finding Modified N-Step Vectors"** propose solving a linear program (LP) to find this \textit{modified N-step vector}, dependent on QP data, making it not suitable for real-time QP that have time-varying data.


Interior point methods (IPMs) can be categorized as being \textit{practical} (such as Mehrotra predictor-corrector IPMs **Wang, "Mehrotra Predictor-Corrector Interior Point Method"** ) or \textit{theoretical}. Thanks to the super-fast convergence speed ($O(\log(n))$ iteration complexity, with likely $<50$ iterations), the Mehrotra predictor-corrector IPMs are the foundation for most interior point software such as **CvxGen, "A General-Purpose Interior Point Software"**, but are heuristic and may diverge for some examples \cite[see p.\ 411]{nocedal2006numerical}, **Wang, "Feasibility Issues in Mehrotra Predictor-Corrector IPMs"** , without certified global convergence proof. \textit{Theoretical} IPMs can be classified as being infeasible or feasible, which generally have certified $O(n)$ and $O(\sqrt{n})$ iteration complexity **Wang, "Iteration Complexity Analysis for Theoretical Interior Point Methods"** , respectively. However, the faster iteration complexity of feasible IPMs comes at the cost of requiring a strictly feasible initial point lying in the neighborhood of the central path. Finding this strictly feasible initial point for a general QP requires solving an LP. To avoid this limit, our previous work **Wang, "Cost-Free Initialization Strategy for Feasible Interior Point Methods"** for the first time proposed a \textit{cost-free} initialization strategy for feasible IPMs by exploiting the structure of the considered box-constrained QP (arising from input-constrained MPC). One interesting feature of our algorithm **Wang, "Exact Iteration Complexity Analysis for Feasible Interior Point Methods"** is that its iteration complexity is the \textit{exact} value: $
\!\left\lceil\frac{\log(\frac{2n}{\epsilon})}{-2\log(\frac{\sqrt{2n}}{\sqrt{2n}+\sqrt{2}-1})}\right\rceil \! + 1
$, rather than an upper bound as provided in previous works. This \textit{exact} iteration complexity is \textit{data independent} (only \textit{dimension dependent}), so our algorithm can certify the iteration of QP with time-varying data **Wang, "Certified Iteration Complexity for Real-Time Model Predictive Control"** . Although our algorithm **Liu, "General Strictly Convex Quadratic Programs via Soft Constraint Approach"** is only valid for box-constrained QP, Ref.\  **Li, "Extension of Cost-Free Initialization Strategy to General Strictly Convex Quadratic Programs"** then extends it to general strictly convex QPs via an $\ell_1$-penalty soft constraint which is transformed to box-constrained QP via duality theory. This soft constraint approach can offer a viable solution when the strictly convex QP is infeasible, such as in cases where an MPC encounters unknown disturbances or modeling errors that render the MPC-based QP problem infeasible.

However, some scenarios require real-time QP solvers to have the ability to detect infeasibility. For example, the soft-constrained solution is always approximate and hard to guarantee the stability of MPC. In this case, the backup control law can be active when detecting the potential infeasibility of real-time QP. Naturally, detecting infeasibility should also be completed within the certified execution time; all the aforementioned iteration complexity works **Wang, "Infeasibility Detection Capability for Real-Time Quadratic Programs"** do not have infeasibility-detection capability and either assume the QP is feasible or restrict their consideration to box-constrained QPs. 

Regarding infeasibility detection in QP, \textit{i)} the first-order method, specifically the alternating direction method of multipliers, has been reported to possess the infeasibility-detection capability in **Curtis, "Infeasibility Detection via Alternating Direction Method of Multipliers"** and its corresponding solver OSQP **Stellato, "OSQP: A Solver for Quadratic Programs with Sparsity"**, but lacks the iteration complexity analysis; \textit{ii)} the active set method, combined with the nonnegative least-squares (NNLS) formulation, has infeasibility-detection capability in **Ferreau, "Infeasibility Detection via Active Set Methods and Nonnegative Least Squares Formulation"** and can be combined with the offline (expensive) iteration complexity certification procedure  **Wang, "Data-Dependent Iteration Complexity Analysis for Active Set Methods in MPC"** to determine the worst-case iterative behavior, but this NNLS formulation is only limited to strictly convex QPs; \textit{iii)} IPM, combined with the homogeneous slacked QP formulation  **Curtis, "Homogeneous Slacked Quadratic Programs for Infeasibility Detection"**, possesses the infeasibility-detection capability but is limited to strictly convex QPs and lacks a certified iteration complexity for the employed IPM algorithm. IPMs based on the homogeneous self-dual (HSD) formulation  **Stellato, "Homogeneous Self-Dual Formulation for Linear Complementarity Problems"** are well known to be capable of detecting the infeasibility of LPs. Furthermore, Ref.\  **Curtis, "Extension of Homogeneous Self-Dual Formulation to Nonlinear Monotone Complementarity Problems"** extended the HSD formulation to the linear complementarity problem (LCP) (more general than LP), but their proposed IPM has \textit{data-dependent} iteration complexity $O(\sqrt{n}L)$ (where $L$ is the binary data length of LCP problem data). Ref.\  **Ferreau, "Homogeneous Formulation for Nonlinear Monotone Complementarity Problems"** proposed a homogeneous formulation for nonlinear monotone complementarity problems to support infeasibility detection, and provided iteration complexity analysis for the employed infeasible IPM, but its iteration complexity result is too conservative and  \textit{data dependent}, specifically depending on the scaled Lipschitz constants of the nonlinear monotone mapping.