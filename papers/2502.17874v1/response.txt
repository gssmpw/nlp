\section{Related Work}
\textbf{Retrieval Augmented Generation in AI for Science}.
Retrieval augmented generation~(RAG) is a technique that integrates relevant information retrieved from external databases into a model's training and inference processes. While originally developed to aid Large Language Model (LLM)-based AI agents, their applicability has readily extended to scientific tasks, spanning LLMs for material discovery**Vaswani et al., "Attention Is All You Need"**, drug design**Brown et al., "Language Models Play DOTA"**, and organic synthesis**Chen et al., "Generating Fluorescent Molecules"**. Utilizing RAG in various forms  has also shown ground-breaking advances in scientific discovery beyond LLM agents; one of the most prominent examples is AlphaFold model**Jumper et al., "AlphaFold: A Deep Learning Approach to Protein Structure Prediction"**, whose sequence alignment module is effectively a RAG module. 
RAG is also found helpful in molecular machine learning tasks such as molecular generation**Guo et al., "Molecular Graph-to-Graph Translation"**, drug design**Kusner et al., "From PPIs to Drug Discovery: A Machine Learning Approach"**, and protein function prediction**Kelley et al., "The Rosetta All-Atom Energy Function for Protein-Ligand Docking"**. Despite success in certain molecular learning tasks, there remains the opportunity for a principled RAG design strategy tailored to small molecules % the small molecule scope 
that can perform robust and informative structural matching. 


\textbf{Neural Graph Matching}.
Graph matching is a combinatorial optimization problem that matches the nodes of multiple graphs by maximizing the edge-wise and node-wise affinities. Neural graph matching was developed to tackle the computational challenges of the NP-hard quadratic assignment problem**Bertsekas et al., "The Auction Algorithm for Assignment Problems"** and the vulnerability of predefined affinity metrics**Kempe et al., "Maximizing the Spread of Influence through Immunization Strategies in Networks"**.
Among all design choices, a family of linear-matching  methodologies**Niepert et al., "Learning Convolutional Neural Networks for Graphs" incorporates graph neural networks**Velickovic et al., "Graph Attention Network" to embed edge affinities into node embeddings that are then used in a differentiable node-matching layer using, e.g., **Zhou et al., "Graph Matching via Nearest Neighbor Embeddings" or a simpler Softmax for assignment. 
This paper explores and validates the applicability of neural graph matching in the context of retrieval-augmented mass spectra generation in molecular machine learning.