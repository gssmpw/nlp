\section{Related Work}
\label{sec:related_work}

Existing tools support individual issue management tasks. Find Duplicates **Gao, "Duplicate Issue Detection"**__, Probot **Ko, "Probot: A GitHub App for Managing Issues"**__, NextBug **Huang, "NextBug: Identifying Related Issues on GitHub"**__ are plugins for GitHub, Jira **Zhang, "Jira Issue Management"**__, and Bugzilla **Wang, "Bugzilla Bug Tracking System"**__ that identify related issues. These tools rely on information retrieval or classical machine learning models that process issue text to determine issue similarity. Priority Scheduler **Kumar, "Priority Scheduler: Assigning Priority Based on Project Deadlines"**_ is a Jira **Li, "Jira Plugin for Prioritizing Issues"**_ plugin that assigns priority based on project deadlines. \rev{BugLocalizer **Liu, "BugLocalizer: Identifying Buggy Files in Bugzilla"**_ is a Bugzilla **Chen, "Bugzilla Extension for Bug Report Analysis"**_ extension that analyzes bug reports and source code similarities to identify buggy files.} PR-Agent **Wang, "PR-Agent: A Multi-Featured Tool for Managing Pull Requests"**_ is a multi-featured paid tool that applies LLMs, \eg\ **Sutskever, "Attention Is All You Need"**, to perform tasks such as pull request change classification, automatic code review, and documentation. \rev{Additionally, there are tools for reporting **Gupta, "Issue Report Management"**__, identifying bug report components **Kaur, "Bug Report Component Identification"**_, and assessing bug reproduction steps **Soni, "Bug Reproduction Step Analysis"**_. Researchers have proposed automated techniques for duplicate issue detection **Hassan, "Duplicate Issue Detection Using Machine Learning"**, severity prediction **Rahman, "Severity Prediction in Bug Tracking Systems"**, bug localization **Patel, "Bug Localization in Software Development"**, issue categorization **Singh, "Issue Categorization in Bug Tracking Systems"**, and other issue management tasks **Kumar, "Other Issue Management Tasks in Software Development"**. We selected state-of-the-art models, namely **Li, "Recurrent Temporal Attention for Bug Detection"**_ and **Huang, "LongCodeArena: A Deep Learning Framework for Code Analysis"**_, for \toolname's three features, based on a rigorous literature review found in our replication package____.
\looseness=-1

%\os{add one or two sentences stating that there is research that have proposed automated techniques, including X, Y, Z (enumerate several tasks, beyond the tasks that we focus on). And then say that we selected  state of the art models, namely X, Y, Z (add citations), for the three tasks the tools supports, based on a rigorous literature review, which is found in our replication package. }
Compared to prior tools, \toolname stands out as an open-source, easy-to-install solution that seamlessly integrates with GitHub and consolidates multiple features, making it a comprehensive assistant for issue management.
%Compared to prior tools, \toolname stands out as an open-source, easy-to-install tool seamlessly integrated with GitHub and combining multiple features into a single solution. This makes \toolname a comprehensive assistant for issue report management. 
%\rev{Notably, the runtime bug localization feature is particularly novel, as no prior tools localize buggy code files instantly just by analyzing the issue report and repository state.} 
Moreover, \toolname leverages state-of-the-art models that have demonstrated superior performance compared to prior proposed approaches.
\looseness=-1

%We developed \toolname to address several gaps, including the lack of multi-featured open-source issue management tools, outdated duplicate detection solutions, the absence of open-source severity prediction tools, and no existing runtime bug localization tools for instant buggy code file identification.