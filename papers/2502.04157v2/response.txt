\section{Background and Related Works}
\label{sec:background}

Let $\mathcal{P}$ be the set of all possible programs defined on an instruction space $\mathcal{I}$, Ajorian et. al defined an \textit{instruction-independent obfuscation} **Brakerski, "Obfuscating Programs"** as a PPT algorithm $IIO:\mathcal{P}\rightarrow \mathcal{P}$  with the following properties:

\begin{itemize}
	\item[--] \textbf{Functionality preservation}: $\hat p = IIO(p)$ computes the same functionality as input program $p$.
	\item[--] \textbf{Polynomial slowdown}: There exist polynomials $q$ and $r$ such that $|IIO(p)| \leq |p|$ and if $p$ halts within a maximum $t$ steps on input $x$, the obfuscated program halts within $r(t)$ steps on the same input.
	\item[--] \textbf{Unintelligibility}: for any auxiliary input $z$ of polynomial size, for any PPT adversary $A$ there must exist a negligible function $\epsilon$ such that:

	\begin{equation}
	\label{eq:s_unintelligibility}
	\begin{split}
		\big| & \Pr\nolimits_{A(\hat p, z)\rightarrow \hat s_1, \hat s_2; \hat s_1 \neq \hat s_2}[\{\hat s_1, \hat s_2\} \subseteq \mathbb{S} \text{ or } \{\hat s_1, \hat s_2\} \subseteq \mathbb{J}] - \\ 
      		& \Pr\nolimits_{\hat s_1, \hat s_2 \leftarrow \Omega ; \hat s_1 \neq \hat s_2}[\{\hat s_1, \hat s_2\} \subseteq \mathbb{S} \text{ or } \{\hat s_1, \hat s_2\} \subseteq \mathbb{J}] \big| \leq \epsilon(\lambda)
	\end{split}
	\end{equation}
\end{itemize}
where $\lambda$ is a user choice of a security parameter, $\mathbb{S}$ and $\mathbb{J}$ are the sets of essential and junk instructions respectively and $\Omega=set(\hat p)$.