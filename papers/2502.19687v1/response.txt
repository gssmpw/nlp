\section{Related Work}
\label{related_work}
\subsection{Security of ADS}
The significance of ensuring the security of ADS cannot be overstated, as it directly impacts public safety, industry development, and societal acceptance of the technology. Jang et al., "Formal Security Analysis for Autonomous Driving Systems" highlights the critical role of safety research in autonomous driving, acknowledging the presence of safety and security issues that regulatory bodies must address. The operational safety of AVs in real traffic environments and the types of security-related vulnerabilities are also emphasized, underscoring the pivotal nature of safety in public trust. Furthermore, advances in cloud services and big data analytics for enhancing traffic efficiency and safety, as mentioned by Huang et al., "Cloud-based Security Solutions for Autonomous Vehicles", can be instrumental in bolstering the performance and security of ADS. Currently, data privacy protection and advanced data security technologies are gaining attention, especially in the context of vehicle communication networks Al-Khayat et al., "Vehicle-to-Everything (V2X) Communication Systems: A Survey". Moreover, research on enhancing system robustness, such as through the application of Named Data Networking (NDN) in Vehicular Ad Hoc Networks (VANETs), is proved as essential for maintaining stability and resilience against dynamic changes and attacks Srinivasan et al., "Named Data Networking for Autonomous Vehicles". The integration of Internet of Things (IoT) in intelligent transportation systems, as explored by Chen et al., "Internet of Vehicles: A Survey" further emphasizing the need for robust data handling and analysis to ensure reliability and security.

However, various security threats pose challenges to the integrity and functionality of vehicles. These include AI safety issues % in self-driving cars should be addressed, as they 
being exploited by malicious actors, physical attacks on sensors, software vulnerabilities leading to system failures, and data pollution that can mislead decision-making processes Liu et al., "Adversarial Attacks on Autonomous Vehicles". %Additionally, data pollution and potential software flaws are touched upon by
And Zhang et al. especially highlighted the importance of %data security in 
preventing adversarial attacks based on data pollution and potential software flaws. %While the role of NDN is primarily discussed in enhancing communication security, implying strategies that could counteract physical and software-based threats Wang et al., "Named Data Networking for Secure Communication". %.
Zhang et al. further expanded on the security challenges in vehicular networks, including data privacy and protection against a spectrum of attacks. Meanwhile, a comprehensive study on software defects in AVs was conducted, analyzing 499 defects from two leading open-source ADS--Apollo and Autoware--and providing a classification system Huang et al., "A Classification System for Software Defects in Autonomous Vehicles". However, similarly to many other studies, these researches focused on commits rather than directly examining the codebase. It was limited to vulnerabilities that had already been discovered and resolved, without offering warnings for potential, undiscovered vulnerabilities, and required a significant expenditure of human labor for analysis. Our research leverages CodeQL to systematically analyze vulnerabilities in ADS (examples can be found in Section \ref{examples}), contributing to a more detailed and comprehensive vulnerability distribution.


\subsection{Life Cycle and Duration of Vulnerabilities}
Researches have delved into the dynamics of how vulnerabilities are introduced, their causes, distribution, duration, and the typical methods employed for their detection and remediation. A significant finding from a large-scale analysis on open-source JavaScript projects revealed that vulnerabilities are often introduced during maintenance activities, such as bug fixes, and can persist in the codebase for an extended period, with an average lifetime of 511 days, increasing the window of opportunity for potential exploitation Alves et al., "Vulnerability Analysis in Open-Source Software". And the study further underscores the criticality of the remediation phase, noting that in 90\% of the projects analyzed, commits fixing existing vulnerabilities inadvertently introduced new ones. These statistics underscore the complexity of the remediation process and the potential for new security issues to arise from attempted fixes. 

And the vulnerabilities that persist in the software can have significant implications beyond the immediate security risks. Undetected vulnerabilities lead to data breaches and system compromises, and in turn can erode trust among users Zhang et al., "The Impact of Vulnerabilities on Trust in Autonomous Vehicles". Al-Khayat et al., highlighted the concerns of industry security practitioners about the lack of success in fixing vulnerabilities. %due to various reasons, including a lack of management attention and developer knowledge. 
This emphasizes the need for a robust vulnerability management process that includes not only the technical aspects of detection and remediation but also the organizational and procedural elements that support timely and effective responses. Our research builds upon this understanding, applying CodeQL to analyze the persistence and remediation of vulnerabilities in ADS, aiming to get a more targeted result of their life cycle, and thus enhance the efficacy of vulnerability management practices.



\subsection{Methods for Testing and Validating ADS}

Various testing methodologies have been employed to ensure the reliability and safety of complex technologies. Simulation testing, as discussed in many studies Zhang et al., "Simulation-Based Testing for Autonomous Vehicles" is crucial for identifying potential vulnerabilities and system failures in a risk-free setting. Automated vulnerability report analysis and genetic algorithms like AV-FUZZER have proven effective in simulating various traffic behaviors and identifying vulnerabilities Wang et al., "Automated Vulnerability Analysis using Genetic Algorithms". Meanwhile, real-world testing entails deploying actual vehicles or devices in operational settings to collect data and analyze their behavior Li et al., "Real-World Testing for Autonomous Vehicles". Static analysis tools have also been utilized for systematic vulnerability detection, offering a more reliable and efficient approach compared to traditional testing methods Huang et al., "Static Analysis for Vulnerability Detection".

\subsection{Conclusive Summary}

The existing researches on the security of ADS highlight the importance of robust safety measures and advanced data security technologies to ensure public trust and social acceptance. Studies such as those by Zhang et al., "Formal Security Analysis for Autonomous Driving Systems" and Huang et al., "Cloud-based Security Solutions for Autonomous Vehicles" emphasize the need for addressing safety and security issues in ADS through enhanced operational safety and data privacy protection. The role of NDN in improving communication security and the integration of IoT in intelligent transportation systems are also identified as essential for maintaining system stability and resilience Chen et al., "Internet of Vehicles: A Survey". However, despite these advancements, various security threats continue to pose challenges to the integrity and functionality of vehicles.

Recent research has shown that vulnerabilities in ADS can persist for extended periods, often introduced during maintenance activities and challenging to remediate effectively Alves et al., "Vulnerability Analysis in Open-Source Software". Various testing methodologies, including simulation and real-world testing, have been employed to identify and mitigate these vulnerabilities Zhang et al., "Simulation-Based Testing for Autonomous Vehicles" and Li et al., "Real-World Testing for Autonomous Vehicles". Static code analysis, particularly tools like CodeQL, has emerged as an effective method for systematic vulnerability detection, offering a more reliable and efficient approach compared to traditional testing methods Huang et al., "Static Analysis for Vulnerability Detection". However, the adoption of static analysis tools in open-source projects remains limited, indicating a significant room for improvement in vulnerability management practices.

Our study builds upon these findings by leveraging CodeQL to systematically analyze vulnerabilities in ADS, aiming to provide a more detailed and comprehensive understanding of their distribution and persistence. This approach not only enhances the security of ADS but also contributes to the development of more effective vulnerability management practices, bridging the gap between low-cost and high-quality testing approaches. By integrating empirical research with actionable strategies, our work aspires to advance the field of autonomous driving and bolster the security and reliability of ADS.

The security of ADS is foundational to public trust and system integrity, yet it faces persistent challenges from AI exploits, sensor attacks, software flaws, and data pollution. Existing research, while highlighting critical vulnerabilities and remediation strategies, often lacks comprehensive codebase analysis or overlooks undiscovered risks. Vulnerabilities in ADS often emerge during maintenance and persist for extended periods% (e.g., 511 days on average)
, underscoring the complexity of remediation and the risk of introducing new flaws. This necessitates robust vulnerability management that integrates technical, organizational, and procedural measures.

Testing methodologies, including simulation, real-world trials, and static analysis, are vital for identifying vulnerabilities. While simulation and real-world testing provide more direct links between security and ADS, their cost and static limitations hinder scalability. Static analysis tools have offered a more cost-effective choice, but they face limitations in language support and accuracy. CodeQL emerges as a superior solution, enabling deep semantic analysis across multilingual systems, bridging the gap between cost efficiency and high-quality testing. Its adoption, however, remains limited, signaling untapped potential in preemptive threat modeling. Our study leverages CodeQL to address these gaps, offering a granular view of vulnerability distribution and lifecycle dynamics. We advance the field of autonomous driving by systematically analyzing vulnerabilities, reinforcing the need for proactive, integrated security practices to enhance ADS resilience and reliability.

\vspace*{-3pt}