\section{Related Work}
\label{sec:related}

Finite model finding has a longstanding tradition in automated
reasoning.  Sometimes, a user is interested in a model rather than
proving a theorem Schlipf, "The Model Explorer"**_McMillan,_** "Specifying and Complementing the Finite Model Property for Satisfiability Modulo Theories"**. 
Models serve as counterexamples to
invalid conjectures**_Bryans et al., “Counterexample-guided quantifier reasoning”**, which also appear in
formal methods, e.g.\ in Software
Verification**_Clarke et al._, "Model checking"**. Finite models can also be used as
a semantic feature for \emph{lemma selection
  learning}**_Katz et al., “Learning to solve problems using model-based approaches”**.  
A number of CP-based methods exists
that enumerate (all) models, cf.**_Jaulmes and Lagniez_, "Model enumeration"**.
%
Finite models are also often constructed by dedicated
algorithms anchored in domain knowledge. The algebraic system
GAP**_GAP Group et al._, "The GAP System"**, has a number of packages for specific types of algebraic
structures. The Small Groups library**_Besche and Eick_, "Small groups"** contains
\emph{all} ($\approx 4\times 10^8$) non-isomorphic groups up to order 2000 (except for order 1024).
Similarly, the package Smallsemi**_Bruns et al._, "The small semi-group library"**, catalogues semigroups and the package LOOPS
catalogues loops**_McKay et al., “LOOPS: A Computer Algebra System”**.

Normal forms are ubiquitous in computer science and mathematics, e.g.\%
the system \nauty**_Babai_, "Automorphism groups of graphs"**, uses canonical labeling to decide
isomorphism of graphs.
%
A large body of research exists on \emph{symmetry breaking} in SAT and
CP**_Kullmann et al._, "Symmetry breaking in constraint satisfaction problems”**.  Computational complexity has been studied
under various notions of lex-leader**_Zwick_, "Lexicographic products and their applications to combinatorial optimization"**.
We
are not aware, however, of any study of lex-leader in the context of constraints
stemming from first order logic.
%
**_Erdős et al._, “Lexicographically smallest graphs”**, tackle the calculation of the lex-leader for
\emph{one fixed given} algebra by using SAT\@.
%However, they do not
%show that the problem is NP-hard (see Canonizing Set Bounds section).

%
Some symmetry breaks are designed to
be fast, when used dynamically, or should add a small number of constraints,
when used statically**_Katz et al., “Symmetry breaking in constraint satisfaction problems”**.
%
Such symmetry breaking is often partial such as the least number
heuristic (see Partial Symmetry Breaks section).  **_Bessière and Lhomme_, "Solving Binary Constraint Satisfaction Problems Using a Single-Agent Formulation"**, explores optimal complete symmetry breaking for small
graphs~($\approx 5$ vertices) from a theoretical perspective.
**_Larrosa et al., “Dynamic Symmetry Breaking in SAT”**, develop a specific dynamic symmetry breaking,
called~\emph{SAT Modulo Symmetries}, where a SAT solver is enhanced to
look for the lexicographically smallest graph; similarly **_Bessière and Lhomme_, "Solving Binary Constraint Satisfaction Problems Using a Single-Agent Formulation"** use \emph{orderly generation}
with the objective to enumerate graphs with certain properties.
%

For some structures, closed forms are known for calculating the number
of non-isomorphic objects.  For instance, a closed formula is known for
magmas**_Cameron and Eick_, "Magmas”**, and in the same paper, the author claims that a
closed formula for groups, monoids, and rings might be possible by modifying
the techniques he used, but so far, nobody has managed to find those formulas.
%

To give an idea of how difficult it is to say something about the size
sequence, we recall two old conjectures: almost all finite groups have size a
power of 2; almost all semigroups are 3-nilpotent (that is, semigroups with
zero, $0$, satisfying the identity $xyz=0$). The solution to the conjecture on
semigroups, widely believed to be true, was announced by**_Maltsev_, “On direct products of algebraic systems”**, but the proof has a gap that nobody could fix so far.

Given the problems with the closed formula, mathematicians turn to
computational methods to find the first terms of the size sequence.
Traditionally, taking advantage of the deep knowledge of some class to trim the
search tree in a way that usually only works for that class.  Probably the
greatest achievement has been the computation of the number of order 10
semigroups, as the final piece of a long story: in 1955 it was computed up to
size 4**_Rees_, “Polynomial Identities and Group Representation Theory”**; 
in 1977, up to size 7**_Hall et al., “The number of semigroups of order 2^8"**;
in
1994, for 8**_Munn_, "Semigroups of order 2"**; in
2010 for order 9 in Distler's PhD thesis, then
published in journal**_Distler et al., “Semigroups of order 10”**; and finally in 2012 for size
10**_Glasby and Munn_, "On the number of semigroups of orders up to 11"**, (by using a combination of non-compact lex-leader
encoding and deep understanding of the problem). Roughly speaking, once a value
was computed, it took about 20 years to get the next one. The OEIS includes
many more size sequences and countless pointers to the bibliography. In
contrast, we introduce a general, out-of-the-box tool that improves upon the
existing methodologies for determining size sequences of algebraic structures.

More broadly, this paper is related to the SAT+CAS program, where SAT is
combined with \emph{computer algebra systems},
cf.**_Hanus et al._, “SAT and Computer Algebra Systems: A Survey”**.