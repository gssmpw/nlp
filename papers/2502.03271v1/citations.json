[
  {
    "index": 0,
    "papers": [
      {
        "key": "jeon2017hextype",
        "author": "Jeon, Yuseok and Biswas, Priyam and Carr, Scott and Lee, Byoungyoung and Payer, Mathias",
        "title": "Hextype: Efficient detection of type confusion errors for c++"
      },
      {
        "key": "haller2016typesan",
        "author": "Haller, Istvan and Jeon, Yuseok and Peng, Hui and Payer, Mathias and Giuffrida, Cristiano and Bos, Herbert and Van Der Kouwe, Erik",
        "title": "TypeSan: Practical type confusion detection"
      },
      {
        "key": "duck2018effectivesan",
        "author": "Duck, Gregory J and Yap, Roland HC",
        "title": "EffectiveSan: type and memory error detection using dynamically typed C/C++"
      },
      {
        "key": "lee2015type",
        "author": "Lee, Byoungyoung and Song, Chengyu and Kim, Taesoo and Lee, Wenke",
        "title": "Type casting verification: Stopping an emerging attack vector"
      }
    ]
  },
  {
    "index": 1,
    "papers": [
      {
        "key": "haller2016typesan",
        "author": "Haller, Istvan and Jeon, Yuseok and Peng, Hui and Payer, Mathias and Giuffrida, Cristiano and Bos, Herbert and Van Der Kouwe, Erik",
        "title": "TypeSan: Practical type confusion detection"
      }
    ]
  },
  {
    "index": 2,
    "papers": [
      {
        "key": "pradel2015typedevil",
        "author": "Pradel, Michael and Schuh, Parker and Sen, Koushik",
        "title": "TypeDevil: Dynamic type inconsistency analysis for JavaScript"
      },
      {
        "key": "9842686",
        "author": "Sun, Lili and Wu, Chenggang and Wang, Zhe and Kang, Yan and Tang, Bowen",
        "title": "KOP-Fuzzer: A Key-Operation-based Fuzzer for Type Confusion Bugs in JavaScript Engines"
      },
      {
        "key": "7958598",
        "author": "Brown, Fraser and Narayan, Shravan and Wahby, Riad S. and Engler, Dawson and Jhala, Ranjit and Stefan, Deian",
        "title": "Finding and Preventing Bugs in JavaScript Bindings"
      }
    ]
  },
  {
    "index": 3,
    "papers": [
      {
        "key": "Qin2020ReplicationPF",
        "author": "Boqin Qin and Yilun Chen and Zeming Yu and Linhai Song and Yiying Zhang",
        "title": "Replication Package for Article: Understanding Memory and Thread Safety Practices and Issues in Real-World Rust Programs"
      },
      {
        "key": "Evans2020IsRU",
        "author": "Ana Nora Evans and Bradford Campbell and Mary Lou Soffa",
        "title": "Is Rust Used Safely by Software Developers?"
      },
      {
        "key": "Xu2020MemorySafetyCC",
        "author": "Hui Xu and Zhuangbin Chen and Mingshen Sun and Yangfan Zhou and Michael R. Lyu",
        "title": "Memory-Safety Challenge Considered Solved? An In-Depth Study with All Rust CVEs"
      },
      {
        "key": "zhang2022towards",
        "author": "Zhang, Yuchen and Zhang, Yunhang and Portokalidis, Georgios and Xu, Jun",
        "title": "Towards understanding the runtime performance of rust"
      },
      {
        "key": "papaevripides2021exploiting",
        "author": "Papaevripides, Michalis and Athanasopoulos, Elias",
        "title": "Exploiting mixed binaries"
      },
      {
        "key": "mergendahl2022cross",
        "author": "Mergendahl, Samuel and Burow, Nathan and Okhravi, Hamed",
        "title": "Cross-Language Attacks."
      },
      {
        "key": "rivera2021keeping",
        "author": "Rivera, Elijah and Mergendahl, Samuel and Shrobe, Howard and Okhravi, Hamed and Burow, Nathan",
        "title": "Keeping safe rust safe with galeed"
      },
      {
        "key": "kirth2022pkru",
        "author": "Kirth, Paul and Dickerson, Mitchel and Crane, Stephen and Larsen, Per and Dabrowski, Adrian and Gens, David and Na, Yeoul and Volckaert, Stijn and Franz, Michael",
        "title": "PKRU-Safe: Automatically locking down the heap between safe and unsafe languages"
      }
    ]
  },
  {
    "index": 4,
    "papers": [
      {
        "key": "Xu2020MemorySafetyCC",
        "author": "Hui Xu and Zhuangbin Chen and Mingshen Sun and Yangfan Zhou and Michael R. Lyu",
        "title": "Memory-Safety Challenge Considered Solved? An In-Depth Study with All Rust CVEs"
      }
    ]
  },
  {
    "index": 5,
    "papers": [
      {
        "key": "rivera2021keeping",
        "author": "Rivera, Elijah and Mergendahl, Samuel and Shrobe, Howard and Okhravi, Hamed and Burow, Nathan",
        "title": "Keeping safe rust safe with galeed"
      },
      {
        "key": "kirth2022pkru",
        "author": "Kirth, Paul and Dickerson, Mitchel and Crane, Stephen and Larsen, Per and Dabrowski, Adrian and Gens, David and Na, Yeoul and Volckaert, Stijn and Franz, Michael",
        "title": "PKRU-Safe: Automatically locking down the heap between safe and unsafe languages"
      }
    ]
  },
  {
    "index": 6,
    "papers": [
      {
        "key": "Qin2020ReplicationPF",
        "author": "Boqin Qin and Yilun Chen and Zeming Yu and Linhai Song and Yiying Zhang",
        "title": "Replication Package for Article: Understanding Memory and Thread Safety Practices and Issues in Real-World Rust Programs"
      }
    ]
  },
  {
    "index": 7,
    "papers": [
      {
        "key": "Yechan2021Rudra",
        "author": "Bae, Yechan and Kim, Youngsuk and Askar, Ammar and Lim, Jungwon and Kim, Taesoo",
        "title": "Rudra: Finding Memory Safety Bugs in Rust at the Ecosystem Scale"
      }
    ]
  },
  {
    "index": 8,
    "papers": [
      {
        "key": "Zhuohua2021MirChecker",
        "author": "Li, Zhuohua and Wang, Jincheng and Sun, Mingshen and Lui, John C.S.",
        "title": "MirChecker: Detecting Bugs in Rust Programs via Static Analysis"
      }
    ]
  }
]