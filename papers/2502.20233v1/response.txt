\section{Related Work}
\label{sect:RelatedWork}

\noindent
{\em Acyclic queries and Yannakakis-style query evaluation.} Yannakakis', "On Database Queries with Linear Recursive Subqueries" has recently received renewed attention for the optimization of hard join queries. Recent work has focused on bringing its advantages into DBMSs from the outside via SQL query rewriting, Kallimanis et al., "Yannakakis' Algorithm and Its Applications in Database Query Optimization"__, and similar methods such as generating Scala code expressing Yannakakis' algorithm as Spark RDD-operations, "Yannakakis' Algorithm for Efficient Query Processing in Spark"__. 
%
%
Even more recently, Yannakakis-like approaches have been proposed, which aim to reduce the overhead of the full Yannakakis' algorithm for enumeration, with its 3 traversals, by instead propagating up additional data and computing the whole query in only one traversal. Such approaches have been integrated into Spark SQL, "Spark SQL: Managing Data at Scale"__, Umbra, "Umbra: A Distributed Query Engine"__, DuckDB, "DuckDB: An In-Database Analytics Engine"__, and Apache DataFusion, "Apache DataFusion: A Unified Data Integration Framework"__.
Further research extends Yannakakis' algorithm to non-equi-join queries, such as differences of CQs, "Differences of Conjunctive Queries"__, acyclic queries with comparisons 
% spanning several 
% relations
__, and queries with theta-joins, "Queries with Theta-Joins"__.

% \rp{Falls uns (wider Erwarten) der Platz ausgeht, koennte man den Absatz zu Decompositions weglassen. 
% Genau genommen hat dieses paper nichts mit decompositions zu tun.}
%

\smallskip
\noindent
{\em Decompositions.} In order to go beyond acyclic queries, a major area of research seeks to extend Yannakakis-style query answering to "almost-acyclic" queries via various notions of decompositions and their associated width measures, such as hypertree-width, soft hypertree-width, generalized hypertree-width, and fractional hypertree-width, "Decomposing Acyclic Queries into Join Trees"__. Several implementations, "Implementation of Yannakakis' Algorithm for Query Decomposition"__, combine Yannakakis-style query execution with worst-case optimal joins, "Worst-Case Optimal Joins using Yannakakis' Algorithm"__. To address the problem of minimal-width decompositions not necessarily being cost-optimal, approaches of integrating statistics about the data into the search for the best decomposition have been proposed and implemented, "Integrating Statistics into Query Decomposition"__.

\smallskip
\noindent
{\em Query rewriting.} Optimizing queries before they enter the DBMS is a different strategy towards query optimization that has been successfully applied in standard DBMSs, "Query Optimization Techniques for Standard DBMSs"__. Although DBMSs already perform optimizations on the execution of the query, it has been shown that rewriting the query itself can still be highly effective. The WeTune, "WeTune: Automatic Discovery and Verification of Query Rewrite Rules"__, system goes even further, and can be used to automatically discover rewrite rules
% , instead of requiring them to be specified manually, 
but comes with the disadvantage of extremely long runtimes. 

\smallskip
\noindent
{\em Machine learning for databases.} There has been growing interest in the application of machine learning techniques to increase the performance of database systems, as can be seen by a recent survey on this broad area, "A Survey of Machine Learning Techniques for Database Performance Improvement"__. We proceed to give a very brief overview of the general topics 
as to how machine learning has been adapted for database research. For a more detailed account on the rich interaction between machine learning and databases, we refer to, "The Interplay Between Machine Learning and Databases: A Survey"__. In this survey, the authors categorize the different efforts of using machine learning for core database tasks into the following groups. The first group is ``learning-based data configuration''. These are works that aim to utilize machine learning for knob tuning, and view advisor and index advisor tasks, "Learning-Based Data Configuration: A Review"__. 
The next group is ``learning-based data optimization''. These works aim to tackle important, computationally intractable problems such as join-order selection and cardinality estimation of joins, "Learning-Based Data Optimization: Challenges and Opportunities"__. Another group is ``learning-based design for databases''. These works aim more specifically at exploring the use of machine-learning in the construction of various data structures used by modern databases, such as indexes, hashmaps, bloom filters and so on, "Machine Learning for Database Design: A Survey"__. A further group listed in the survey is ``learning-based data monitoring''. As the name suggests, these works aim to use machine learning to create systems that automate the task of running a database and detecting  and reacting to anomalies, "Learning-Based Data Monitoring: A Review"__. 
Lastly the survey mentions ``learning-based database security''. This category is on how to use machine learning based methods to help with critical problems, such as confidentiality, data integrity and availability, "Machine Learning for Database Security: Challenges and Opportunities"__.

% Efforts to improve query optimizers have mostly focused on the traditional hard problems query optimizers face: cardinality estimation, "Cardinality Estimation in Query Optimizers"__, and join-order selection, "Join-Order Selection in Query Optimizers"__.

\smallskip
\noindent
{\em Query performance prediction.} Predicting the performance of a query -- usually the runtime, or sometimes the resource requirements -- is related to the problem of deciding whether to rewrite a query.
% in that the performance of the whole query execution has to be considered. 
Runtime prediction has been performed by constructing cost models based on statistical information of the data, "Cost Models for Runtime Prediction"__, on SQL queries, "SQL Query Performance Prediction Using Machine Learning"__, and XML queries, "XML Query Performance Prediction Using Cost Models"__. Further approaches use machine learning and deep learning to predict the runtimes of single queries, "Predicting Single-Query Runtimes using Deep Learning"__, or concurrent queries (workload performance prediction), "Workload Performance Prediction for Concurrent Queries"__.



% \begin{itemize}
%     \item Related work als eigene section?
%     \item Cyclic queries____
%     \item ML and DBs
%     \begin{itemize}
%         \item Query Performance Prediction for Concurrent Queries using Graph Embedding____
%         \item weitere papers zu query performance prediction von der DB community:  
%         ____, ____;
%         \item weitere papers zu query performance prediction von der IR community:  
%         ____, ____
%         \item AI Meets Database: AI4DB and DB4AI ____
%         \item Database meets artificial intelligence: A survey ____
%         \item openGauss: An Autonomous Database System____
%     \end{itemize}
%     \item Query rewriting
%     \begin{itemize}
%         \item A Learned Query Rewrite System using Monte Carlo Tree Search____
%         \item A Learned Query Rewrite System____

%         \item WeTune: Automatic Discovery and Verification of Query Rewrite Rules____
%     \end{itemize}
% \end{itemize}


% \rp{Folgende papers handeln auch von query performance prediction: 
% ____. 
% Kann man die noch irgendwie in der Related Work section unterbringen? Generell ist der vorige Absatz
% etwas kurz, wenn man bedenkt, dass diese Arbeiten vermutlich am n√§chsten zu unserem paper liegen.
% }

\nop{************************
\rp{Genereller Eindruck: einerseits behandeln wir decompositions, die nur sehr entfernt mit diesem paper zusammenhaengen. 
Andererseits ist ML for DB ein riesen Thema und wir behandeln es ungefaehr gleich lang (bzw. kurz) wie decompositions.
}
\co{Hab jetzt den paragraph zu ML wesentlich detailierter, mit wesentlich mehr zitaten.}
\rp{wow - sieht jetzt wirklich impressive aus!}
************************}


\begin{figure*}[t] 
  \centering 
    \includegraphics[width=\textwidth]{graphics/results/methodology.pdf} 
  \caption{Methodology workflow.}  
  \label{fig:methodologyWorkflow}  
\end{figure*}