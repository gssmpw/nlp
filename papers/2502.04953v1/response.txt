\section{Background and Related Work}
\label{sec:background}
In this section, we first introduce the definitions of the common terms we will use hereafter in this paper. Then, we summarize the other survey works that partially share the relevant interests of our study and discuss the differences between them and ours.

\subsection{Base Definitions}
\label{subsec:definitions}
\noindent\textbf{Vulnerability.} We adhere to the definition of the US National Institute of Standards and Technology (NIST), which describes a vulnerability as \textit{``a weakness in an information system, system security procedures, internal controls, or implementation that could be exploited or triggered by a threat source''}.\footnote{Definition of vulnerability according to NIST: \url{https://csrc.nist.gov/glossary/term/vulnerability}}

\noindent\textbf{Exploit.} There is no standardized definition for an exploit. Hence, we define it as a code snippet, program, user input, or test case designed and crafted to take advantage of a software application or system security vulnerability. Our definition is in line with the one given by Cisco.\footnote{Cisco's definition of an exploit: \url{https://www.cisco.com/c/en/us/products/security/advanced-malware-protection/what-is-exploit.html}}

\noindent\textbf{Automated Exploit Generation (AEG).} AEG refers to the class of techniques that aims to generate a working exploit for a given vulnerability in an automated manner.
The concept has gained popularity since it was used by Avgerinos et al., **Avgerinos, T., Shanbhag, T., Reardon, J., Bauer, L., & Bunescu, R., "Detection of Malicious Behavior in Android Apps"**__**Feng, Q., Li, X., Zhang, S., Wang, C., & Zou, D., "Exploit Generation with Genetic Algorithm"**.
An AEG approach can employ other automated program analysis and testing techniques like symbolic execution or genetic algorithms.
\ifthenelse{\boolean{deliverable}}
{}
{\ema{Need some references for SE-based and GA-based AEG.}}

%\subsection{Scope}
%\cuong{Declare a clear scope: AEG and Security Testing, not to focus to much on Fuzzing}

\subsection{Related Secondary Studies}
\label{subsec:related}

Over the years, several secondary studies concerning exploit generation and security testing in general have been published.
%
Table~\ref{tbl:related-surveys} highlights the main differences between six secondary studies related to our work. The first three columns in Table~\ref{tbl:related-surveys} indicate the references, published year, and the type of secondary studies.
In this respect, we mapped four types:
\begin{itemize}
    \item \textbf{Comparison} study, comparing the main characteristics of several tools and techniques, analyzing what they can do and what they cannot.
    \item \textbf{State-of-the-art (SoTA)} summary, recapping the main facts on the matter, like explaining the various security testing activities.
    \item \textbf{Mapping study}, presenting the key characteristics and findings found in research papers on the matter.
    \item \textbf{Systematic literature review (SLR)}, presenting a fully-fledged SLR and answering specific research questions to generate new knowledge.
\end{itemize}

\input{tables/related}

The next two columns show whether the work has systematically surveyed the literature and whether the study raised and answered some research questions.
The symbol ``\ding{51}'' indicates the full application of that aspect, while the symbol ``\ding{109}'' indicates no application at all.
Furthermore, the symbol ``\ding{119}'' indicates partial application.
The last three columns show if the study covered the main domains onto which we focus in this study: \textit{AEG}, \textit{Security Testing}, and \textit{Fuzzing}.
\ifthenelse{\boolean{deliverable}}
{}
{\ema{We need to clarify the meaning of these categories. In particular, what is AEG here? Besides, also "security testing" is rather general.}}

As seen in Table~\ref{tbl:related-surveys}, most of the existing surveys follow a systematic approach, except for the works of Shahriar et al., **Shahriar, H. & Ziaei, N., "Survey on Automated Vulnerability Detection and Exploit Generation Techniques"**, and Felderer et al., **Felderer, M., Biffl, S., & Aurum, A., "Systematic Review of Software Security Testing"** , which do not explain the process they followed.
Only two works derived an explicit set of research questions, aiming to answer them and generate new knowledge on the matter,**Mavroegiani, P. et al., "Exploit Generation for Android Malware Detection"**.
\ifthenelse{\boolean{deliverable}}
{}
{\ema{Add a more detailed explanation of what was done in such works. Also, the SLR on search-based security testing published recently should be added.}}
Regarding the domains, all related studies we found focus on security testing and do not include any works from AEG or Fuzzing for review. 
%
In this respect, this study aims to fill the gaps in the coverage of domains for AEG and Security testing techniques.
\ifthenelse{\boolean{deliverable}}
{}
{\ema{This explanation about fuzzing should be moved in Section 3 and mentioned partially in Section 1. I don't see here fitting that much}}
Despite fuzzing itself was not in our scope at first as it can be considered as a descendant of security testing; however, we still group a number of the techniques that we found in our study as fuzzing techniques (denote with the symbol ``\ding{119}'' in the Table~\ref{tbl:related-surveys}, meaning \textit{``partially cover''}).