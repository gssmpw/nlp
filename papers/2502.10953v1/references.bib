

@article{Chen2017ApplicationOF,
  title={Application of Fault Tree Analysis and Fuzzy Neural Networks to Fault Diagnosis in the Internet of Things (IoT) for Aquaculture},
  author={Yingyi Chen and Zhumi Zhen and Huihui Yu and Jing Xu},
  journal={Sensors (Basel, Switzerland)},
  year={2017},
  volume={17},
  url={https://api.semanticscholar.org/CorpusID:5494382}
}

@inproceedings{10.1145/3120459.3120471,
author = {Duc, Anh Nguyen and Jabangwe, Ronald and Paul, Pangkaj and Abrahamsson, Pekka},
title = {Security challenges in IoT development: a software engineering perspective},
year = {2017},
isbn = {9781450352642},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3120459.3120471},
doi = {10.1145/3120459.3120471},
abstract = {The rapid growth of Internet-of-things (IoT) software applications has driven both practitioners and researchers' attention to methodological approaches for secure IoT development. Security issues for IoT is special in the way that they include not only software, but also hardware and network concerns. With the aim at proposing a methodological approach for secure IoT application development, we investigated what are security challenges in the context of IoT development. We reviewed literature and investigated two industry cases. The preliminary finding results in a list of 17 security challenges with regards to technical, organizational and methodological perspectives. Cross-case comparison provides initial explanation about the less emphasis on methodological and organizational security concerns in our cases.},
booktitle = {Proceedings of the XP2017 Scientific Workshops},
articleno = {11},
numpages = {5},
keywords = {IoT, internet-of-thing, security challenge, security method, software engineering, software security},
location = {Cologne, Germany},
series = {XP '17}
}
@article{10.1145/3212695,
author = {Allamanis, Miltiadis and Barr, Earl T. and Devanbu, Premkumar and Sutton, Charles},
title = {A Survey of Machine Learning for Big Code and Naturalness},
year = {2018},
issue_date = {July 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {51},
number = {4},
issn = {0360-0300},
url = {https://doi.org/10.1145/3212695},
doi = {10.1145/3212695},
abstract = {Research at the intersection of machine learning, programming languages, and software engineering has recently taken important steps in proposing learnable probabilistic models of source code that exploit the abundance of patterns of code. In this article, we survey this work. We contrast programming languages against natural languages and discuss how these similarities and differences drive the design of probabilistic models. We present a taxonomy based on the underlying design principles of each model and use it to navigate the literature. Then, we review how researchers have adapted these models to application areas and discuss cross-cutting and application-specific challenges and opportunities.},
journal = {ACM Comput. Surv.},
month = jul,
articleno = {81},
numpages = {37},
keywords = {Big code, code naturalness, machine learning, software engineering tools}
}

@article{Naveed2023ACO,
  title={A Comprehensive Overview of Large Language Models},
  author={Humza Naveed and Asad Ullah Khan and Shi Qiu and Muhammad Saqib and Saeed Anwar and Muhammad Usman and Nick Barnes and Ajmal S. Mian},
  journal={ArXiv},
  year={2023},
  volume={abs/2307.06435},
  url={https://api.semanticscholar.org/CorpusID:259847443}
}

@article{Enis2024FromLT,
  title={From LLM to NMT: Advancing Low-Resource Machine Translation with Claude},
  author={Maxim Enis and Mark Hopkins},
  journal={ArXiv},
  year={2024},
  volume={abs/2404.13813},
  url={https://api.semanticscholar.org/CorpusID:269292906}
}


@misc{web4,
  title        = {community.home-assistant.io/},
  author       = {community.home-assistant},
  year         = 2024,
  note         = {\url{https://community.home-assistant.io/} [Accessed: December 14, 2024]}
}

@misc{web3,
  title        = {analytics.home-assistant.io/},
  author       = {anaytic},
  year         = 2024,
  note         = {\url{https://analytics.home-assistant.io/} [Accessed: December 14, 2024]}
}

@misc{web2,
  title        = {Claude 3.5 Sonnet vs GPT-4o},
  author       = {vellum},
  year         = 2024,
  note         = {\url{https://www.vellum.ai/blog/claude-3-5-sonnet-vs-gpt4o} [Accessed: December 14, 2024]}
}

@misc{web1,
  title        = {Analysis: GPT-4o vs GPT-4 Turbo},
  author       = {vellum},
  year         = 2024,
  note         = {\url{https://www.vellum.ai/blog/analysis-gpt-4o-vs-gpt-4-turbo} [Accessed: December 14, 2024]}
}

@article{hurst2024gpt,
  title={Gpt-4o system card},
  author={Hurst, Aaron and Lerer, Adam and Goucher, Adam P and Perelman, Adam and Ramesh, Aditya and Clark, Aidan and Ostrow, AJ and Welihinda, Akila and Hayes, Alan and Radford, Alec and others},
  journal={arXiv preprint arXiv:2410.21276},
  year={2024}
}


@inproceedings{10.1145/3650105.3652291,
author = {Khakzad Shahandashti, Kimya and Sivakumar, Mithila and Mohajer, Mohammad Mahdi and Boaye Belle, Alvine and Wang, Song and Lethbridge, Timothy},
title = {Assessing the Impact of GPT-4 Turbo in Generating Defeaters for Assurance Cases},
year = {2024},
isbn = {9798400706097},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3650105.3652291},
doi = {10.1145/3650105.3652291},
abstract = {Assurance cases (ACs) are structured arguments that allow verifying the correct implementation of the created systems' non-functional requirements (e.g., safety, security). This allows for preventing system failure. The latter may result in catastrophic outcomes (e.g., loss of lives). ACs support the certification of systems in compliance with industrial standards, e.g., DO-178C and ISO 26262. Identifying defeaters ---arguments that challenge these ACs --- is crucial for enhancing ACs' robustness and confidence. To automatically support that task, we propose a novel approach that explores the potential of GPT-4 Turbo, an advanced Large Language Model (LLM) developed by OpenAI, in identifying defeaters within ACs formalized using the Eliminative Argumentation (EA) notation. Our preliminary evaluation assesses the model's ability to comprehend and generate arguments in this context and the results show that GPT-4 turbo is very proficient in EA notation and can generate different types of defeaters.},
booktitle = {Proceedings of the 2024 IEEE/ACM First International Conference on AI Foundation Models and Software Engineering},
pages = {52â€“56},
numpages = {5},
keywords = {large language models, assurance cases, assurance defeaters, system certification, FM for Requirement Engineering},
location = {Lisbon, Portugal},
series = {FORGE '24}
}

@inproceedings{sagodi2024reality,
  title={Reality check: assessing GPT-4 in fixing real-world software vulnerabilities},
  author={S{\'a}godi, Zolt{\'a}n and Antal, G{\'a}bor and Bogenf{\"u}rst, Bence and Isztin, Martin and Heged{\H{u}}s, P{\'e}ter and Ferenc, Rudolf},
  booktitle={Proceedings of the 28th International Conference on Evaluation and Assessment in Software Engineering},
  pages={252--261},
  year={2024}
}

@unknown{unknown,
author = {Brown, Tom and Mann, Benjamin and Ryder, Nick and Subbiah, Melanie and Kaplan, Jared and Dhariwal, Prafulla and Neelakantan, Arvind and Shyam, Pranav and Sastry, Girish and Askell, Amanda and Agarwal, Sandhini and Herbert-Voss, Ariel and Krueger, Gretchen and Henighan, Tom and Child, Rewon and Ramesh, Aditya and Ziegler, Daniel and Wu, Jeffrey and Winter, Clemens and Amodei, Dario},
year = {2020},
month = {05},
pages = {},
title = {Language Models are Few-Shot Learners},
doi = {10.48550/arXiv.2005.14165}
}

@article{achiam2023gpt,
  title={Gpt-4 technical report},
  author={Achiam, Josh and Adler, Steven and Agarwal, Sandhini and Ahmad, Lama and Akkaya, Ilge and Aleman, Florencia Leoni and Almeida, Diogo and Altenschmidt, Janko and Altman, Sam and Anadkat, Shyamal and others},
  journal={arXiv preprint arXiv:2303.08774},
  year={2023}
}
@inproceedings{duc2017security,
  author = {Anh Nguyen Duc and Ronald Jabangwe and Pangkaj Paul and Pekka Abrahamsson},
  title = {Security Challenges in IoT Development: A Software Engineering Perspective},
  booktitle = {Proceedings of XP Scientific Workshops (XP)},
  year = {2017}
}

@article{chen2017application,
  author = {Yingyi Chen and Zhumi Zhen and Huihui Yu and Jing Xu},
  title = {Application of Fault Tree Analysis and Fuzzy Neural Networks to Fault Diagnosis in the Internet of Things (IoT) for Aquaculture},
  journal = {Sensors},
  volume = {17},
  number = {1},
  pages = {153},
  year = {2017}
}

@inproceedings{makhshari2021iot,
  author = {Amir Makhshari and Ali Mesbah},
  title = {IoT Bugs and Development Challenges},
  booktitle = {Proceedings of International Conference on Software Engineering (ICSE)},
  pages = {460--472},
  year = {2021}
}

@article{bertino2016internet,
  author = {Elisa Bertino and Kim-Kwang Raymond Choo and Dimitrios Georgakopolous and Surya Nepal},
  title = {Internet of Things (IoT): Smart and Secure Service Delivery},
  journal = {ACM Transaction on Internet Technology},
  volume = {16},
  number = {4},
  year = {2016}
}

@article{wu2015collaborative,
  author = {Zhendong Wu and Kai Lu and Xiaoping Wang and Xu Zhou},
  title = {Collaborative Technique for Concurrency Bug Detection},
  journal = {International Journal of Parallel Programming},
  volume = {43},
  number = {2},
  pages = {260--285},
  year = {2015}
}

@article{sajid2016data,
  author = {Anam Sajid and Haider Abbas},
  title = {Data Privacy in Cloud-Assisted Healthcare Systems: State of the Art and Future Challenges},
  journal = {Journal of Media Systems},
  volume = {40},
  number = {6},
  pages = {1--16},
  year = {2016}
}

@inproceedings{ahmad2016model,
  author = {Abbas Ahmad and Fabrice Bouquet and Elizabeta Fourneret and Franck Le Gall and Bruno Legeard},
  title = {Model-based Testing as a Service for IoT Platforms},
  booktitle = {Proceedings of International Symposium on Leveraging Applications of Formal Methods (ISoLA)},
  publisher = {Springer},
  pages = {727--742},
  year = {2016}
}

@inproceedings{newcomb2017iota,
  author = {Julie L. Newcomb and Satish Chandra and Jean-Baptiste Jeannin and Cole Schlesinger and Manu Sridharan},
  title = {{IOTA}: A Calculus for Internet of Things Automation},
  booktitle = {Proceedings of ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software (Onward)},
  pages = {119--133},
  year = {2017}
}

@article{gutierrez2019evolutionary,
  author = {Lorena GutiÃ©rrez-MadroÃ±al and Antonio GarcÃ­a-DomÃ­nguez and Inmaculada Medina-Bulo},
  title = {Evolutionary Mutation Testing for IoT with Recorded and Generated Events},
  journal = {Software: Practice and Experience},
  volume = {49},
  number = {4},
  pages = {640--672},
  year = {2019}
}

@article{gutierrez2018iot,
  author = {{Lorena GutiÃ©rrez-MadroÃ±al} and Inmaculada Medina-Bulo and Juan JosÃ© DomÃ­nguez-JimÃ©nez },
  title={IoT-TEG: Test Event Generator System}, 
journal={Journal of Systems and Software (JSS)}, 
volume={137}, 
pages={784--803}, 
year={2018}}

@inproceedings{rosenkranz2015distributed,
author={Philipp Rosenkranz, Matthias WÃ¤hlisch, Emmanuel Baccelli, Ludwig Ortmann}, 
title={A Distributed Test System Architecture for Open-Source IoT Software}, 
booktitle={Proceedings of Workshop on IoT Challenges in Mobile and Industrial Systems (IoT-Sys)}, 
pages={43--48}, 
year={2015}}

@inproceedings{voas2018testing,
author={Jeff Voas, Rick Kuhn, Phil Laplante}, 
title={Testing IoT Systems}, 
booktitle={Proceedings of IEEE Symposium on Service-Oriented System Engineering (SOSE)}, 
pages={48--52}, 
year={2018}}

@inproceedings{lu2008learning,
author={Shan Lu, Soyeon Park, Eunsoo Seo, Yuanyuan Zhou}, 
title={Learning from Mistakes: A Comprehensive Study on Real World Concurrency Bug Characteristics}, 
booktitle={Proceedings of International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS)}, 
pages={329--339}, 
year={2008}}

@inproceedings{ocariza2013empirical,
author={Frolin Ocariza, Kartik Bajaj, Karthik Pattabiraman, Ali Mesbah}, 
title={An Empirical Study of Client-Side JavaScript Bugs}, 
booktitle={Proceedings of ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)}, 
pages={55--64}, 
year={2013}}

@misc{homeassistant2023popularity,
author={{Home Assistant Community}}, 
title={{How Popular Is Home Assistant Compared To The Competition?}}, 
year={2023}, 
url={https://whatsmarthome.com/how-popular-is-home-assistant/}}

@inproceedings{bacchelli2013expectations,
author={A. Bacchelli, C. Bird}, 
title={{Expectations, outcomes, and challenges of modern code review}}, 
booktitle={{Proceedings of the International Conference on Software Engineering}}, 
pages={712--721}, 
year={2013}}

@article{tufano2019empirical,
author={{M. Tufano et al.}}, 
title={{An empirical study on learning bug-fixing patches in the wild via neural machine translation}}, 
journal={{ACM Transactions on Software Engineering and Methodology}}, 
volume={28}, 
number={4}, 
pages={1--29}, 
year={2019}}

@inproceedings{bosu2015characteristics,
author={{A. Bosu et al.}}, 
title={{Characteristics of useful code reviews: An empirical study at Microsoft}}, 
booktitle={{IEEE/ACM International Conference on Software Engineering}}, 
pages={146--156}, 
year={2015}}

@inproceedings{tao2012software,
author={{Y. Tao et al.}}, 
title={{How do software engineers understand code changes? An exploratory study in industry}}, 
booktitle={{International Symposium on Foundations of Software Engineering}}, 
pages={1--11}, 
year={2012}}

@article{allamanis2018survey,
author={{M. Allamanis et al.}}, 
title={{A survey of machine learning for big code and naturalness}}, 
journal={{ACM Computing Surveys}}, 
volume={51}, 
number={4}, 
pages={1--37}, 
year={2018}}

@inproceedings{hellendoorn2020global,
author={{V. J. Hellendoorn et al.}}, 
title={{Global relational models of source code}}, 
booktitle={{International Conference on Learning Representations}},  
year={2020}}

@misc{smartHomeMarket2032,
  author={fortunebusinessinsight},
  title = {Smart Home Market Size, Value \& Trends | Growth Report [2032]},
  year = {n.d.},
  note = {Retrieved from Fortune Business Insights}
}

@inproceedings{Anik2018,
  author = {Anik, Sheik Murad Hassan and Gao, Xinghua and Zhong, Hao and Wang, Xiaoyin and Meng, Na},
  title = {Programming of Automation Configuration in Smart Home Systems: Challenges and Opportunities},
  booktitle = {Woodstock '18: ACM Symposium on Neural Gaze Detection},
  year = {2018},
  pages = {1--20},
  publisher = {ACM},
  address = {New York, NY, USA},
  doi = {10.1145/1122445.1122456}
}

@INPROCEEDINGS{8835392,
  author={Alrawi, Omar and Lever, Chaz and Antonakakis, Manos and Monrose, Fabian},
  booktitle={2019 IEEE Symposium on Security and Privacy (SP)}, 
  title={SoK: Security Evaluation of Home-Based IoT Deployments}, 
  year={2019},
  volume={},
  number={},
  pages={1362-1380},
  keywords={Stakeholders;Authentication;Encryption;Internet of Things;Mobile applications;Password;IoT-Security;Internet-of-Things;Home-based;Smart-Devices;Security;Privacy;Cloud-Endpoint;Mobile-Application;Network;Roku;Apple-TV;Roomba;Nest-Cam;Google-Home;Amazon-Echo;Smart-TV;Cortana;Siri;HomePod;FireTV;Belkin;TP-Link;Phillips-Hue;Smart-Lights;Home-Security-System},
  doi={10.1109/SP.2019.00013}}

@inproceedings{10.1145/3290605.3300782,
author = {Brackenbury, Will and Deora, Abhimanyu and Ritchey, Jillian and Vallee, Jason and He, Weijia and Wang, Guan and Littman, Michael L. and Ur, Blase},
title = {How Users Interpret Bugs in Trigger-Action Programming},
year = {2019},
isbn = {9781450359702},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3290605.3300782},
doi = {10.1145/3290605.3300782},
abstract = {Trigger-action programming (TAP) is a programming model enabling users to connect services and devices by writing if-then rules. As such systems are deployed in increasingly complex scenarios, users must be able to identify programming bugs and reason about how to fix them. We first systematize the temporal paradigms through which TAP systems could express rules. We then identify ten classes of TAP programming bugs related to control flow, timing, and inaccurate user expectations. We report on a 153-participant online study where participants were assigned to a temporal paradigm and shown a series of pre-written TAP rules. Half of the rules exhibited bugs from our ten bug classes. For most of the bug classes, we found that the presence of a bug made it harder for participants to correctly predict the behavior of the rule. Our findings suggest directions for better supporting end-user programmers.},
booktitle = {Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems},
pages = {1â€“12},
numpages = {12},
keywords = {bugs, debugging, end-user programming, ifttt, internet of things, iot, trigger-action programming},
location = {Glasgow, Scotland Uk},
series = {CHI '19}
}

@INPROCEEDINGS{7546527,
  author={Fernandes, Earlence and Jung, Jaeyeon and Prakash, Atul},
  booktitle={2016 IEEE Symposium on Security and Privacy (SP)}, 
  title={Security Analysis of Emerging Smart Home Applications}, 
  year={2016},
  volume={},
  number={},
  pages={636-654},
  keywords={Smart homes;Security;Programming;Protocols;Smart phones;Intelligent sensors},
  doi={10.1109/SP.2016.44}}

@INPROCEEDINGS{9402092,
  author={Makhshari, Amir and Mesbah, Ali},
  booktitle={2021 IEEE/ACM 43rd International Conference on Software Engineering (ICSE)}, 
  title={IoT Bugs and Development Challenges}, 
  year={2021},
  volume={},
  number={},
  pages={460-472},
  keywords={Correlation;Systematics;Computer bugs;Taxonomy;Tools;Internet of Things;Faces;Internet of Things;Software Engineering;Mining Software Repositories;Empirical Study},
  doi={10.1109/ICSE43902.2021.00051}}

@inproceedings{10.1145/3533767.3534365,
author = {Wang, Tao and Zhang, Kangkang and Chen, Wei and Dou, Wensheng and Zhu, Jiaxin and Wei, Jun and Huang, Tao},
title = {Understanding device integration bugs in smart home system},
year = {2022},
isbn = {9781450393799},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3533767.3534365},
doi = {10.1145/3533767.3534365},
abstract = {Smart devices have been widely adopted in our daily life. A smart home system, e.g., Home Assistant and openHAB, can be equipped with hundreds and even thousands of smart devices. A smart home system communicates with smart devices through various device integrations, each of which is responsible for a specific kind of devices. Developing high-quality device integrations is a challenging task, in which developers have to properly handle the heterogeneity of different devices, unexpected exceptions, etc. We find that device integration bugs, i.e., iBugs, are prevalent and have caused various consequences, e.g., causing devices unavailable, unexpected device behaviors. In this paper, we conduct the first empirical study on 330 iBugs in Home Assistant, the most popular open source smart home system. We investigate their root causes, trigger conditions, impacts, and fixes. From our study, we obtain many interesting findings and lessons that are helpful for device integration developers and smart home system designers. Our study can open up new research directions for combating iBugs in smart home systems.},
booktitle = {Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
pages = {429â€“441},
numpages = {13},
keywords = {smart home system, integration bugs, Home Assistant, Empirical study},
location = {Virtual, South Korea},
series = {ISSTA 2022}
}

@article{parnami2022learning,
  title={Learning from few examples: A summary of approaches to few-shot learning},
  author={Parnami, Archit and Lee, Minwoo},
  journal={arXiv preprint arXiv:2203.04291},
  year={2022}
}

@article{tamkin2021understanding,
  title={Understanding the capabilities, limitations, and societal impact of large language models},
  author={Tamkin, Alex and Brundage, Miles and Clark, Jack and Ganguli, Deep},
  journal={arXiv preprint arXiv:2102.02503},
  year={2021}
}


@article{10.1145/3649828,
author = {Li, Haonan and Hao, Yu and Zhai, Yizhuo and Qian, Zhiyun},
title = {Enhancing Static Analysis for Practical Bug Detection: An LLM-Integrated Approach},
year = {2024},
issue_date = {April 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {8},
number = {OOPSLA1},
url = {https://doi.org/10.1145/3649828},
doi = {10.1145/3649828},
abstract = {While static analysis is instrumental in uncovering software bugs, its precision in analyzing large and intricate codebases remains challenging. The emerging prowess of Large Language Models (LLMs) offers a promising avenue to address these complexities. In this paper, we present LLift, a pioneering framework that synergizes static analysis and LLMs, with a spotlight on identifying use-before-initialization (UBI) bugs within the Linux kernel. Drawing from our insights into variable usage conventions in Linux, we enhance path analysis using post-constraint guidance. This approach, combined with our methodically crafted procedures, empowers LLift to adeptly handle the challenges of bug-specific modeling, extensive codebases, and the unpredictable nature of LLMs. Our real-world evaluations identified four previously undiscovered UBI bugs in the mainstream Linux kernel, which the Linux community has acknowledged. This study reaffirms the potential of marrying static analysis with LLMs, setting a compelling direction for future research in this area.},
journal = {Proc. ACM Program. Lang.},
month = apr,
articleno = {111},
numpages = {26},
keywords = {Static analysis, bug detection, large language model}
}

@misc{HAA,
  author = {},
  title = {{Home Assistant Analytics} installation},
  howpublished = {\url{https://analytics.home-assistant.io/}},
  note = {Accessed: 2024-10-09}
}
@misc{HAA2,
  author = {},
  title = {{Home Assistant} },
  howpublished = {https://www.home-assistant.io//}},
  note = {Accessed: 2024-10-09}
}
@misc{Bitdefender,
  author = {},
  title = {{Bitdefender 2024 IoT Security Landscape Repo} },
  note = {Accessed: 2024-10-09}
}

@misc{ITSM,
  author = {},
  title = {{AI Adoption in ITSM â€“ Some Key Points} },
  howpublished = {https://itsm.tools/ai-adoption/},
  note = {Accessed: 2024-10-09}
}

@article{article,
author = {Tufano, Michele and Watson, Cody and Bavota, Gabriele and Di Penta, Massimiliano and White, Martin and Poshyvanyk, Denys},
year = {2019},
month = {09},
pages = {1-29},
title = {An Empirical Study on Learning Bug-Fixing Patches in the Wild via Neural Machine Translation},
volume = {28},
journal = {ACM Transactions on Software Engineering and Methodology},
doi = {10.1145/3340544}
}

@article{bani2021deep,
  title={A deep-learning-based bug priority prediction using RNN-LSTM neural networks},
  author={Bani-Salameh, Hani and Sallam, Mohammed and Al shboul, Bashar},
  journal={e-Informatica Software Engineering Journal},
  volume={15},
  number={1},
  year={2021},
  publisher={Politechnika Wroc{\l}awska. Oficyna Wydawnicza Politechniki Wroc{\l}awskiej}
}

@article{han2021transformer,
  title={Transformer in transformer},
  author={Han, Kai and Xiao, An and Wu, Enhua and Guo, Jianyuan and Xu, Chunjing and Wang, Yunhe},
  journal={Advances in neural information processing systems},
  volume={34},
  pages={15908--15919},
  year={2021}
}

@article{tkachenko2020approach,
  title={An approach towards increasing prediction accuracy for the recovery of missing IoT data based on the GRNN-SGTM ensemble},
  author={Tkachenko, Roman and Izonin, Ivan and Kryvinska, Natalia and Dronyuk, Ivanna and Zub, Khrystyna},
  journal={Sensors},
  volume={20},
  number={9},
  pages={2625},
  year={2020},
  publisher={MDPI}
}

@ARTICLE{10462177,
  author={Ahmad, Baleegh and Thakur, Shailja and Tan, Benjamin and Karri, Ramesh and Pearce, Hammond},
  journal={IEEE Transactions on Information Forensics and Security}, 
  title={On Hardware Security Bug Code Fixes by Prompting Large Language Models}, 
  year={2024},
  volume={19},
  number={},
  pages={4043-4057},
  keywords={Maintenance engineering;Computer bugs;Codes;Hardware;Security;Software;Registers;Hardware security;large language models;bug repair},
  doi={10.1109/TIFS.2024.3374558}}


@inproceedings{inproceedings,
author = {Huang, Bing and Dong, Hai and Bouguettaya, Athman},
year = {2021},
month = {09},
pages = {303-313},
title = {Conflict Detection in IoT-based Smart Homes},
doi = {10.1109/ICWS53863.2021.00048}
}