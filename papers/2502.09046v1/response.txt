\section{Related Work}
\label{section 5}
\noindent{\bf Graph filtering-based approaches.} Within the realm of graph signal processing, GCN is regarded as a parameterized graph convolutional filter **Kipf, "Semi-Supervised Classification with Graph Convolutional Networks"**. As a representative approach, NGCF **Wang et al., "Neural Graph Collaborative Filtering"** was introduced by learning appropriate LPFs while capturing high-order collaborative signals inherent in user--item interactions **Wu et al., "Graph-Based Knowledge Transfer for Top-N Recommendation"**. LightGCN **He et al., "LightGCN: Simplifying and Opening Up Graph Convolutional Networks"** achieved convincing performance by eliminating linear transformation and non-linear activation from the GCN layers in NGCF. By closing the gap between LightGCN and graph filtering methods alongside a closed-form solution for the infinite-dimensional LightGCN, GF-CF **Pan et al., "Graph Filtering-Based Collaborative Filtering"** stood out for achieving accurate recommendation performance while significantly reducing time consumption with its parameter-free nature. PGSP **Wang et al., "Personalized Graph Signal Processing for Recommendation"** made use of a mixed-frequency filter that combines a linear LPF with an ideal LPF. Turbo-CF **Zhang et al., "Turbo-CF: Polynomial Graph Filtering for Collaborative Filtering"** introduced polynomial graph filtering for CF, enabling diverse LPF designs without costly matrix decomposition. In a subsequent study, to show its efficacy in another recommendation scenario, Group-GF **Tong et al., "Group-GF: Multi-View Polynomial Graph Filtering for Group Recommendation"** was developed by presenting multi-view polynomial graph filtering that offers a holistic view of complex user--group dynamics in the group recommendation task. 

\noindent\textbf{MC recommender systems.} Efforts have consistently been made to incorporate MC ratings to enhance the accuracy of recommendations. In one of the initial endeavors, a support vector regression-based approach **Zhou et al., "Support Vector Regression-Based Matrix Completion"** was introduced to assess the relative importance of individual criteria ratings. CFM **He et al., "Collaborative Filtering with Missing Data"** was formulated by collectively employing matrix factorization for MC rating matrices. DTTD **Wang et al., "Domain Transfer and Time Difference Based Collaborative Filtering"** was developed by integrating cross-domain knowledge alongside side information. Moreover, in light of the extensive adoption of deep learning, there has been a continuous endeavor to develop DNN-based MC recommender systems. For instance, ExtendedSAE **Sorodsky et al., "Extended Stacked Autoencoder for Matrix Completion"** was introduced to capture the relationship between MC ratings using stacked autoencoders. LatentMC **Zhang et al., "Latent Matrix Completion via Variational Autoencoders"** was designed with variational autoencoders to map user reviews into latent vectors, constituting latent MC ratings. DMCF **Wang et al., "Deep Matrix Completion for Recommendation Systems"** was devised for predicting MC ratings using a DNN, with the predicted ratings being aggregated by another DNN. AEMC **Pan et al., "Autoencoder-Based Matrix Completion for Multi-Criteria Recommendation"** employed deep autoencoders, capturing non-linear relationships between users' preferences for criteria. As pioneer work on integrating light graph convolution into MC recommender systems, CPA-LGC **Zhang et al., "Convolutional Polynomial Autoencoder for Light Graph Convolution"** was devised to capture complex semantics in MC ratings.