

@article{NPBOriginal1,
  title={The NAS parallel benchmarks},
  author={Bailey, David H and others},
  journal={The International Journal of Supercomputing Applications},
  volume={5},
  number={3},
  pages={63--73},
  year={1991},
  publisher={Sage Publications Sage CA: Thousand Oaks, CA}
}

@techreport{nasomp,
 author={Jin, Hao-Qiang and Frumkin, Michael and Yan, Jerry},
 title={{The OpenMP implementation of NAS parallel benchmarks and its performance}},
 institution={NASA},
 year={1999},
 abstract={},
}

@techreport{NPB-2.0,
  title={The NAS parallel benchmarks 2.0},
  author={Bailey, David and Harris, Tim and Saphir, William and Van Der Wijngaart, Rob and Woo, Alex and Yarrow, Maurice},
  year={1995},
  institution={Citeseer}
}

@article{npb-results-11-96,
  title={NAS parallel benchmark (version 1.0) results 11-96},
  author={Saini, Subhash and Bailey, David H},
  journal={NASA Ames Research Center, e-mail: saini@nas.nasa.gov},
  year={1996},
  publisher={Citeseer}
}

@mastersthesis{For-C-HPC,
  title={Rust programming language in the high-performance computing environment},
  author={Sudwoj, Michal},
  type={{B.S.} thesis},
  year={2020},
  school={ETH Zurich}
}

@article{NPB-CPP-2021,
  title={The NAS parallel benchmarks for evaluating C++ parallel programming frameworks on shared-memory architectures},
  author={L{\"o}ff, J{\'u}nior and others},
  journal={Future Generation Computer Systems},
  volume={125},
  pages={743--757},
  publisher={Elsevier},
  year={2021}
}

%author={L{\"o}ff, J{\'u}nior and Griebler, Dalvan and Mencagli, Gabriele and Araujo, Gabriell and Torquati, Massimo and Danelutto, Marco and Fernandes, Luiz Gustavo},

@inproceedings{NPB-MPJ,
  title={NPB-MPJ: NAS parallel benchmarks implementation for message-passing in Java},
  author={Mall{\'o}n, Dami{\'a}n A and Taboada, Guillermo L and Tourino, Juan and Doallo, Ram{\'o}n},
  booktitle={17th PDP},
  pages={181--190},
  year={2009},
  organization={IEEE}
}

@INPROCEEDINGS{NPB-PY,
  author={Di Domenico, Daniel and Cavalheiro, Gerson G. H. and Lima, João V. F.},
  booktitle={2022 30th PDP}, 
  title={NAS Parallel Benchmark Kernels with Python: A performance and programming effort analysis focusing on GPUs}, 
  year={2022},
  volume={},
  number={},
  pages={26-33},
  keywords={Codes;Graphics processing units;C++ languages;Programming;Parallel processing;Data transfer;Resource management;NPB;GPU;Python;programming effort},
  doi={10.1109/PDP55904.2022.00013}}

@inproceedings{NPB-CUDA,
  title={Efficient NAS parallel benchmark kernels with CUDA},
  author={de Araujo and others},
  booktitle={28th PDP},
  pages={9--16},
  year={2020},
  organization={IEEE}
}

@inproceedings{NPB-CUDA2,
  title={SNU-NPB 2019: parallelizing and optimizing NPB in OpenCL and CUDA for modern GPUs},
  author={Do, Youngdong and Kim, Hyungmo and Oh, Pyeongseok and Park, Daeyoung and Lee, Jaejin},
  booktitle={2019 IEEE International Symposium on Workload Characterization (IISWC)},
  pages={93--105},
  year={2019},
  organization={IEEE}
}
@article{PIEPER:COLA:21,
	author={Ricardo Pieper and Júnior Löff and Renato Berreto Hoffmann and Dalvan Griebler and Luiz Gustavo Fernandes},
	title={{High-level and Efficient Structured Stream Parallelism for Rust on Multi-cores}},
	journal={Journal of Computer Languages},
	number={},
    volume={65},
    pages={},
	publisher={Elsevier},
	address={},
	month={July},
	year={2021},
	doi={10.1016/j.cola.2021.101054},
	url={https://doi.org/10.1016/j.cola.2021.101054},
	abstract={This work aims at contributing with a structured parallel programming abstraction for Rust in order to provide ready-to-use parallel patterns that abstract low-level and architecture-dependent details from application programmers. We focus on stream processing applications running on shared-memory multi-core architectures (i.e, video processing, compression, and others). Therefore, we provide a new high-level and efficient parallel programming abstraction for expressing stream parallelism, named Rust-SSP. We also created a new stream benchmark suite for Rust that represents real-world scenarios and has different application characteristics and workloads. Our benchmark suite is an initiative to assess existing parallelism abstraction for this domain, as parallel implementations using these abstractions were provided. The results revealed that Rust-SSP achieved up to 41.1\% better performance than other solutions. In terms of programmability, the results revealed that Rust-SSP requires the smallest number of extra lines of code to enable stream parallelism..},
}
@article{beyond,
  title={NAS Parallel Benchmarks with CUDA and beyond},
  author={Araujo, Gabriell and Griebler, Dalvan and Rockenbach, Dinei A and Danelutto, Marco and Fernandes, Luiz G},
  journal={Software: Practice and Experience},
  volume={53},
  number={1},
  pages={53--80},
  year={2023},
  publisher={Wiley Online Library}
}

@inproceedings{rw_pervsprog,
  title={Performance vs programming effort between rust and c on multicore architectures: Case study in n-body},
  author={Costanzo, Manuel and others},
  booktitle={2021 XLVII Latin American Computing Conference (CLEI)},
  pages={1--10},
  year={2021},
  organization={IEEE}
}

@inproceedings{rw_zerocost,
  title={When Is Parallelism Fearless and Zero-Cost with Rust?},
  author={Abdi, Javad and Posluns, Gilead and Zhang, Guozheng and Wang, Boxuan and Jeffrey, Mark C},
  booktitle={36th ACM Symposium on Parallelism in Algorithms and Architectures},
  pages={27--40},
  year={2024}
}

@mastersthesis{rw_tes,
  author       = {Franz{\'e}n, Viktor and {\"O}stling, Carl},
  title        = {Evaluation of Rust for GPGPU high-performance computing},
  school       = {University of Gothenburg},
  year         = {2022},
}

@article{rw_isfast,
  title={Is rust c++-fast? benchmarking system languages on everyday routines},
  author={Ivanov, Nikolay},
  journal={arXiv preprint arXiv:2209.09127},
  year={2022}
}

@book{book_introduction,
  title={Introduction to parallel processing: algorithms and architectures},
  author={Parhami, Behrooz},
  year={2006},
  publisher={Springer Science \& Business Media}
}

@book{book_clock,
  title={The art of multiprocessor programming},
  author={Herlihy, Maurice and Shavit, Nir and Luchangco, Victor and Spear, Michael},
  year={2020},
  publisher={Newnes}
}

@article{amaral2020programming,
  title={Programming languages for data-Intensive HPC applications: A systematic mapping study},
  author={Amaral, Vasco and others},
  journal={Parallel Computing},
  volume={91},
  pages={102584},
  year={2020},
  publisher={Elsevier}
}

@inproceedings{alrawais2021parallel,
  title={Parallel programming models and paradigms: Openmp analysis},
  author={Alrawais, Arwa},
  booktitle={2021 5th International Conference on Computing Methodologies and Communication (ICCMC)},
  pages={1022--1029},
  year={2021},
  organization={IEEE}
}

@book{rustbook,
  title={The Rust programming language},
  author={Klabnik, Steve and Nichols, Carol},
  year={2023},
  publisher={No Starch Press}
}

@techreport{membug2camb,
  title={Practical memory safety for C},
  author={Akritidis, Periklis},
  year={2011},
  institution={University of Cambridge, Computer Laboratory}
}

@article{membug3narure,
  title={Why scientists are turning to Rust},
  author={JE, O and CT, T},
  journal={Nature},
  volume={588},
  pages={185},
  year={2020}
}

@misc{rayon,
  author = {Rayon},
  year = {2019},
  title = {Rayon},
  url = {https://github.com/rayon-rs/rayon},
  note = {https://github.com/rayon-rs/rayon}
}

@inproceedings{rivera2021keeping,
  title={Keeping safe rust safe with galeed},
  author={Rivera, Elijah and Mergendahl, Samuel and Shrobe, Howard and Okhravi, Hamed and Burow, Nathan},
  booktitle={Proceedings of the 37th Annual Computer Security Applications Conference},
  pages={824--836},
  year={2021}
}

@book{map,
  title={Structured parallel programming: patterns for efficient computation},
  author={McCool, Michael and Reinders, James and Robison, Arch},
  year={2012},
  publisher={Elsevier}
}

@inproceedings{pbbs_c,
  title={Poster: The Problem-Based Benchmark Suite (PBBS), V2},
  author={Anderson, Daniel and others},
  booktitle={27th ACM SIGPLAN PPoPP},
  year={2022},
  organization={ACM}
}

@inproceedings{npb-opencl,
  title={Performance characterization of the nas parallel benchmarks in opencl},
  author={Seo, Sangmin and Jo, Gangwon and Lee, Jaejin},
  booktitle={2011 IEEE international symposium on workload characterization (IISWC)},
  pages={137--148},
  year={2011},
  organization={IEEE}
}

@inproceedings{npb-openacc,
  title={Nas parallel benchmarks for gpgpus using a directive-based programming model},
  author={Xu, Rengan and Tian, Xiaonan and Chandrasekaran, Sunita and Yan, Yonghong and Chapman, Barbara},
  booktitle={LCPC 2014},
  pages={67--81},
  year={2015},
  organization={Springer}
}

@inproceedings{program,
  title={Assessing coding metrics for parallel programming of stream processing programs on multi-cores},
  author={Andrade, Gabriella and others},
  booktitle={2021 47th SEAA},
  pages={291--295},
  year={2021},
  organization={IEEE}
}