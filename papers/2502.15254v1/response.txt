\section{Related work}
\label{sec2}

\subsection{Autoencoders}
An autoencoder is a classical generative model designed for dimensionality reduction and reconstruction of input data **Vincent, P., "Extracting and composing robust features with denoising autoencoders"**. It achieves this through an unsupervised neural network. Because the primary goal is input data reconstruction, the output maintains the same dimensionality as the input. This study considers a three-layer autoencoder structure: an input encoder, a latent layer, and an output decoder. The centrally located latent layer has fewer dimensions than the input layer, facilitating data compression. Network parameters are optimized during training to minimize the discrepancy between input and output data, ensuring accurate reconstruction. This training process enables the extraction of essential features within the latent layer, which are crucial for data reconstruction. Autoencoders are used in various applications, including generating new data by manipulating latent layer variables in a trained network, detecting anomalies by training on standard data, and identifying deviations in reconstruction when presented with abnormal input data.

\subsection{Quantum circuit learning (QCL)}
QCL is a hybrid classical-quantum machine-learning framework **Farhi, E., "A quantum approximate optimization algorithm"**. It involves encoding input data into a quantum circuit and employing classical optimization algorithms to iteratively adjust circuit parameters to achieve the desired output. QCL aims to leverage the exponentially large state space of quantum systems for machine learning, potentially solving tasks that are intractable for classical algorithms and demonstrating quantum advantage. Training data with QCL begins by encoding the data into a quantum state, $\ket{\psi_{\text{in}}}$, through a unitary transformation. Applying a parameterized quantum circuit ansatz, $U(\theta)$, to the input state yields the output state $U(\theta)\ket{\psi_{\text{in}}}$. In supervised machine-learning scenarios, a cost function is defined in terms of the measurement results of the output state and the training data. The desired circuit is trained by iteratively optimizing the parameter $\theta$ to minimize this cost function.

\subsection{Quantum autoencoders}
A QAE is an algorithm that employs QCL to construct an autoencoder network **Wiebe, N., "Quantum algorithms for quantum field theory"**. Similar to conventional autoencoders, the goal is to compress and reconstruct the dimensionality of input data. This is achieved by optimizing an ansatz, $U(\theta)$, to compress the quantum state of the input and then restore it to a state closely approximating the original input. Figure~\ref{fig:QAE_before_swap} illustrates the structure of the target quantum circuit.
\begin{figure}[t]
\centering
\includegraphics[width=0.5\textwidth]{qae-paper-figure/Fig1.jpg}
\caption{Structure of a conventional quantum autoencoder}\label{fig:QAE_before_swap}
\end{figure}
In the input AB system (Figure~\ref{fig:QAE_before_swap}), A is the latent state, where input information is compressed, and B is the trash state. Additionally, B' is the reference state, containing the same number of qubits as B. Successful compression and reconstruction are achieved if the input AB system matches the output AB' system after applying $U^\dagger(\theta)$. This means maximizing the fidelity between the input and output states. The input state of each qubit in the AB system is $\ket{\psi_i}$, and the quantum state of the B' system is $\ket{a}$. The density operator of the AB' system, which includes the output state, is obtained by tracing out state B from the entire system. This can be expressed by the following equation:
\begin{equation}
\rho_{AB'} = U_{AB'}^\dagger(\vec{\theta}) \mathrm{Tr}_B \big[ U_{AB}(\vec{\theta}) \big[ \ket{\psi_i} \bra{\psi_i}_{AB} \otimes \ket{a} \bra{a}_{B'} \big] U_{AB}^\dagger(\vec{\theta}) \big] U_{AB'}(\vec{\theta}). \label{eq:rho_AB'}
\end{equation}
The objective function $C(\vec{\theta})$, which must be maximized, can be defined as follows:
\begin{equation}
C(\vec{\theta}) = \sum_i p_i F \big(\ket{\psi_i}, \rho_{AB'} \big), \label{eq:C1}
\end{equation}
where $p_i$ is the probability that $\ket{\psi_i}$ is included in the output state.
However, determining the match between the quantum states of the AB and the AB' systems would typically require numerous qubit measurements. A swap test is performed on B and B' to address this challenge. The fidelity of the input and output states of the AB system after swapping the quantum states of B and B' can be expressed as follows:
\begin{align}
F \big(\ket{\psi_i}, \rho_{AB} \big) &= F \big( \ket{\psi_i}, U_{AB}^\dagger \mathrm{Tr}_{B'} \big[ U_{AB'} \big[ \ket{\psi_i} \bra{\psi_i}_{AB'} \otimes \ket{a} \bra{a}_{B} \big] U_{AB'}^\dagger \big] U_{AB} \big) \nonumber \\
&= \bra{\psi_i} U_{AB}^\dagger \mathrm{Tr}_{B'} \big[ U_{AB'} \big[ \ket{\psi_i} \bra{\psi_i}_{AB'} \otimes \ket{a} \bra{a}_{B} \big] U_{AB'}^\dagger \big] U_{AB}  \ket{\psi_i}. \label{eq:F_AB}
\end{align}
The fidelity of the input and output states of the AB' system before the swap can be expressed as follows:
\begin{equation}
F \big( U_{AB'} \ket{\psi_i}, \mathrm{Tr}_{B} \big[ U_{AB} \ket{\psi_i} \bra{\psi_i} U_{AB}^\dagger \otimes \ket{a} \bra{a}_{B'} \big] \big). \label{eq:F_AB'}
\end{equation}
After swapping B and B', the fidelity can be rewritten as follows, demonstrating equivalence with the fidelity of the AB system.
\begin{align}
F &\big( U_{AB} \ket{\psi_i}, \mathrm{Tr}_{B'} \big[ U_{AB'} \ket{\psi_i} \bra{\psi_i} U_{AB'}^\dagger \otimes \ket{a} \bra{a}_{B} \big] \big) \nonumber \\
&= \bra{\psi_i} U_{AB}^\dagger \mathrm{Tr}_{B'} \big[ U_{AB'} \big[ \ket{\psi_i} \bra{\psi_i}_{AB'} \otimes \ket{a} \bra{a}_{B} \big] U_{AB'}^\dagger \big] U_{AB}  \ket{\psi_i} \nonumber \\
&= F \big(\ket{\psi_i}, \rho_{AB} \big) \label{eq:F_AB'_swap}
\end{align}
Therefore, swapping B and B' is equivalent to reconstructing the input. The swap test leverages the agreement between quantum states, which can be determined by measuring a single ancillary qubit, significantly reducing the measurement overhead compared to the pre-swap scenario. Figure~\ref{fig:QAE_with_swap} depicts the quantum circuit configured for learning image data with a QAE.
\begin{figure}[t]
\centering
\includegraphics[width=0.5\textwidth]{qae-paper-figure/Fig2.jpg}
\caption{Quantum autoencoder structure after conducting the swap test}\label{fig:QAE_with_swap}
\end{figure}
Image data are encoded into the quantum state by setting them as parameters in the circuit $V(x)$. The parameter $\theta$ of the ansatz $U(\theta)$ is optimized using a classical algorithm to maximize the agreement between the B and B' states. The swap test is introduced to facilitate this. As mentioned previously, the swap test is an algorithm for determining the agreement of two quantum states. An auxiliary qubit is prepared for measurement; if the two quantum states match, the measurement result of the auxiliary qubit will be $\ket{0}$. Consequently, by defining an objective function that minimizes the probability of measuring $\ket {1}$, the parameter $\theta$ is optimized to align the states of B and B'.