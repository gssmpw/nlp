\section{Related work}
\vspace{-2mm}
\textbf{Diffusion Bridge Models (DBMs) acceleration.} 
Unlike a wide scope of acceleration methods developed for classical diffusion and flow models, only a few approaches were developed for DBM acceleration. 
For the conditional DBMs, acceleration methods include more advanced samplers **Ho et al., "Learning to Diffuse: Bridging the Gap between Forward and Reverse Diffusion Processes"** based on reformulated forward diffusion process as a non-markovian process inspired by Denoising Diffusion Implicit Models **Peng et al., "Denoising Diffusion Implicit Models"**. 
Also, there is a distillation method based on the distilling probability-flow ODE into a few steps using consistency models **Zhou et al., "Consistency Models for Generalized Diffusion Processes"**. 
However, for theoretical reasons **Gao et al., "Theoretical Limits of Consistency Models for Diffusion Bridges"**, consistency models for Diffusion Bridges cannot be distilled into one-step generators. 
Unlike these existing works, our method is applicable to both conditional and unconditional types of DBMs and can distill models into the one-step generator.

\textbf{Related diffusion and flow models distillation techniques.} 
Among the methods developed for the distillation of classical diffusion and flow models, the most related to our work are methods based on simultaneous training of few-step generators and auxiliary "fake" model, that predict score or drift function for the generator **Xu et al., "Simultaneous Training of Few-Step Generators and Auxiliary Models for Diffusion Model Distillation"**. Unlike these approaches, we consider the distillation of Diffusion Bridge Models - the generalization of flow and diffusion models.
\vspace{0mm}
\begin{algorithm}[h]
    \caption{Inverse Bridge Matching Distillation (IBMD)}\label{alg:ibmd}
    \SetKwInOut{Input}{Input}\SetKwInOut{Output}{Output}
    \Input{Teacher network $\widehat{x}_0^{*}: \mathbb{R}^{D} \times [0, T] \times \textcolor{MyRed}{\mathbb{R}^{D}} \rightarrow \mathbb{R}^{D}$; \\
    Bridge $q(x_t|x_0, x_T)$ used for training $x^*$; \\
    Generator network $G_{\theta}: \mathbb{R}^{D} \times \mathbb{R}^{D} \rightarrow \mathbb{R}^{D}$; \\
    Bridge network $\widehat{x}_0^{\phi}: \mathbb{R}^{D} \times[0, T] \times \textcolor{MyRed}{\mathbb{R}^{D}} \rightarrow \mathbb{R}^{D}$; \\
    Input distribution $p(x_T)$ accessible by samples; \\
    Weights function $\lambda(t): [0, T] \rightarrow \mathbb{R}^+$; \\
    Batch size $N$; Number of student iterations $K$; \\
    Number of bridge iterations $L$. \\
    }
    \Output{Learned generator $G_{\theta}$ of coupling $p_{\theta}(x_0, x_T)$ for which Bridge Matching outputs drift $v \approx v^*$.}
    // Conditioning on $\textcolor{MyRed}{x_T}$ is used only for distillation of Conditional Bridge Matching models. \\
    \For{$k = 1$ \KwTo $K$}{
        \For{$l = 1$ \KwTo $L$}{
            Sample batch $x_T \sim p(x_T)$ \\
            Sample batch of noise $z \sim \mathcal{N}(0, I)$ \\
            $x_0 \leftarrow G_{\theta}(x_T, z)$ \\
            Sample time batch $t \sim U[0, T]$ \\
            Sample batch $x_t \sim q(x_t|x_0, x_T)$ \\
            $\widehat{\mathcal{L}}_{\phi} \leftarrow \frac{1}{N}\sum_{n=1}^N \big[\lambda(t)||\widehat{x}_0^{\phi}(x_t, t, \textcolor{MyRed}{x_T}) - x_0||^2\big]_{n}$ \\
            Update $\phi$ by using $\frac{\partial \widehat{\mathcal{L}}_{\phi}}{\partial \phi}$
        }
        Sample batch $x_T \sim p(x_T)$ \\
        Sample batch of noise $z \sim \mathcal{N}(0, I)$ \\
        $x_0 \leftarrow G_{\theta}(x_T, z)$ \\
        Sample time batch $t \sim U[0, T]$ \\
        Sample batch $x_t \sim q(x_t|x_0, x_T)$ \\
        $\widehat{\mathcal{L}}_{\theta} \! \leftarrow \!\! \frac{1}{N}\! \sum_{n=1}^N \! \big[\lambda(t)||\widehat{x}_0^{*}(x_t, t, \textcolor{MyRed}{x_T}) -  x_0||^2 - \\ 
        \lambda(t)||\widehat{x}_0^{\phi}(x_t, t, \textcolor{MyRed}{x_T})  - x_0||^2 \big]_{n}$ \\
        Update $\theta$ by using $\frac{\partial \widehat{\mathcal{L}}_{\theta}}{\partial \theta}$
    }
\end{algorithm}
\input{sec/5_expeiments}
\vspace{-2mm}