\section{Related Work}
\label{sec:related_work}

% \sukrit{Very very rough related work pass, PTAL. I'll add more things 10/9 night EST time, slightly busy with a few other things.}

To our knowledge, this is the first work that compares a developer's ideal and typical workweek and assesses the impact of their deviations on productivity and satisfaction. We also explore the role of AI tools in the software development process and capture potential future directions for AI tool development. We give a brief summary of existing work in three areas: developer activities and time spent, developer productivity and satisfaction, and AI tools and automation. 

\subsection{Developer activities and time allotment}
Understanding how developers spend their time across various activities has been a very well explored topic. Prior work analyzed how developers spend their time within the IDE by specifically tracking IDE usage, monitoring test and other refactoring feature usage **Dork et al., "Developer Activity Analysis"**. This work did not focus on other activities outside the IDE like collaboration, communication and planning.

More recent works have captured a more holistic picture of what a developer does and aimed to capture the time spent through various methods of capturing data like surveys **Kasiri et al., "Survey-based Time Estimation"**, observations and interviews**Burgess et al., "Observations of Developer Activity"**, and through tracking usage of the computer**Sillito et al., "Computer Usage Tracking"**. While many studies focus on understanding the daily activities, fewer have looked at patterns across an entire workweek. Our study builds on this gap, extending our window to the past work week allowing us to get a more comprehensive understanding of how a developer spends their time and also reducing the impact of day to day variations. In addition, we compare the actual workweek with an ideal workweek.

% There have been works like **Mind The Gap et al., "Developer Activity Categorization"** which provided a comprehensive categorization of different activities, instead of relying exclusively on this we also 
% Our work builds further upon this, not only analyzing the time spent on different activities over a week but also by these activities are related to self-reported productivity and satisfaction levels as well. We additionally, also look at the deviations between the actual and expected workweek of a developer.

\subsection{Developer productivity and satisfaction}
There exists a substantial amount of prior work on trying to understand the factors that influence developer productivity and satisfaction**Sarker et al., "Productivity Factors Analysis"**. There is significant work in understanding how different factors like interruptions**Kersten et al., "Interruptions Impact"**, emails and communication **Pike et al., "Email and Communication Impact"** impact both productivity and satisfaction.

Prior work**Masood et al., "Developer Happiness Link"** showed also a link between developer happiness and increased productivity. Therefore, it is important to analyze how different activities affect a developers satisfaction and in-turn productivity. Masood et al.**Masood et al., "Developer Productivity Impact"** analyzed how different tasks and activities affect developer happiness and productivity. 

% \sukrit{Rewrite paragraph. Also need to include mind the gap paper}
% There are a few lines of work **Begel et al., "Task Alignment"** that indicate the correlation between a developer having a good workday and the tasks in the day typically aligning with the expected with the role. 

\subsection{AI tools and automation in software development}

The rapid development and adoption of AI tools and automation in software development has opened new avenues for understanding their impacts on the field. There have been works**Li et al., "AI Tools Impact"** that analyze how different AI tools impact developer productivity. There is also a body of work**Kochhar et al., "Task Automation"** on understanding specific tasks that developers want to use AI tools. 

We build upon these existing studies by analyzing the impact of AI tool usage on productivity and satisfaction. We further investigate whether developers want particular tasks to be automated. This can drive future development of AI tools and ensure that they are aligned with the actual requirements of the developers.