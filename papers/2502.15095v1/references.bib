
%%% Introduction

Doing UX in an Agile World: Case Study Findings

@misc{Loranger2014-AgileUX-misc,
    author = 		{Loranger, Hoa},
    title = 		{{Doing UX in an Agile World: Case Study Findings}},
    publisher = 	{Nielsen Norman Group},
    year = 			{2014},
    month = 		{May},
    note = 			{Accessed 4. Feb 2025},
    URL = 			{https://www.nngroup.com/articles/doing-ux-agile-world/},
}

@misc{Laubheimer2017-AgileUX-misc,
    author = 		{Laubheimer, Page},
    title = 		{{Agile Is not Easy for UX: (How to) Deal with It}},
    publisher = 	{Nielsen Norman Group},
    year = 			{2017},
    month = 		{Sep},
    note = 			{Accessed 4. Feb 2025},
    URL = 			{https://www.nngroup.com/articles/agile-not-easy-ux/},
}

@article{Persson2022-UXAgile-InformationSoftwareTechnology-article,
    author = {      Persson, John Stouby and Bruun, Anders and Lárusdóttir, Marta Kristín and Nielsen, Peter Axel},
    title =         {{Agile software development and UX design: A case study of integration by mutual adjustment}},
    journal =       {Information and Software Technology},
    volume =        {152},
    pages =         {107059},
    year =          {2022},
    month =         {Dec},
    issn =          {0950-5849},
    doi =           {https://doi.org/10.1016/j.infsof.2022.107059},
    url =           {https://www.sciencedirect.com/science/article/pii/S0950584922001690},
    abstract =      {Context Agility is an overarching ideal for empirically-driven software development processes that embrace change in order to improve quality, economy, and simplicity. While the pursuit of Agility has held prominence in software practice and research for over two decades, user experience (UX) designers struggle to integrate their work processes with agile software development.
Objective
As empirical processes are constantly evolving, so is this integration struggle for UX designers. We, therefore, present an industrial case study of how a Danish software company integrates UX design and agile software development.
Method
We conducted a case study involving (a) one iteration of individual interviews with 10 employees (four UX designers, three software developers, two project managers, and one solution architect) and (b) a follow-up iteration consisting of a workshop with 6 employees (three UX designers, two solution architects, and one project manager) two years later. We analyzed how the company's approach to integration with 'upfront design' and 'work in parallel' involve mutual adjustments as opposed to assimilation or separation of UX design and software development.
Results
Our analysis shows how integration through mutual adjustments made distinct contributions to UX designers' and software developers' pursuit of Agility. They experienced notably different work processes that still dealt effectively with change and contributed to quality, economy, or simplicity. Nevertheless, as shown from a follow-up workshop two years after our first interviews, these processes were still susceptible to integration struggles over time.
Conclusion
We conclude that integration based on mutual adjustment potentially makes Agility for UX designers and software developers different and mutually complementary. This integration contrasts with assimilation, which potentially makes their Agility mutually indistinguishably, and with separation, which makes their Agility different and mutually competing.},
}

@article{Curcio2019-AgileUX-ComputerStandardsInterfaces-article,
    author =    {Curcio, Karina and Santana, Rodolfo and Reinehr, Sheila and Malucelli, Andreia},
    title =     {Usability in agile software development: A tertiary study},
    journal =   {Computer Standards & Interfaces},
    volume =    {64},
    pages =     {61--77},
    year =      {2019},
    month =     {May},
    issn =      {0920-5489},
    doi =       {https://doi.org/10.1016/j.csi.2018.12.003},
    url =       {https://www.sciencedirect.com/science/article/pii/S0920548918302587},
    keywords =  {Agile software development, Usability, User-centered design, Systematic literature review, Tertiary study},
    abstract =  {In the last years the interest in developing research on integration of usability and agile software development has been increasing. The number of systematic literature reviews, systematic mapping studies and non-systematic reviews, related to this thematic has also increased. Nevertheless, there is no analysis on the quality of these published secondary studies, nor is there a consolidated research that brings the answer of how to integrate these two areas. The goal of this paper is to categorize secondary studies related to the integration of usability and agile software development and present a critical analysis on the quality of the selected studies. To accomplish this goal a tertiary study was performed to categorize the related studies selected. Initially 3,065 papers were identified and further narrowed to 14 by applying exclusion criteria and analysis. We classified the selected studies as systematic literature reviews, systematic mapping studies and non-systematic literature reviews to report the data analysis. As a result of this study different forms to integrate usability and agile software development were detected as well as the various challenges that must be overcome for the integration success. Six main categories were identified to represent ways of integrating usability into agile development: processes, techniques, practices, recommendations, principles and different approaches. Regarding to the challenges for the integration seven main categories were also identified: issues related to tests, time, work balance, modularization, feedback, prioritization, and documentation. Although the interest in researching the integration of usability and agile software development has increased in the last years, mostly of the analyzed studies neglected the quality criteria and presented difficulties to use methods to synthetize the research results. Despite this, it has been realized that the integration of usability with agile software development is possible and is strongly aligned with user-centered design. The initial studies indicated a separation of activities and roles into specific tracks with parallel work to treat usability in agile software development, but the trend is no longer to manage and control these activities in separate ways, so new challenges are becoming to appear. Although we have identified several points of tension, the integration does not become unfeasible.},
}


@inproceedings{Gorecky2014-HCIIndustry4.0-IEEE-article,
  author=           {Gorecky, Dominic and Schmitt, Mathias and Loskyll, Matthias and Zühlke, Detlef},
  booktitle =       {{2014 12th IEEE International Conference on Industrial Informatics (INDIN)}}, 
  title=            {{Human-machine-interaction in the industry 4.0 era}}, 
  year =            {2014},
  volume =          {},
  number =          {},
  pages =           {289--294},
  keywords=         {User interfaces;Industries;Mobile communication;Context;Manufacturing;Production facilities;human-computer-interaction;Industry 4.0;cyber-physical Systems},
  doi={10.1109/INDIN.2014.6945523},
}


@book{Stephanidis2024-book,
	editor =       	{Stephanidis, Constantine and Salvendy, Gavriel},
	title =       	{{Human-Computer Interaction in Various Application Domains}},
	doi = 			{doi.org/10.1201/978100349069},
	isbn = 			{978-0262730068},
	publisher =    	{CRC Press},
	address = 		{Boca Raton, FL, USA},
	url = 			{https://doi.org/10.1201/9781003490692},
	year =         	{2024},
	month =        	{Aug},
	edition =      	{1},
}

@article{degen2022big,
  title=        {{Big I Notation to Estimate the Interaction Complexity of Interaction Concepts}},
  author=       {Degen, Helmut},
  journal=      {International Journal of Human--Computer Interaction},
  volume=       {38},
  number=       {16},
  pages=        {1504--1528},
  year=         {2022},
  publisher=    {Taylor \& Francis},
}

@misc{Nielsen2017-ResponseTimes-NN-misc,
    author = 		{Nielsen, Jakob},
    title = 		{{Response Times: The 3 Important Limits}},
    publisher = 	{Nielsen Norman Group},
    year = 			{1993},
    month = 		{Jan},
    note = 			{Accessed 15. Feb 2025},
    URL = 			{https://www.nngroup.com/articles/response-times-3-important-limits/},
}

@misc{Google2023-Performance-misc,
    author = 		{Google},
    title = 		{{Why does speed matter?}},
    publisher = 	{Google},
    year = 			{2023},
    month = 		{Nov},
    note = 			{Accessed 16. Feb 2025},
    URL = 			{https://web.dev/learn/performance/why-speed-matters},
}

https://web.dev/learn/performance/why-speed-matters

@inproceedings{Crescenzi2016-TimeConstraints-Responsetime-CHI-inproceedings,
    author =        {Crescenzi, Anita and Kelly, Diane and Azzopardi, Leif},
    title =         {{Impacts of Time Constraints and System Delays on User Experience}},
    year =          {2016},
    isbn =          {9781450337519},
    publisher =     {Association for Computing Machinery},
    address =       {New York, NY, USA},
    url =           {https://doi.org/10.1145/2854946.2854976},
    doi =           {10.1145/2854946.2854976},
    abstract =      {During information search, people often experience time pressure. This might be a result of a deadline, the system's performance or some other event. In this paper, we report results of a study with forty-five participants which investigated how time constraints and system delays impacted the user experience during information search. We randomly assigned half of our study participants to a treatment condition where they were only allowed five minutes per search task (the other half were given no time limits). For half of participants' search tasks, five second delays were introduced after queries were submitted and SERP results were clicked. We used multilevel modeling to evaluate a number of hypotheses about the effects of time constraint, system delays and user experience. We found those in the time constraint condition reported significantly greater time pressure, experienced higher task difficulty, less satisfaction with their performance, increased importance of working fast and engaged in more metacognitive monitoring. We found when experiencing system delays participants reported slower system speeds when encountering delays on the second task. This work opens a new line of inquiry into how time pressure impacts the search experience and how tools and interfaces might be designed to support people who are searching under time pressure. It also presents an example of how multilevel modeling can be used to better understand and model the complex interactions that occur during interactive information retrieval.},
    booktitle =     {Proceedings of the 2016 ACM on Conference on Human Information Interaction and Retrieval},
    pages =         {141--150},
    numpages =      {10},
    keywords =      {time pressure, system delays, search experience},
    location =      {Carrboro, North Carolina, USA},
    series =        {CHIIR '16},
}

@misc{US5960411A,
  author    = {Hartman, Peri and Bezos, Jeffrey P. and Kaphan, Shel and Spiegel, Joel},
  title     = {{Method and system for placing a purchase order via a communications network}},
  assignee  = {Amazon.com, Inc.},
  number    = {US5960411A},
  year      = {1999},
  month     = {September},
  day       = {28},
  url       = {https://patents.google.com/patent/US5960411A/en}
}


%%% Background and related work

@book{Landauer1909-book,
	author=			{Landauer, Edmund},
	title=			{{Handbuch der Lehre von der Verteilung der Primzahlen}},
	year=			{1909},
	publisher=		{BG Teubner},
	address = 		{Leipzig, Berlin, Germany},
	URL = 			{http://name.umdl.umich.edu/ABV2766.0002.001},
}

@book{Bachmann1894-book,
	author =       	{Bachmann, Paul},
	title =       	{{Zahlentheorie. Versuch einer Gesamtdarstellung dieser Wissenschaft in ihren Hauptteilen. Zweiter Teil: Die analytische Zahlentheorie}},
	publisher =    	{B. G. Teubner},
	address = 		{Leipzig, Germany},
	year =         	{1894},
	volume = 		{2},
}

@article{Knuth1976,
	author = 		{Knuth, Donald E.},
	title = 		{{Big Omicron and Big Omega and Big Theta}},
	journal = 		{SIGACT News},
	year = 			{1976},
	issue_date = 	{April 1976},
	publisher = 	{Association for Computing Machinery},
	address = 		{New York, NY, USA},
	volume = 		{8},
	number = 		{2},
	issn = 			{0163-5700},
	url = 			{https://doi.org/10.1145/1008328.1008329},
	doi = 			{10.1145/1008328.1008329},
	month = 		{Apr},
	pages = 		{18--24},
	numpages = 		{7},
}

%%% Alternatives techniques to measure time

@article{Card1980-KLM-Article,
  author     = {Card, Stuart K. and Moran, Thomas P. and Newell, Allen},
  title      = {{The Keystroke-Level Model for User Performance Time with Interactive Systems}},
  journal    = {Commun. ACM},
  year       = {1980},
  issn       = {0001-0782},
  month      = {Jul},
  number     = {7},
  pages      = {396--410},
  volume     = {23},
  abstract   = {A simple model, the Keystroke-Level Model, is proposed for predicting one aspect of performance: the time it takes an expert user to perform a given task on a given computer system. The model is based on counting keystrokes and other low-level operations, including the user's mental preparations and the system's responses. performance is coded in terms of these operations and operator times summed to give predictions. Heuristic rules are given for predicting where mental preparations occur. When tested against data on 10 different systems, the model's prediction error is 21 percent for individual tasks. An example is given to illustrate how the model can be used to produce parametric predictions and how sensitivity analysis can be used to redeem conclusions in the face of uncertain assumptions. Finally, the model is compared to several simpler versions. The potential role for the Keystroke-Level Model in system design is discussed.},
  address    = {New York, NY, USA},
  doi        = {10.1145/358886.358895},
  issue_date = {July 1980},
  keywords   = {systems design, human-computer interface, ergonomics, cognitive psychology, user performance, user model, human factors, human-computer interaction},
  numpages   = {15},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/358886.358895},
}

@book{CardNewellMoran1983-book,
	author = 		{Card, Stuart K. and Newell, Allen and Moran, Thomas P.},
	title = 		{{The  Psychology of Human-Computer Interaction}},
	year = 			{1983},
	isbn = 			{0898592437},
	publisher = 	{L. Erlbaum Associates Inc.},
	address = 		{Mahwah, NJ, USA},
	edition = 		{1},
}

@inproceedings{Kieras2003-KLM-inproceedings,
    author =            {Kieras, David E.},
    title =             {{Using the Keystroke-Level Model to Estimate Execution Times}},
    year =              {2003},
    url =               {https://api.semanticscholar.org/CorpusID:59918479},
    abstract =          {The Keystroke-Level Model (KLM), proposed by Card, Moran, & Newell (1983), predicts task execution time from a specified design and specific task scenario. Basically, you list the sequence of keystroke-level actions the user must perform to accomplish a task, and then add up the times required by the actions. It is not necessary to have an implemented or mocked-up design; the KLM requires only that the user interface be specified in enough detail to dictate the sequence of actions required to perform the tasks of interest.},
}

@article{Olson1990-KLM-HCI-article,
    author =            {Olson, Judith Reitman and Olson, Gary M.},
    title =             {{The Growth of Cognitive Modeling in Human-Computer Interaction Since GOMS}},
    journal =           {Human–Computer Interaction},
    volume =            {5},
    number =            {2-3},
    pages =             {221--265},
    year =              {1990},
    publisher =         {Taylor \& Francis},
    doi =               {10.1080/07370024.1990.9667155},
    URL =               {https://doi.org/10.1080/07370024.1990.9667155},
    eprint =            {https://doi.org/10.1080/07370024.1990.9667155},
    abstract =          {The purpose of this article is to review where we stand with regard to modeling the kind of cognition involved in human-computer interaction. Card, Moran, and Newell's pioneering work on cognitive engineering models and explicit analyses of the knowledge people need to perform a procedure was a significant advance from the kind of modeling cognitive psychology offered at the time. Since then, coordinated bodies of research have both confirmed the basic set of parameters and advanced the number of parameters that account for the time of certain component activities. Formal modeling in grammars and production systems has provided an account for error production in some cases, as well as a basis for calculating how long a system will take to learn and how much savings there is from previous learning. Recently, we were given a new tool for modeling nonsequential component processes, adapting the "critical path analysis" from engineering to the specification of interacting processes and their consequent durations. Though these advances have helped, there are still significant gaps in our understanding of the whole process of interacting with computers. The cumulative nature of this empirical body and its associated modeling framework has further highlighted important issues central to research in cognitive psychology: how people move smoothly between skilled performance and problem solving, how people learn, how to design for consistent user interfaces, how people produce and manage errors, how we interpret visual displays for meaning, and what processes run concurrently and which depend on the completion of prior processes. In the bigger picture, cognitive modeling is a method that is useful in both initial design (it can narrow the design space and provide early analyses of design alternatives), evaluation, and training. But it does not extend to broader aspects of the context in which people use computers, partly because there are significant gaps in contemporary cognitive theory to inform the modeling and partly because it is the wrong form of model for certain kinds of more global questions in human-computer interaction. Notably, it fails to capture the user's fatigue, individual differences, or mental workload. And it is not the type of model that will aid the designer in designating the set of functions the software ought to contain, to assess the user's judgment of the acceptability of the software, or the change that could be expected in work life and the organization in which this work and person fits. Clearly, these kinds of considerations require modeling and tools of a different granularity and form.},
}


@book{RubinChisnellSpool2008-UsabilityTesting-book,
	author =       	{Rubin, Jeffrey and Chisnell, Dana},
	title =       	{{Handbook of Usability Testing: How to Plan, Design, and Conduct Effective Tests}},
	doi = 			{},
	isbn = 			{0470185481},
	publisher =    	{John Wiley and Sons, Ltd},
	address = 		{Indianapolis, IN, USA},
	url = 			{https://www.wiley.com/en-us/Handbook+of+Usability+Testing%3A+How+to+Plan%2C+Design%2C+and+Conduct+Effective+Tests%2C+2nd+Edition-p-9780470185483},
	year =         	{2008},
	month =        	{May},
	edition =      	{2},
	abstract = 		{Handbook of Usability Testing, Second Edition, is a nuts-and-bolts guide for beginners, loaded with tips and tricks for effectively testing products of all types. From software, GUIs, and technical documentation, to medical instruments and exercise bikes, no matter what type of product, readers will learn to design and administer reliable tests to ensure that people find it easy and desirable to use. Requires no engineering or human factors training. A rigorous, step-by-step approach--with an eye to common gaffes and pitfalls--saves months of trial and error. Liberally peppered with real-life examples and case histories taken from a wide range of industries. Packed with extremely usable templates, models, tables, test plans, and other indispensable tools of the trade. The Second Edition will be fully updated--30\% revised, with 100 new pages. Chapters will be reorganized to reflect more current industry practices, outdated terminology will be updated, and more varied exa mples provided. Many individual chapters will also be heavily revised to reflect current best practicies. The companion website will include additional case examples samples and templates beyond those already provided within the print product.},
}

@TechReport{ISO25062-2006,
  author      = {{ISO/IEC 25062:2006(E)}},
  institution = {International Organization for Standardization},
  title       = {{Software engineering -- Software product Quality Requirements and Evaluation (SQuaRE) -- Common Industry Format (CIF) for usability test reports}},
  year        = {2006},
  address     = {Geneva, CH},
  month       = {Apr},
  type        = {Standard},
  edition     = {1},
  url         = {https://www.iso.org/standard/43046.html},
}

@article{Freeder2003-webmetrics-PermMeaMetric-article,
    author =    {Freeder, Daphne and Chelliah, Janet},
    title =     {{Web Metrics: Proven Methods for Measuring Web Site Success}},
    journal =   {Performance Measurement and Metrics},
    volume =    {4},
    number =    {3},
    year=       {2003},
    month =     {Dec},
    pages =     {124--125},
    numpages =  {2},
    doi =       {10.1108/14678040310507905},
    issn =      {1467-8047},
    abstract =  {},
}

@article{Sweller1994-CognitiveLoadTheory-article,
    author =    {Sweller, John},
    title =     {Cognitive load theory, learning difficulty, and instructional design},
    journal =   {Learning and instruction},
    volume =    {4},
    number =    {4},
    pages =     {295--312},
    year =      {1994},
    publisher = {Elsevier},
}


