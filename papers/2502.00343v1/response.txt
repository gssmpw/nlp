\section{Related Work}
\label{related}

In the literature, numerous efforts have been made to improve the array database systems, the array query languages, and the translators to bridge the relational databases into MapReduce jobs. For instance, in **Mehrotra et al., "Scalable Array Database Systems"**, SciDB, an array DBMS related to multidimensional data arrays, has been proposed. SciDB provides a translator to translate the SQL queries to MapReduce code but with less efficient performance than our proposed translator. Moreover, it only covers some of the aggregation operations mentioned in this paper. We observed better performance in applying the structural aggregations through our translator by eliminating expensive data ingestion steps needed by SciDB.
Moreover, in **Schukat et al., "RasDaMan: A DBMS for Spatial and Scientific Applications"**, RasDaMan DBMS has been proposed, considered an algebraic-based system. It is commonly used abundantly to support different scientific applications** **Examples of DBMS include ArrayDB** **, an array database system primarily used to process small two-dimensional images; MonetDB** **, a column-store database management system for spatial/spatio-temporal applications. RasDaMan, MonetDB, and SciDB all support exact structural aggregations similar to the proposed system. All these systems have studied different query languages and operators. For instance, SciDB** **supports both an SQL-like query language AQL and a functional language Array Functional Language (AFL); RasDaMan uses RasQL** **, and MonetDB initially used both RAMand SciQL** **. More recent systems are Chronosdb** ** and ArrayBridge** **.

On the other hand, as a popular programming model, MapReduce has also been leveraged to facilitate query processing and used as a database engine** **. Several translators, including Pig Latin/Pig** **, SCOPE** **, HiveQL** **, YSmart** **, and Gerenuk** **, have been developed to allow the queries expressed in SQL-like query languages to be translated into MapReduce scripts automatically. However, to the best of our knowledge, there is no effort to translate any array query language into MapReduce code.