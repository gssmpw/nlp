[
  {
    "index": 0,
    "papers": [
      {
        "key": "bloom1970space",
        "author": "Bloom, Burton H",
        "title": "Space/time trade-offs in hash coding with allowable errors"
      }
    ]
  },
  {
    "index": 1,
    "papers": [
      {
        "key": "broder2004network",
        "author": "Broder, Andrei and Mitzenmacher, Michael",
        "title": "Network applications of Bloom filters: A survey"
      },
      {
        "key": "tarkoma2011theory",
        "author": "Tarkoma, Sasu and Rothenberg, Christian Esteve and Lagerspetz, Eemil",
        "title": "Theory and practice of Bloom filters for distributed systems"
      },
      {
        "key": "geravand2013bloom",
        "author": "Geravand, Shahabeddin and Ahmadi, Mahmood",
        "title": "Bloom filter applications in network security: A state-of-the-art survey"
      }
    ]
  },
  {
    "index": 2,
    "papers": [
      {
        "key": "chang2008bigtable",
        "author": "Chang, Fay and Dean, Jeffrey and Ghemawat, Sanjay and Hsieh, Wilson C and Wallach, Deborah A and Burrows, Mike and Chandra, Tushar and Fikes, Andrew and Gruber, Robert E",
        "title": "Bigtable: A distributed storage system for structured data"
      },
      {
        "key": "goodrich2011invertible",
        "author": "Goodrich, Michael T and Mitzenmacher, Michael",
        "title": "Invertible Bloom lookup tables"
      },
      {
        "key": "lu2012bloomstore",
        "author": "Lu, Guanlin and Nam, Young Jin and Du, David HC",
        "title": "BloomStore: Bloom-filter based memory-efficient key-value store for indexing of data deduplication on flash"
      }
    ]
  },
  {
    "index": 3,
    "papers": [
      {
        "key": "pagh2005optimal",
        "author": "Pagh, Anna and Pagh, Rasmus and Rao, S Srinivasa",
        "title": "An optimal Bloom filter replacement"
      }
    ]
  },
  {
    "index": 4,
    "papers": [
      {
        "key": "fan2014cuckoo",
        "author": "Fan, Bin and Andersen, Dave G and Kaminsky, Michael and Mitzenmacher, Michael D",
        "title": "Cuckoo filter: Practically better than Bloom"
      }
    ]
  },
  {
    "index": 5,
    "papers": [
      {
        "key": "wang2019vacuum",
        "author": "Wang, Minmei and Zhou, Mingxun",
        "title": "Vacuum filters: More space-efficient and faster replacement for Bloom and Cuckoo filters"
      }
    ]
  },
  {
    "index": 6,
    "papers": [
      {
        "key": "graf2020xor",
        "author": "Graf, Thomas Mueller and Lemire, Daniel",
        "title": "Xor filters: Faster and smaller than Bloom and Cuckoo filters"
      }
    ]
  },
  {
    "index": 7,
    "papers": [
      {
        "key": "peter2021ribbon",
        "author": "Peter C. Dillinger and Stefan Walzer",
        "title": "Ribbon Filter: Practically smaller than Bloom and Xor"
      }
    ]
  },
  {
    "index": 8,
    "papers": [
      {
        "key": "bloom1970space",
        "author": "Bloom, Burton H",
        "title": "Space/time trade-offs in hash coding with allowable errors"
      }
    ]
  },
  {
    "index": 9,
    "papers": [
      {
        "key": "broder2004network",
        "author": "Broder, Andrei and Mitzenmacher, Michael",
        "title": "Network applications of Bloom filters: A survey"
      },
      {
        "key": "tarkoma2011theory",
        "author": "Tarkoma, Sasu and Rothenberg, Christian Esteve and Lagerspetz, Eemil",
        "title": "Theory and practice of Bloom filters for distributed systems"
      },
      {
        "key": "geravand2013bloom",
        "author": "Geravand, Shahabeddin and Ahmadi, Mahmood",
        "title": "Bloom filter applications in network security: A state-of-the-art survey"
      }
    ]
  },
  {
    "index": 10,
    "papers": [
      {
        "key": "chang2008bigtable",
        "author": "Chang, Fay and Dean, Jeffrey and Ghemawat, Sanjay and Hsieh, Wilson C and Wallach, Deborah A and Burrows, Mike and Chandra, Tushar and Fikes, Andrew and Gruber, Robert E",
        "title": "Bigtable: A distributed storage system for structured data"
      },
      {
        "key": "goodrich2011invertible",
        "author": "Goodrich, Michael T and Mitzenmacher, Michael",
        "title": "Invertible Bloom lookup tables"
      },
      {
        "key": "lu2012bloomstore",
        "author": "Lu, Guanlin and Nam, Young Jin and Du, David HC",
        "title": "BloomStore: Bloom-filter based memory-efficient key-value store for indexing of data deduplication on flash"
      }
    ]
  },
  {
    "index": 11,
    "papers": [
      {
        "key": "pagh2005optimal",
        "author": "Pagh, Anna and Pagh, Rasmus and Rao, S Srinivasa",
        "title": "An optimal Bloom filter replacement"
      }
    ]
  },
  {
    "index": 12,
    "papers": [
      {
        "key": "pagh2005optimal",
        "author": "Pagh, Anna and Pagh, Rasmus and Rao, S Srinivasa",
        "title": "An optimal Bloom filter replacement"
      }
    ]
  },
  {
    "index": 13,
    "papers": [
      {
        "key": "fan2014cuckoo",
        "author": "Fan, Bin and Andersen, Dave G and Kaminsky, Michael and Mitzenmacher, Michael D",
        "title": "Cuckoo filter: Practically better than Bloom"
      }
    ]
  },
  {
    "index": 14,
    "papers": [
      {
        "key": "wang2019vacuum",
        "author": "Wang, Minmei and Zhou, Mingxun",
        "title": "Vacuum filters: More space-efficient and faster replacement for Bloom and Cuckoo filters"
      }
    ]
  },
  {
    "index": 15,
    "papers": [
      {
        "key": "graf2020xor",
        "author": "Graf, Thomas Mueller and Lemire, Daniel",
        "title": "Xor filters: Faster and smaller than Bloom and Cuckoo filters"
      }
    ]
  },
  {
    "index": 16,
    "papers": [
      {
        "key": "peter2021ribbon",
        "author": "Peter C. Dillinger and Stefan Walzer",
        "title": "Ribbon Filter: Practically smaller than Bloom and Xor"
      }
    ]
  },
  {
    "index": 17,
    "papers": [
      {
        "key": "kraska2018case",
        "author": "Kraska, Tim and Beutel, Alex and Chi, Ed H and Dean, Jeffrey and Polyzotis, Neoklis",
        "title": "The case for learned index structures"
      }
    ]
  },
  {
    "index": 18,
    "papers": [
      {
        "key": "mitzenmacher2018model",
        "author": "Mitzenmacher, Michael",
        "title": "A model for learned Bloom filters and optimizing by sandwiching"
      }
    ]
  },
  {
    "index": 19,
    "papers": [
      {
        "key": "dai2020adaptive",
        "author": "Dai, Zhenwei and Shrivastava, Anshumali",
        "title": "Adaptive learned Bloom filter (Ada-BF): Efficient utilization of the classifier with application to real-time information filtering on the web"
      }
    ]
  },
  {
    "index": 20,
    "papers": [
      {
        "key": "vaidya2021partitioned",
        "author": "Kapil Vaidya and Eric Knorr and Michael Mitzenmacher and Tim Kraska",
        "title": "Partitioned learned Bloom filters"
      }
    ]
  },
  {
    "index": 21,
    "papers": [
      {
        "key": "sato2023fast",
        "author": "Sato, Atsuki and Matsui, Yusuke",
        "title": "Fast partitioned learned Bloom filter"
      }
    ]
  },
  {
    "index": 22,
    "papers": [
      {
        "key": "kraska2018case",
        "author": "Kraska, Tim and Beutel, Alex and Chi, Ed H and Dean, Jeffrey and Polyzotis, Neoklis",
        "title": "The case for learned index structures"
      }
    ]
  },
  {
    "index": 23,
    "papers": [
      {
        "key": "mitzenmacher2018model",
        "author": "Mitzenmacher, Michael",
        "title": "A model for learned Bloom filters and optimizing by sandwiching"
      }
    ]
  },
  {
    "index": 24,
    "papers": [
      {
        "key": "dai2020adaptive",
        "author": "Dai, Zhenwei and Shrivastava, Anshumali",
        "title": "Adaptive learned Bloom filter (Ada-BF): Efficient utilization of the classifier with application to real-time information filtering on the web"
      }
    ]
  },
  {
    "index": 25,
    "papers": [
      {
        "key": "vaidya2021partitioned",
        "author": "Kapil Vaidya and Eric Knorr and Michael Mitzenmacher and Tim Kraska",
        "title": "Partitioned learned Bloom filters"
      }
    ]
  },
  {
    "index": 26,
    "papers": [
      {
        "key": "sato2023fast",
        "author": "Sato, Atsuki and Matsui, Yusuke",
        "title": "Fast partitioned learned Bloom filter"
      }
    ]
  },
  {
    "index": 27,
    "papers": [
      {
        "key": "fumagalli2022choice",
        "author": "Fumagalli, Giacomo and Raimondi, Davide and Giancarlo, Raffaele and Malchiodi, Dario and Frasca, Marco",
        "title": "On the choice of general purpose classifiers in learned Bloom filters: An initial analysis within basic filters"
      },
      {
        "key": "dai2022optimizing",
        "author": "Dai, Zhenwei and Shrivastava, Anshumali and Reviriego, Pedro and Hern{\\'a}ndez, Jos{\\'e} Alberto",
        "title": "Optimizing learned Bloom filters: How much should be learned?"
      },
      {
        "key": "malchiodi2024role",
        "author": "Malchiodi, Dario and Raimondi, Davide and Fumagalli, Giacomo and Giancarlo, Raffaele and Frasca, Marco",
        "title": "The role of classifiers and data complexity in learned Bloom filters: Insights and recommendations"
      }
    ]
  },
  {
    "index": 28,
    "papers": [
      {
        "key": "fumagalli2022choice",
        "author": "Fumagalli, Giacomo and Raimondi, Davide and Giancarlo, Raffaele and Malchiodi, Dario and Frasca, Marco",
        "title": "On the choice of general purpose classifiers in learned Bloom filters: An initial analysis within basic filters"
      },
      {
        "key": "dai2022optimizing",
        "author": "Dai, Zhenwei and Shrivastava, Anshumali and Reviriego, Pedro and Hern{\\'a}ndez, Jos{\\'e} Alberto",
        "title": "Optimizing learned Bloom filters: How much should be learned?"
      },
      {
        "key": "malchiodi2024role",
        "author": "Malchiodi, Dario and Raimondi, Davide and Fumagalli, Giacomo and Giancarlo, Raffaele and Frasca, Marco",
        "title": "The role of classifiers and data complexity in learned Bloom filters: Insights and recommendations"
      }
    ]
  },
  {
    "index": 29,
    "papers": [
      {
        "key": "xie2021hashadaptive",
        "author": "Xie, Rongbiao and Li, Meng and Miao, Zheyu and Gu, Rong and Huang, He and Dai, Haipeng and Chen, Guihai",
        "title": "Hash Adaptive Bloom Filter"
      }
    ]
  },
  {
    "index": 30,
    "papers": [
      {
        "key": "bhattacharya2022new",
        "author": "Bhattacharya, Arindam and Gudesa, Chathur and Bagchi, Amitabha and Bedathur, Srikanta",
        "title": "New wine in an old bottle: data-aware hash functions for bloom filters"
      }
    ]
  },
  {
    "index": 31,
    "papers": [
      {
        "key": "kraska2018case",
        "author": "Kraska, Tim and Beutel, Alex and Chi, Ed H and Dean, Jeffrey and Polyzotis, Neoklis",
        "title": "The case for learned index structures"
      }
    ]
  },
  {
    "index": 32,
    "papers": [
      {
        "key": "mitzenmacher2018model",
        "author": "Mitzenmacher, Michael",
        "title": "A model for learned Bloom filters and optimizing by sandwiching"
      }
    ]
  },
  {
    "index": 33,
    "papers": [
      {
        "key": "vaidya2021partitioned",
        "author": "Kapil Vaidya and Eric Knorr and Michael Mitzenmacher and Tim Kraska",
        "title": "Partitioned learned Bloom filters"
      }
    ]
  }
]