\section{RELATED WORK}
\label{sec:realtedwork}

\subsection{Change Detection}
In the 3D change detection literature, many methods adopt an object-centric approach. For instance, Shi, "A Survey of Change Detection in 3D Scenes" and Liu, "Object-Centric Change Detection for Large-Scale Environments" define and manage changes based on panoptic or semantic segmentation. However, these strategies often rely on neural networks trained on large amounts of labeled data, which may be infeasible for diverse or unstructured outdoor environments.
Alternatively, several approaches Zhang, "Geometric Change Prior for Reconstructing 3D Scenes" and Wang, "Geometric-Aware Change Detection for Dynamic Environments" leverage geometric changes as a prior for reconstructing object-level differences between sessions. Although effective, they assume that changes occur in discrete, object-wise units---an assumption that may break down in highly dynamic outdoor settings, such as construction sites where sand or soil is incrementally added. To address this limitation, we detect changes at the point cloud level and maintain point-wise ephemerality, thereby accommodating continuous or non-discrete changes. This allows us to handle a broader range of real-world scenarios and move beyond a binary changed/not-changed classification paradigm.

\subsection{LiDAR-based Lifelong Mapping}
LiDAR-based lifelong mapping has dealt with scalability Li, "Efficient Lifelong Learning for 3D Point Clouds" or predictability Kulkarni, "Predictive Modeling of Lifelong Map Updates" , but most of them were demonstrated in two-dimensional spaces.
Kim et al., "3D Map Maintenance Pipeline for Dynamic Environments" suggested a 3D map maintenance pipeline, but they assumed accurate registration and lacked the ability to revert the updates.
Recently, LT-mapper Liu, "LT-Mapper: A Modular Approach for Lifelong Mapping" suggested the modular approach for lifelong mapping with the following three modules.

\subsubsection{Multi-session map alignment} 
Aligning a point cloud map is often viewed as a registration problem Zhang, "Point Cloud Registration via Deep Learning" . 
However, relying solely on simple rigid-body transformations can introduce alignment errors when the mapped region expands Liu, "Registration-Free Point Cloud Alignment for Large-Scale Environments" .
To address these challenges, multi-session PGO frameworks Lee, "Pose Graph Optimization with Temporal Consistency" have been proposed, but they still face local inconsistencies in large-scale environments. 

\subsubsection{Dynamic object removal} 
Geometry-based methods discretize the environment using voxels Lin, "Voxel-Based Dynamic Object Removal for 3D Scenes" , range images Wang, "Range Image-Based Dynamic Object Removal" , bins Chen, "Grid-Based Dynamic Object Removal for Large-Scale Environments" , or matrices Li, "Matrix-Based Dynamic Object Removal with Adaptive Thresholding" .
However, these methods are constrained by grid resolution, risking inaccuracies when a single cell contains both static and dynamic points. 
Learning-based methods Zhang, "Dynamic Object Removal via Deep Learning" can also be effective but typically require extensive labeled datasets to maintain robust performance in unfamiliar scenarios.

\subsubsection{Map update} 
LT-mapper Kim et al., "LT-Mapper: A Modular Approach for Lifelong Mapping" and Liu et al., "Efficient Map Update for Dynamic Environments" detect changes between sessions and update the existing map accordingly. 
They save the changed points and use a version control system Zhang, "Version Control System for 3D Maps with Contextual Information" that allows manual rollbacks Lee, "Rollback-Based Map Updates for Lifelong Mapping" to previous maps via simple arithmetic operations.
Unfortunately, these methods treat changes as binary, which dilutes meaningful changes with outliers from various error sources.

Extending the modular nature, ELite addresses the drawbacks in each of the three modules by introducing ephemerality as a unifying concept throughout the pipeline. It identifies static and persistent regions during multi-session alignment, removes dynamic objects without discretization, and prioritizes meaningful changes for map updates by leveraging contextual information. This integrated use of ephemerality helps ensure more accurate and robust lifelong mapping in real-world, continuously evolving environments.