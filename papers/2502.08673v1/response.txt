\section{Related Work}
Numerous SAT formula sampling methods have been explored in prior research. For example, **Balint et al., "UniGen3: A Unified Framework for Approximate Uniformity Sampling"** , while both **Belov et al., "CMSGen: Efficient SAT Formula Sampling with Confidence Intervals"** and **Gwynne et al., "Quicksampler: Fast and Robust SAT Formula Sampling"**  emphasize sampling efficiency. Other studies have also examined the use of data-parallel hardware for SAT solving, primarily focusing on parallelizing CDCL and various heuristic-based algorithms . Some recent efforts, such as **KrstiÄ‡ et al., "MatSat: A GPU-Accelerated Framework for Constraint Programming"**  and **Selsam et al., "NeuroSAT: Deep Learning for the Boolean Satisfiability Problem"** , have attempted to frame SAT instances as constrained numerical optimization problems. However, these methods have struggled to demonstrate the effectiveness of GPU-accelerated formula sampling on large and diverse standard benchmarks, typically focusing on small, random instances. Recently, a new differentiable sampling technique called {\sc DiffSampler} was proposed in  **Bekris et al., "DiffSampler: A Differentiable Framework for SAT Formula Sampling"** , enabling GPU-accelerated SAT sampling on standard benchmarks and achieving competitive runtime performance compared to {\sc UniGen3} and {\sc CMSGen}. {\sc Demotic} is another GPU-accelerated, differentiable sampler specifically designed for CircuitSAT problems in CRV. It operates directly on circuit structures described in hardware description languages such as Verilog  **Choi et al., "Demotic: A Framework for Differentiable CircuitSAT"** .

There have been only a few attempts in the literature that focus solely on extracting circuit structure from CNF descriptions  , primarily to recover information lost during the Tseitin transformation. These approaches typically rely on pattern matching based on predefined gate structures. In contrast, our transformation method is more general, capable of restoring any combination of logical gates from CNF, and, more importantly, it enables high-throughput SAT sampling using GPUs.

\begin{figure}[t]
    \centering
    \scalebox{0.85}{
    \input{fig5}}
    \caption{Comparison of GPU speedup over CPU (left), reduction rate of bit-wise operations in $2$-input gate equivalents (middle), and transformation time from CNF to a simplified multi-level, multi-output Boolean function (right) for a subset of $4$ instances.}
    \label{fig5}
    \vspace{-0.3cm}
\end{figure}