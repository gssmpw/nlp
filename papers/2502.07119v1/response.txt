\section{Related Works}
The growing use of IoT devices has revealed the limitations of traditional Intrusion Detection Systems (IDS), which often cannot effectively handle the diverse traffic patterns of IoT networks **Li, "Anomaly Detection in IoT Networks"**. This has driven interest in ML-based IDS, which utilize data-driven methods to improve the detection of network anomalies. Among these ML-based approaches, supervised learning is effective for known threats but fails to detect zero-day attacks due to its reliance on patterns from labeled data. Unsupervised learning, while not relying on labeled data, still needs further investigation to enhance its generalization capabilities in network intrusion detection **Chen, "Unsupervised Anomaly Detection in Network Traffic"**. To address this gap, Self-Supervised Learning (SSL) has emerged as a promising alternative, combining the advantages of both supervised and unsupervised learning methodologies.

%The following section delves into the integration of SSL with other advanced techniques proposed by researchers, exploring the potential to further enhance IDS capabilities in IoT security applications. \par

%Several works focus on the integration of SSL with advanced techniques for intrusion detection.
%Wang et al. introduced the Robust Unsupervised Network Intrusion Detection System (RUIDS) by incorporating a masked context reconstruction module into a transformer-based SSL framework **Wang, "Robust Unsupervised Network Intrusion Detection System"**.%to address the common issues of anomaly contamination and overlooked temporal context in existing models **Wang et al., "Temporal Context Reconstruction for Anomaly Detection"**. By incorporating a masked context reconstruction module into a transformer-based SSL framework, RUIDS learns more robust representations, making it more sensitive to noisy data.
Several studies focus on using contrastive learning for intrusion detection. Almaraz et al. transform IDS datasets into synthetic grayscale images, which are then augmented using techniques such as cropping, and adding noise **Almaraz, "Contrastive Learning for Anomaly Detection"**. They then pre-train using the Momentum Contrast (MoCo v2) technique and fine-tune the model for tasks such as attack detection and protocol classification. Yang et al. process untagged packet data into vectorized representations and create masked matrices to enhance pre-training **Yang, "Vectorized Packet Data Representation"**. Yue et al. employ an encoder-projector-predictor architecture, mapping feature outputs onto a unit sphere to enhance classification accuracy **Yue, "Encoder-Projector-Predictor Architecture for Anomaly Detection"**.

%further tackle issues of inter-class similarity and intra-class diversity, which often result in false detections in IDS. They introduce a contrastive framework designed to better measure sample distances, accommodating class-related challenges. Their model employs an encoder-projector-predictor architecture, mapping feature outputs onto a unit sphere to enhance classification accuracy.
Another promising direction is integrating graph-based algorithms for intrusion detection. Nguyen et al. propose Traffic-aware Self-supervised Learning (TS-IDS) to address the unique characteristics of IoT traffic by representing network data as a graph **Nguyen, "Traffic-Aware Self-Supervised Learning"**. TS-IDS uses a Graph Neural Network (GNN) enriched by auxiliary property-based SSL to learn IoT-specific communication patterns. Caville et al. present the Anomal-E framework, which offers a more generalized graph-based approach for broader network intrusion detection **Caville, "Anomal-E Framework for Network Intrusion Detection"**. Anomal-E structures network flows as graphs, with nodes representing entities and edges denoting communication flows, and applies contrastive learning to maximize mutual information across local and global graph representations to distinguish between normal and anomalous patterns.

%Besides contrastive learning and graph-based approaches.
%Nakıp and Gelenbe propose an online SSL framework that continuously learns from evolving network traffic, enhancing real-time threat detection through adaptive updates **Nakıp et al., "Online Self-Supervised Learning for Real-Time Threat Detection"**. Wang et al. enhance the Bootstrap Your Own Latent (BYOL) SSL method by dynamically generating contrastive pairs, which strengthens robustness against anomalous data **Wang, "Dynamically Generated Contrastive Pairs for Robustness Enhancement"**.
% Sharma et al. utilize DeepInsight **Sharma et al., "DeepInsight for Anomaly Detection"** to transform tabular network intrusion data into images, enabling Convolutional Neural Network (CNN) processing for effective threat classification **Sharma, "Image-Based Threat Classification Using CNNs"**.

Recent studies have explored the use of novelty detection methods to effectively distinguish between normal and abnormal network traffic. Local Outlier Factor (LOF), when applied in a network intrusion context, measures the local density of network flow data points and identifies anomalies based on deviations from expected patterns, making it effective for detecting isolated attacks or rare traffic behaviors **Kuo et al., "Local Outlier Factor for Anomaly Detection"**. Isolation Forest (IF) enhances anomaly detection in network intrusion systems by recursively partitioning traffic data, efficiently isolating anomalous patterns in large, high-dimensional network datasets **Liu et al., "Isolation Forest for Anomaly Detection"**. Deep Isolation Forest (DIF) extends this approach by using SSL-pretrained representations of network traffic to map flows into high-dimensional spaces, improving its ability to isolate complex and subtle intrusions **Tian et al., "Deep Isolation Forest for Complex Anomaly Detection"**. However, these methods struggle with the complex, dynamic nature of real-time network traffic and face scalability challenges.

%Variational and masked autoencoders are also frequently used in network intrusion detection, where reconstruction errors from SSL-pretrained models highlight anomalies in network traffic that deviate from learned normal behavior **Zhang et al., "Variational Autoencoder for Anomaly Detection"**. Neural Transformation Learning (NeuTraL) is a self-supervised framework that further advances novelty detection by transforming raw input data into latent representations that emphasize critical features for distinguishing normal and anomalous patterns **Wang, "Neural Transformation Learning for Novelty Detection"**. NeuTraL’s ability to model complex relationships and capture subtle deviations makes it particularly suitable for identifying zero-day attacks and evolving threats in network traffic data.

%Several SSL-based IDS frameworks lack publicly available code or baseline implementations, limiting their reproducibility and benchmarking. Some also integrate supervised components, making them unsuitable for pure SSL evaluations. Together,

Although these studies highlight the scope of SSL-based network intrusion detection, many rely on computationally intensive models like transformers, resulting in resource overhead and reduced scalability for real-time detection. Additionally, pre-training methods using ResNet and MoCo, while effective in image-based contexts, may struggle to capture the patterns inherent in network traffic. GNN-based IDS frameworks face challenges in terms of efficiency and scalability. Constructing graph representations from raw network data is time-consuming, and GNN models further extend processing time. In contrast, by transforming tabular network flow data into an image format that maps correlated features to meaningful spatial representations, and subsequently employing a masked autoencoder within a lightweight framework, our approach is better aligned with the unique structure and demands of network datasets.

%In addition to contrastive learning and graph-based methods, recent studies in anomaly detection for network intrusion have explored diverse approaches to improve detection accuracy and adaptability.