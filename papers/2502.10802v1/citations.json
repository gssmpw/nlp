[
  {
    "index": 0,
    "papers": [
      {
        "key": "li2022competition",
        "author": "Li, Yujia and Choi, David and Chung, Junyoung and Kushman, Nate and Schrittwieser, Julian and Leblond, R{\\'e}mi and Eccles, Tom and Keeling, James and Gimeno, Felix and Dal Lago, Agustin and others",
        "title": "Competition-level code generation with alphacode"
      }
    ]
  },
  {
    "index": 1,
    "papers": [
      {
        "key": "chen2022codet",
        "author": "Chen, Bei and Zhang, Fengji and Nguyen, Anh and Zan, Daoguang and Lin, Zeqi and Lou, Jian-Guang and Chen, Weizhu",
        "title": "Codet: Code generation with generated tests"
      }
    ]
  },
  {
    "index": 2,
    "papers": [
      {
        "key": "shi2022natural",
        "author": "Shi, Freda and Fried, Daniel and Ghazvininejad, Marjan and Zettlemoyer, Luke and Wang, Sida I",
        "title": "Natural language to code translation with execution"
      }
    ]
  },
  {
    "index": 3,
    "papers": [
      {
        "key": "shinn2024reflexion",
        "author": "Shinn, Noah and Cassano, Federico and Gopinath, Ashwin and Narasimhan, Karthik and Yao, Shunyu",
        "title": "Reflexion: Language agents with verbal reinforcement learning"
      }
    ]
  },
  {
    "index": 4,
    "papers": [
      {
        "key": "olausson2023self",
        "author": "Olausson, Theo X and Inala, Jeevana Priya and Wang, Chenglong and Gao, Jianfeng and Solar-Lezama, Armando",
        "title": "Is Self-Repair a Silver Bullet for Code Generation?"
      }
    ]
  },
  {
    "index": 5,
    "papers": [
      {
        "key": "zhang2023self",
        "author": "Zhang, Kechi and Li, Zhuo and Li, Jia and Li, Ge and Jin, Zhi",
        "title": "Self-edit: Fault-aware code editor for code generation"
      }
    ]
  },
  {
    "index": 6,
    "papers": [
      {
        "key": "Zhong0S24ldb",
        "author": "Li Zhong and\nZilong Wang and\nJingbo Shang",
        "title": "Debug like a Human: {A} Large Language Model Debugger via Verifying\nRuntime Execution Step by Step"
      }
    ]
  },
  {
    "index": 7,
    "papers": [
      {
        "key": "huang2023codecot",
        "author": "Huang, Dong and Bu, Qingwen and Qing, Yuhao and Cui, Heming",
        "title": "Codecot: Tackling code syntax errors in cot reasoning for code generation"
      }
    ]
  },
  {
    "index": 8,
    "papers": [
      {
        "key": "brown2020language",
        "author": "Brown, Tom and Mann, Benjamin and Ryder, Nick and Subbiah, Melanie and Kaplan, Jared D and Dhariwal, Prafulla and Neelakantan, Arvind and Shyam, Pranav and Sastry, Girish and Askell, Amanda and others",
        "title": "Language models are few-shot learners"
      }
    ]
  },
  {
    "index": 9,
    "papers": [
      {
        "key": "zhang2024pair",
        "author": "Zhang, Huan and Cheng, Wei and Wu, Yuhan and Hu, Wei",
        "title": "A Pair Programming Framework for Code Generation via Multi-Plan Exploration and Feedback-Driven Refinement"
      }
    ]
  },
  {
    "index": 10,
    "papers": [
      {
        "key": "chen2022codet",
        "author": "Chen, Bei and Zhang, Fengji and Nguyen, Anh and Zan, Daoguang and Lin, Zeqi and Lou, Jian-Guang and Chen, Weizhu",
        "title": "Codet: Code generation with generated tests"
      }
    ]
  },
  {
    "index": 11,
    "papers": [
      {
        "key": "huang2023codecot",
        "author": "Huang, Dong and Bu, Qingwen and Qing, Yuhao and Cui, Heming",
        "title": "Codecot: Tackling code syntax errors in cot reasoning for code generation"
      }
    ]
  },
  {
    "index": 12,
    "papers": [
      {
        "key": "fraser2011evosuite",
        "author": "Fraser, Gordon and Arcuri, Andrea",
        "title": "Evosuite: automatic test suite generation for object-oriented software"
      }
    ]
  },
  {
    "index": 13,
    "papers": [
      {
        "key": "siddiq2024using",
        "author": "Siddiq, Mohammed Latif and Da Silva Santos, Joanna Cecilia and Tanvir, Ridwanul Hasan and Ulfat, Noshin and Al Rifat, Fahmid and Carvalho Lopes, Vin{\\'\\i}cius",
        "title": "Using large language models to generate junit tests: An empirical study"
      }
    ]
  },
  {
    "index": 14,
    "papers": [
      {
        "key": "guilherme2023initial",
        "author": "Guilherme, Vitor and Vincenzi, Auri",
        "title": "An initial investigation of ChatGPT unit test generation capability"
      }
    ]
  },
  {
    "index": 15,
    "papers": [
      {
        "key": "schafer2023empirical",
        "author": "Sch\u00e4fer, Max and Nadi, Sarah and Eghbali, Aryaz and Tip, Frank",
        "title": "An Empirical Evaluation of Using Large Language Models for Automated Unit Test Generation"
      }
    ]
  },
  {
    "index": 16,
    "papers": [
      {
        "key": "alshahwan2024automated",
        "author": "Alshahwan, Nadia and Chheda, Jubin and Finogenova, Anastasia and Gokkaya, Beliz and Harman, Mark and Harper, Inna and Marginean, Alexandru and Sengupta, Shubho and Wang, Eddy",
        "title": "Automated unit test improvement using large language models at meta"
      }
    ]
  },
  {
    "index": 17,
    "papers": [
      {
        "key": "dinella2022toga",
        "author": "Dinella, Elizabeth and Ryan, Gabriel and Mytkowicz, Todd and Lahiri, Shuvendu K",
        "title": "Toga: A neural method for test oracle generation"
      }
    ]
  },
  {
    "index": 18,
    "papers": [
      {
        "key": "hossain2024togll",
        "author": "Hossain, Soneya Binta and Dwyer, Matthew",
        "title": "TOGLL: Correct and Strong Test Oracle Generation with LLMs"
      }
    ]
  },
  {
    "index": 19,
    "papers": [
      {
        "key": "hossain2023neural",
        "author": "Hossain, Soneya Binta and Filieri, Antonio and Dwyer, Matthew B and Elbaum, Sebastian and Visser, Willem",
        "title": "Neural-based test oracle generation: A large-scale evaluation and lessons learned"
      }
    ]
  },
  {
    "index": 20,
    "papers": [
      {
        "key": "takerngsaksiri2024tdd",
        "author": "Takerngsaksiri, Wannita and Charakorn, Rujikorn and Tantithamthavorn, Chakkrit and Li, Yuan-Fang",
        "title": "TDD Without Tears: Towards Test Case Generation from Requirements through Deep Reinforcement Learning"
      }
    ]
  },
  {
    "index": 21,
    "papers": [
      {
        "key": "zhang2023well",
        "author": "Zhang, Ying and Song, Wenjia and Ji, Zhengjie and Meng, Na and others",
        "title": "How well does LLM generate security tests?"
      }
    ]
  },
  {
    "index": 22,
    "papers": [
      {
        "key": "schafer2023empirical",
        "author": "Sch\u00e4fer, Max and Nadi, Sarah and Eghbali, Aryaz and Tip, Frank",
        "title": "An Empirical Evaluation of Using Large Language Models for Automated Unit Test Generation"
      }
    ]
  },
  {
    "index": 23,
    "papers": [
      {
        "key": "kang2023large",
        "author": "Kang, Sungmin and Yoon, Juyeon and Yoo, Shin",
        "title": "Large language models are few-shot testers: Exploring llm-based general bug reproduction"
      }
    ]
  },
  {
    "index": 24,
    "papers": [
      {
        "key": "chen2022codet",
        "author": "Chen, Bei and Zhang, Fengji and Nguyen, Anh and Zan, Daoguang and Lin, Zeqi and Lou, Jian-Guang and Chen, Weizhu",
        "title": "Codet: Code generation with generated tests"
      }
    ]
  },
  {
    "index": 25,
    "papers": [
      {
        "key": "shinn2024reflexion",
        "author": "Shinn, Noah and Cassano, Federico and Gopinath, Ashwin and Narasimhan, Karthik and Yao, Shunyu",
        "title": "Reflexion: Language agents with verbal reinforcement learning"
      }
    ]
  },
  {
    "index": 26,
    "papers": [
      {
        "key": "bradley2024openelm",
        "author": "Bradley, Herbie and Fan, Honglu and Galanos, Theodoros and Zhou, Ryan and Scott, Daniel and Lehman, Joel",
        "title": "The openelm library: Leveraging progress in language models for novel evolutionary algorithms"
      }
    ]
  },
  {
    "index": 27,
    "papers": [
      {
        "key": "chen2023evoprompting",
        "author": "Chen, Angelica and Dohan, David and So, David",
        "title": "Evoprompting: Language models for code-level neural architecture search"
      }
    ]
  },
  {
    "index": 28,
    "papers": [
      {
        "key": "liu2023algorithm",
        "author": "Liu, Fei and Tong, Xialiang and Yuan, Mingxuan and Zhang, Qingfu",
        "title": "Algorithm evolution using large language model"
      }
    ]
  },
  {
    "index": 29,
    "papers": [
      {
        "key": "liu2024evolution",
        "author": "Liu, Fei and Xialiang, Tong and Yuan, Mingxuan and Lin, Xi and Luo, Fu and Wang, Zhenkun and Lu, Zhichao and Zhang, Qingfu",
        "title": "Evolution of Heuristics: Towards Efficient Automatic Algorithm Design Using Large Language Model"
      }
    ]
  },
  {
    "index": 30,
    "papers": [
      {
        "key": "ma2023eureka",
        "author": "Ma, Yecheng Jason and Liang, William and Wang, Guanzhi and Huang, De-An and Bastani, Osbert and Jayaraman, Dinesh and Zhu, Yuke and Fan, Linxi and Anandkumar, Anima",
        "title": "Eureka: Human-level reward design via coding large language models"
      }
    ]
  },
  {
    "index": 31,
    "papers": [
      {
        "key": "meyerson2024language",
        "author": "Meyerson, Elliot and Nelson, Mark J. and Bradley, Herbie and Gaier, Adam and Moradi, Arash and Hoover, Amy K. and Lehman, Joel",
        "title": "Language Model Crossover: Variation through Few-Shot Prompting"
      }
    ]
  },
  {
    "index": 32,
    "papers": [
      {
        "key": "romera2024mathematical",
        "author": "Romera-Paredes, Bernardino and Barekatain, Mohammadamin and Novikov, Alexander and Balog, Matej and Kumar, M Pawan and Dupont, Emilien and Ruiz, Francisco JR and Ellenberg, Jordan S and Wang, Pengming and Fawzi, Omar and others",
        "title": "Mathematical discoveries from program search with large language models"
      }
    ]
  },
  {
    "index": 33,
    "papers": [
      {
        "key": "ye2024reevo",
        "author": "Ye, Haoran and Wang, Jiarui and Cao, Zhiguang and Berto, Federico and Hua, Chuanbo and Kim, Haeyeon and Park, Jinkyoo and Song, Guojie",
        "title": "Reevo: Large language models as hyper-heuristics with reflective evolution"
      }
    ]
  },
  {
    "index": 34,
    "papers": [
      {
        "key": "duan2024autotest",
        "author": "Duan, Zhihua and Wang, Jialin",
        "title": "AutoTest: Evolutionary Code Solution Selection with Test Cases"
      }
    ]
  },
  {
    "index": 35,
    "papers": [
      {
        "key": "chi2024reaccept",
        "author": "Chi, Jianlei and Wang, Xiaotian and Huang, Yuhan and Yu, Lechen and Cui, Di and Sun, Jianguo and Sun, Jun",
        "title": "REACCEPT: Automated Co-evolution of Production and Test Code Based on Dynamic Validation and Large Language Models"
      }
    ]
  },
  {
    "index": 36,
    "papers": [
      {
        "key": "ruan2024evolutionary",
        "author": "Ruan, Haifeng and Nguyen, Hoang Lam and Shariffdeen, Ridwan and Noller, Yannic and Roychoudhury, Abhik",
        "title": "Evolutionary Testing for Program Repair"
      }
    ]
  },
  {
    "index": 37,
    "papers": [
      {
        "key": "chi2024reaccept",
        "author": "Chi, Jianlei and Wang, Xiaotian and Huang, Yuhan and Yu, Lechen and Cui, Di and Sun, Jianguo and Sun, Jun",
        "title": "REACCEPT: Automated Co-evolution of Production and Test Code Based on Dynamic Validation and Large Language Models"
      }
    ]
  },
  {
    "index": 38,
    "papers": [
      {
        "key": "gu2024testart",
        "author": "Gu, Siqi and Fang, Chunrong and Zhang, Quanjun and Tian, Fangyuan and Chen, Zhenyu",
        "title": "Testart: Improving llm-based unit test via co-evolution of automated generation and repair iteration"
      }
    ]
  }
]