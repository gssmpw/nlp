\section{RELATED WORK}
\label{sec:related work}
Recently, some RDH-EI schemes using secret sharing techniques have been proposed**Chen et al., "Robust Data Hiding in Encrypted Images via Secret Sharing"**. These schemes provide the ability to resist single-point failures over traditional encryption techniques. In $(r,n)$ secret sharing, the original pixel is encrypted into $n$ shares, and any $r$ ($r\leq n$) of those shares are sufficient to recover the original pixel value. By distributing the image shares on different cloud servers, these schemes ensure robustness against data loss or corruption. Based on the way to perform secret sharing, these schemes can be classified into two categories: block-based schemes and non-block-based schemes.

\subsection{Block-Based Schemes}
Block-based secret sharing schemes partition images into smaller blocks, creating space for data embedding through space-vacating techniques similar to those in block-based lightweight encryption. These techniques typically involve predicting pixel values using a pixel predictor, calculating prediction errors,  and then applying compression methods to minimize these errors. The primary distinctions between different block-based secret sharing schemes lie in the size of the blocks, the choice of pixel predictors, and the compression methods used. In **Chen et al., "Robust Data Hiding in Encrypted Images via Secret Sharing"**, each block consists of a pixel pair, and the predictor computes the difference between the two pixel values in each pair. Various expansion techniques are used for compression.  **Qin et al., "A Novel Compression Method Based on Preserving Differences in Block-Based RDH-EI"** use $2 \times 2$ blocks and introduce a novel compression method based on preserving differences. Here, prediction errors determine the embedding capacity, with some pixel bits representing these errors while others are used for data embedding. The scheme in **Wang et al., "A Robust Data Hiding Scheme Based on Block-Based Secret Sharing"** is similar to that of Chen$~et~al.$, but incorporates the Chinese remainder theorem for secret sharing. In **Zhang et al., "Block-Based Secret Sharing with Variable Block Sizes and Hybrid Coding Method"**, block sizes of $2 \times 2$, $4 \times 4$, or $8 \times 8$ are used, with the median edge detector (MED) employed as the pixel predictor. The authors propose two compression methods that leverage arithmetic coding and block properties to enhance embedding capacity, along with two novel secret-sharing techniques based on matrix theory. **Yu et al., "A Hybrid Coding Method for Block-Based Secret Sharing"** use block sizes of $4 \times 4$ or $8 \times 8$ and employ the MED for pixel prediction. They propose a hybrid coding method where each block dynamically selects between hierarchical coding and arithmetic coding to optimize embedding rates. While some of these schemes achieve high embedding capacity, their space-vacating methods are computationally expensive. Additionally, the embedding rate is highly dependent on the pixel correlation of the image. When pixel correlation is low, it becomes difficult to create sufficient space for embedding, reducing the effectiveness of block-based schemes. Furthermore, these approaches typically result in high data expansion rates, which can negatively impact transmission and storage efficiency. An exception is Chen~\textit{et al.}'s scheme**Chen et al., "Robust Data Hiding in Encrypted Images via Secret Sharing"**, which, although efficient, offers limited security.

\subsection{Non-Block-Based Schemes}
**Chen et al., "Direct Generation of Embedding Space through Secret Sharing for Robust Data Hiding in Encrypted Images"** proposed a scheme that directly generates the embedding space through secret sharing, bypassing pixel correlation. As a result, the secret sharing is performed based on pixels. Given an image of size $M \times N$, the content owner preprocesses it and uses an encryption key to generate $M \times N$ pseudorandom numbers. Each pseudorandom number becomes the first polynomial coefficient, with each original pixel serving as the second coefficient, resulting in $M \times N$ secret-sharing polynomials. For each polynomial, $n$ shares are generated, one of which is designated for data embedding. During decryption, the receiver regenerates the pseudorandom numbers using the encryption key. If a corrupted share is present, the receiver iterates through possible values for the damaged share. Lagrangian interpolation verifies if the recovered first polynomial coefficient matches the pseudorandom number, identifying the second coefficient as the original pixel value. The embedding rate of this scheme is $l/n$, where $n$ is the number of encrypted images and $l$ is the number of bit-planes replaced in the disrupted shares. The maximum embedding rate is 3.5 \textit{bpp}. While it overcomes pixel correlation limitations, the scheme has drawbacks: the embedding rate is limited, the data expansion rate is $n$, and the encryption process requires preprocessing. Additionally, decryption involves computationally expensive exhaustive search techniques.

\subsection{Discussions}
Secret sharing-based RDH-EI schemes can resist single-point failures and offer high embedding rates, making them more suitable in practical applications compared to traditional encryption-based schemes. However, existing schemes still have some drawbacks. In block-based schemes, the embedding rate depends on pixel correlation, and the space-vacating process is complex. In non-block-based schemes, the embedding rate is limited, and the decryption process is time-intensive. Both approaches also suffer from data expansion issues. To address these challenges, we propose novel space-vacating methods for block-based secret sharing and introduce two new block-based secret sharing schemes that effectively address these challenges.
%we recognize that high correlation exists not only within encrypted pixel blocks but also within the secret sharing method itself. Specifically, fewer random numbers are used during encryption, fewer shares are needed for decryption. Leveraging this correlation, we propose a novel decryption method for block-based secret sharing and introduce two block-based secret sharing schemes that address these problems effectively.