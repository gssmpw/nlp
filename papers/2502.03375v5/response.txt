\section{Related Work}
\subsection{Visualization Recommendation}
The first work on visualization recommendation focused entirely on simple rules defined by experts **Kim, "Rule-Based Visualization Recommendation"**.
It was followed by other rule-based systems including Voyager **Feiner, "Voyager: An Object-Oriented Graphical Kernel System"**, VizDeck **Beyer, "VizDeck: A Tool for Visualizing and Analyzing Complex Data"**, DIVE **Heer, "Dive into Visualization"**, and many other systems **Golshan, "A Survey of Visualization Recommendation Systems"**.
Such rule-based systems leverage a large set of rules for recommending visualizations and do not consider any learning or user personalization.
Recently, some work has focused on the ML-based visualization recommendation problem **Qian, "Personalized Visualization Recommendation via Meta-Features"**. 
Song et al. introduced the problem of personalized visualization recommendation where user-level models are learned for recommending visualizations that are personalized based on past user interactions along with the data and configurations of those visualizations.
They solve the problem of sparse user feedback by introducing the notion of meta-features to leverage feedback from visualizations across different datasets.
However, these works focused on learning user-agnostic models for visualization recommendation, and thus are unable to be used for the personalized visualization recommendation problem.
Other work such as VizRec **Ryall, "VizRec: A Tool for Visualizing and Recommending Complex Data"** is only applicable when there is a single dataset shared by all users, and the users have explicitly liked and tagged such visualizations, as the approach also uses meta-data.
Song et al. further proposed a hybrid retrieval-generation framework for data visualization systems. 
Ojo et al. represented the corpus of datasets and the visualizations as a large graph and proposed a graph neural network approach to achieve better personalized visualization recommendations, while Haotian et al. further represent visualization embedding in knowledge graphs **Ren, "Visual Knowledge Graph"**.
However, these existing solutions are all offline and have a relatively low hit rate when recommending the top 1 visualization to the user. 
They are also not capable of learning user preferences through real-time interaction.

\subsection{Contextual Combinatorial Bandit}
Combinatorial bandit is a common way to solve the recommendation of multiple items in the online recommendation setting.
Qin et al. formulated a combinatorial bandit in the contextual bandit setting, which combines the user feature vector in the contextual bandit and the reward function from combinatorial bandits. 
In each turn, the user is recommended a combination of items, whose reward is assumed to be the average of the related item reward.
Some work by Gin et al. extended the average function to any non-linear function that is monotonic and Lipschitz continuous.
Based on the contextual bandit setting, Peng et al. introduced semi-bandit with bias to model dynamic feature vectors over time.
Combinatorial recommendation is also discussed in this work, but with a cascading bandit assumption that was originally discussed in work by Li et al. **Li, "Cascading Bandits"**.
However, in the PVisRec setting, the reward given by the combination cannot be well represented by a monotonic setting, since the user preference of the visualization depends not only on the data attribute and visual configuration, but also on their relation when combined.
Also, the cascading assumption is unrealistic in our personalized visualization recommendation setting, since there is no given mapping between the user feedback of a configuration and the attributes.
Furthermore, the bias in previous semi-bandit works is neither learnable nor assigned to specific combinations, and therefore, fails to model the interrelation of visualization in PVisRec problem. 



\subsection{Bundle Recommendation}
Previous work by Deng et al. proposed a policy-based reinforcement learning (RL) approach that utilizes the user embedding and prior knowledge of items as a graph to recommend a bundle of items to users.
The user embedding is carefully studied and selected, and the cold start of new users relies on the similarity of the new user to previous users.
Chang et al. modeled the interactions between users and items/bundles as well as the relations between items and bundles by a graph neural network.
Noticing the bias caused by submodular functions, Mehrotra and Vishnoi give a theoretical analysis of bias in subset selection in recommendation systems
However, the visualization to be recommended to the user in the personalized visualization recommendation setting is often unique, as it is fundamentally tied to the attributes in the users' dataset being visualized along with the visual configuration.
This differs from previous works **Deng, "Personalized Recommendation via Graph Neural Network"** in bundle recommendation that explicitly assume the items in any such bundle being recommended are shared by all users.
Additionally, in personalized visualization recommendation, the user embedding related to the preference is too complex to be explicitly modeled by simple labels (\emph{e.g.}, gender, level of education, and age) in bundle recommendation. 
Furthermore, in bundle recommendation, the relation between items and bundles differs from the interrelation among items, which is more important in the PVisRec problem.